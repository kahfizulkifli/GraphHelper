digraph HloModule {
	"p7.83" [label="p7.83 \n bf16[30522,16]"];
	"convert.1402" [label="convert.1402 \n f32[30522,16]"];
	"p48.1395" [label="p48.1395 \n f32[30522,16]"];
	"p47.1394" [label="p47.1394 \n f32[] parameter(47), frontend_attributes="];
	"broadcast.1396" [label="broadcast.1396 \n f32[30522,16]"];
	"multiply.1397" [label="multiply.1397 \n f32[30522,16]"];
	"p42.1035" [label="p42.1035 \n bf16[16]"];
	"broadcast.1048" [label="broadcast.1048 \n bf16[16,128,16]"];
	"p32.737" [label="p32.737 \n bf16[16]"];
	"broadcast.750" [label="broadcast.750 \n bf16[16,128,16]"];
	"p26.552" [label="p26.552 \n bf16[16]"];
	"broadcast.565" [label="broadcast.565 \n bf16[16,128,16]"];
	"p14.206" [label="p14.206 \n bf16[16]"];
	"broadcast.219" [label="broadcast.219 \n bf16[16,128,16]"];
	"p6.81" [label="p6.81 \n s64[16,128]"];
	"convert.7" [label="convert.7 \n u32[16,128]"];
	"reshape.372" [label="reshape.372 \n u32[2048]"];
	"gather.92" [label="gather.92 \n bf16[2048,16]"];
	"p5.69" [label="p5.69 \n bf16[2,16]"];
	"p4.67" [label="p4.67 \n s64[16,128]"];
	"convert.6" [label="convert.6 \n u32[16,128]"];
	"reshape.371" [label="reshape.371 \n u32[2048]"];
	"gather.78" [label="gather.78 \n bf16[2048,16]"];
	"add.12" [label="add.12 \n bf16[2048,16]"];
	"reshape.516" [label="reshape.516 \n bf16[16,128,16]"];
	"p3.50" [label="p3.50 \n bf16[512,16]"];
	"p2.46" [label="p2.46 \n s64[1,512]"];
	"convert.5" [label="convert.5 \n u32[1,512]"];
	"slice.0" [label="slice.0 \n u32[1,128]"];
	"reshape.370" [label="reshape.370 \n u32[128]"];
	"gather.59" [label="gather.59 \n bf16[128,16]"];
	"broadcast.97" [label="broadcast.97 \n bf16[16,128,16]"];
	"add.98" [label="add.98 \n bf16[16,128,16]"];
	"reshape.99" [label="reshape.99 \n bf16[1,2048,16]"];
	"constant.36" [label="constant.36 \n bf16[] constant(1), metadata="];
	"broadcast.40" [label="broadcast.40 \n bf16[2048]"];
	"constant.31" [label="constant.31 \n bf16[] constant(0), metadata="];
	"broadcast.35" [label="broadcast.35 \n bf16[2048]"];
	"reshape.205" [label="reshape.205 \n bf16[16,128,16]"];
	"p8.118" [label="p8.118 \n bf16[16]"];
	"broadcast.215" [label="broadcast.215 \n bf16[16,128,16]"];
	"multiply.218" [label="multiply.218 \n bf16[16,128,16]"];
	"add.220" [label="add.220 \n bf16[16,128,16]"];
	"constant.129" [label="constant.129 \n s64[] constant(214013), metadata="];
	"p10.128" [label="p10.128 \n s64[] parameter(10), frontend_attributes="];
	"multiply.130" [label="multiply.130 \n s64[] multiply(s64[] %constant.129, s64[] %p10.128), metadata="];
	"constant.131" [label="constant.131 \n s64[] constant(2531011), metadata="];
	"add.132" [label="add.132 \n s64[] add(s64[] %multiply.130, s64[] %constant.131), metadata="];
	"convert.139" [label="convert.139 \n u64[] convert(s64[] %add.132), metadata="];
	"reshape.143" [label="reshape.143 \n u64[1]"];
	"constant.43" [label="constant.43 \n u64[1]"];
	"concatenate.145" [label="concatenate.145 \n u64[2]"];
	"constant.149" [label="constant.149 \n u32[] constant(9), metadata="];
	"broadcast.150" [label="broadcast.150 \n u32[16,128,16]"];
	"convert.152" [label="convert.152 \n f32[16,128,16]"];
	"broadcast.57" [label="broadcast.57 \n f32[16,128,16]"];
	"multiply.158" [label="multiply.158 \n f32[16,128,16]"];
	"convert.161" [label="convert.161 \n bf16[16,128,16]"];
	"p9.127" [label="p9.127 \n bf16[] parameter(9), frontend_attributes="];
	"broadcast.136" [label="broadcast.136 \n bf16[16,128,16]"];
	"compare.162" [label="compare.162 \n pred[16,128,16]"];
	"constant.27" [label="constant.27 \n bf16[] constant(1), metadata="];
	"broadcast.58" [label="broadcast.58 \n bf16[16,128,16]"];
	"broadcast.81" [label="broadcast.81 \n bf16[16,128,16]"];
	"select.13" [label="select.13 \n bf16[16,128,16]"];
	"multiply.459" [label="multiply.459 \n bf16[16,128,16]"];
	"reshape.279" [label="reshape.279 \n bf16[2048,16]"];
	"p11.171" [label="p11.171 \n bf16[16,16]"];
	"transpose.278" [label="transpose.278 \n bf16[16,16]"];
	"dot.280" [label="dot.280 \n bf16[2048,16]"];
	"reshape.281" [label="reshape.281 \n bf16[16,128,16]"];
	"p18.269" [label="p18.269 \n bf16[16]"];
	"broadcast.282" [label="broadcast.282 \n bf16[16,128,16]"];
	"add.283" [label="add.283 \n bf16[16,128,16]"];
	"reshape.286" [label="reshape.286 \n bf16[16,128,2,8]"];
	"transpose.287" [label="transpose.287 \n bf16[16,2,128,8]"];
	"reshape.289" [label="reshape.289 \n bf16[32,128,8]"];
	"reshape.222" [label="reshape.222 \n bf16[2048,16]"];
	"p13.195" [label="p13.195 \n bf16[16,16]"];
	"transpose.203" [label="transpose.203 \n bf16[16,16]"];
	"dot.223" [label="dot.223 \n bf16[2048,16]"];
	"reshape.224" [label="reshape.224 \n bf16[16,128,16]"];
	"p12.186" [label="p12.186 \n bf16[16]"];
	"broadcast.225" [label="broadcast.225 \n bf16[16,128,16]"];
	"add.226" [label="add.226 \n bf16[16,128,16]"];
	"reshape.229" [label="reshape.229 \n bf16[16,128,2,8]"];
	"transpose.231" [label="transpose.231 \n bf16[16,2,8,128]"];
	"reshape.263" [label="reshape.263 \n bf16[32,8,128]"];
	"dot.290" [label="dot.290 \n bf16[32,128,128]"];
	"p15.235" [label="p15.235 \n bf16[] parameter(15), frontend_attributes="];
	"broadcast.199" [label="broadcast.199 \n bf16[32,128,128]"];
	"divide.10" [label="divide.10 \n bf16[32,128,128]"];
	"reshape.524" [label="reshape.524 \n bf16[16,2,128,128]"];
	"constant.254" [label="constant.254 \n bf16[] constant(1), metadata="];
	"broadcast.201" [label="broadcast.201 \n bf16[16,128]"];
	"p17.242" [label="p17.242 \n s64[16,128]"];
	"convert.3" [label="convert.3 \n bf16[16,128]"];
	"subtract.4" [label="subtract.4 \n bf16[16,128]"];
	"p16.241" [label="p16.241 \n bf16[] parameter(16), frontend_attributes="];
	"broadcast.205" [label="broadcast.205 \n bf16[16,128]"];
	"multiply.32" [label="multiply.32 \n bf16[16,128]"];
	"broadcast.296" [label="broadcast.296 \n bf16[16,2,128,128]"];
	"add.297" [label="add.297 \n bf16[16,2,128,128]"];
	"constant.298" [label="constant.298 \n bf16[] constant(-inf), metadata="];
	"reduce.303" [label="reduce.303 \n bf16[16,2,128]"];
	"broadcast.304" [label="broadcast.304 \n bf16[16,2,128,128]"];
	"subtract.305" [label="subtract.305 \n bf16[16,2,128,128]"];
	"exponential.306" [label="exponential.306 \n bf16[16,2,128,128]"];
	"constant.307" [label="constant.307 \n bf16[] constant(0), metadata="];
	"reduce.312" [label="reduce.312 \n bf16[16,2,128]"];
	"broadcast.313" [label="broadcast.313 \n bf16[16,2,128,128]"];
	"divide.314" [label="divide.314 \n bf16[16,2,128,128]"];
	"constant.315" [label="constant.315 \n s64[] constant(214013), metadata="];
	"multiply.316" [label="multiply.316 \n s64[] multiply(s64[] %constant.315, s64[] %add.132), metadata="];
	"constant.317" [label="constant.317 \n s64[] constant(2531011), metadata="];
	"add.318" [label="add.318 \n s64[] add(s64[] %multiply.316, s64[] %constant.317), metadata="];
	"convert.325" [label="convert.325 \n u64[] convert(s64[] %add.318), metadata="];
	"reshape.329" [label="reshape.329 \n u64[1]"];
	"constant.48" [label="constant.48 \n u64[1]"];
	"concatenate.331" [label="concatenate.331 \n u64[2]"];
	"constant.335" [label="constant.335 \n u32[] constant(9), metadata="];
	"broadcast.336" [label="broadcast.336 \n u32[16,2,128,128]"];
	"convert.338" [label="convert.338 \n f32[16,2,128,128]"];
	"broadcast.62" [label="broadcast.62 \n f32[16,2,128,128]"];
	"multiply.344" [label="multiply.344 \n f32[16,2,128,128]"];
	"convert.347" [label="convert.347 \n bf16[16,2,128,128]"];
	"broadcast.322" [label="broadcast.322 \n bf16[16,2,128,128]"];
	"compare.348" [label="compare.348 \n pred[16,2,128,128]"];
	"constant.28" [label="constant.28 \n bf16[] constant(1), metadata="];
	"broadcast.63" [label="broadcast.63 \n bf16[16,2,128,128]"];
	"broadcast.80" [label="broadcast.80 \n bf16[16,2,128,128]"];
	"select.12" [label="select.12 \n bf16[16,2,128,128]"];
	"multiply.476" [label="multiply.476 \n bf16[16,2,128,128]"];
	"reshape.478" [label="reshape.478 \n bf16[32,128,128]"];
	"reshape.375" [label="reshape.375 \n bf16[2048,16]"];
	"p20.366" [label="p20.366 \n bf16[16,16]"];
	"transpose.374" [label="transpose.374 \n bf16[16,16]"];
	"dot.376" [label="dot.376 \n bf16[2048,16]"];
	"reshape.377" [label="reshape.377 \n bf16[16,128,16]"];
	"p19.357" [label="p19.357 \n bf16[16]"];
	"broadcast.378" [label="broadcast.378 \n bf16[16,128,16]"];
	"add.379" [label="add.379 \n bf16[16,128,16]"];
	"reshape.382" [label="reshape.382 \n bf16[16,128,2,8]"];
	"transpose.383" [label="transpose.383 \n bf16[16,2,128,8]"];
	"reshape.475" [label="reshape.475 \n bf16[32,128,8]"];
	"dot.479" [label="dot.479 \n bf16[32,128,8]"];
	"reshape.480" [label="reshape.480 \n bf16[16,2,128,8]"];
	"transpose.481" [label="transpose.481 \n bf16[16,128,2,8]"];
	"reshape.483" [label="reshape.483 \n bf16[2048,16]"];
	"p21.387" [label="p21.387 \n bf16[16,16]"];
	"transpose.474" [label="transpose.474 \n bf16[16,16]"];
	"dot.484" [label="dot.484 \n bf16[2048,16]"];
	"reshape.485" [label="reshape.485 \n bf16[16,128,16]"];
	"p22.465" [label="p22.465 \n bf16[16]"];
	"broadcast.486" [label="broadcast.486 \n bf16[16,128,16]"];
	"add.487" [label="add.487 \n bf16[16,128,16]"];
	"constant.397" [label="constant.397 \n s64[] constant(214013), metadata="];
	"multiply.398" [label="multiply.398 \n s64[] multiply(s64[] %constant.397, s64[] %add.318), metadata="];
	"constant.399" [label="constant.399 \n s64[] constant(2531011), metadata="];
	"add.400" [label="add.400 \n s64[] add(s64[] %multiply.398, s64[] %constant.399), metadata="];
	"convert.407" [label="convert.407 \n u64[] convert(s64[] %add.400), metadata="];
	"reshape.411" [label="reshape.411 \n u64[1]"];
	"constant.53" [label="constant.53 \n u64[1]"];
	"concatenate.413" [label="concatenate.413 \n u64[2]"];
	"constant.417" [label="constant.417 \n u32[] constant(9), metadata="];
	"broadcast.418" [label="broadcast.418 \n u32[16,128,16]"];
	"convert.420" [label="convert.420 \n f32[16,128,16]"];
	"broadcast.65" [label="broadcast.65 \n f32[16,128,16]"];
	"multiply.426" [label="multiply.426 \n f32[16,128,16]"];
	"convert.429" [label="convert.429 \n bf16[16,128,16]"];
	"broadcast.404" [label="broadcast.404 \n bf16[16,128,16]"];
	"compare.430" [label="compare.430 \n pred[16,128,16]"];
	"constant.29" [label="constant.29 \n bf16[] constant(1), metadata="];
	"broadcast.67" [label="broadcast.67 \n bf16[16,128,16]"];
	"broadcast.79" [label="broadcast.79 \n bf16[16,128,16]"];
	"select.11" [label="select.11 \n bf16[16,128,16]"];
	"multiply.490" [label="multiply.490 \n bf16[16,128,16]"];
	"add.491" [label="add.491 \n bf16[16,128,16]"];
	"reshape.492" [label="reshape.492 \n bf16[1,2048,16]"];
	"constant.449" [label="constant.449 \n bf16[] constant(1), metadata="];
	"broadcast.453" [label="broadcast.453 \n bf16[2048]"];
	"constant.444" [label="constant.444 \n bf16[] constant(0), metadata="];
	"broadcast.448" [label="broadcast.448 \n bf16[2048]"];
	"reshape.551" [label="reshape.551 \n bf16[16,128,16]"];
	"p23.511" [label="p23.511 \n bf16[16]"];
	"broadcast.561" [label="broadcast.561 \n bf16[16,128,16]"];
	"multiply.564" [label="multiply.564 \n bf16[16,128,16]"];
	"add.566" [label="add.566 \n bf16[16,128,16]"];
	"reshape.567" [label="reshape.567 \n bf16[2048,16]"];
	"p24.525" [label="p24.525 \n bf16[4096,16]"];
	"transpose.549" [label="transpose.549 \n bf16[16,4096]"];
	"dot.568" [label="dot.568 \n bf16[2048,4096]"];
	"reshape.569" [label="reshape.569 \n bf16[16,128,4096]"];
	"p25.540" [label="p25.540 \n bf16[4096]"];
	"broadcast.570" [label="broadcast.570 \n bf16[16,128,4096]"];
	"add.571" [label="add.571 \n bf16[16,128,4096]"];
	"reshape.669" [label="reshape.669 \n bf16[2048,4096]"];
	"p27.574" [label="p27.574 \n bf16[16,4096]"];
	"transpose.661" [label="transpose.661 \n bf16[4096,16]"];
	"dot.670" [label="dot.670 \n bf16[2048,16]"];
	"reshape.671" [label="reshape.671 \n bf16[16,128,16]"];
	"p28.652" [label="p28.652 \n bf16[16]"];
	"broadcast.672" [label="broadcast.672 \n bf16[16,128,16]"];
	"add.673" [label="add.673 \n bf16[16,128,16]"];
	"constant.584" [label="constant.584 \n s64[] constant(214013), metadata="];
	"multiply.585" [label="multiply.585 \n s64[] multiply(s64[] %constant.584, s64[] %add.400), metadata="];
	"constant.586" [label="constant.586 \n s64[] constant(2531011), metadata="];
	"add.587" [label="add.587 \n s64[] add(s64[] %multiply.585, s64[] %constant.586), metadata="];
	"convert.594" [label="convert.594 \n u64[] convert(s64[] %add.587), metadata="];
	"reshape.598" [label="reshape.598 \n u64[1]"];
	"constant.59" [label="constant.59 \n u64[1]"];
	"concatenate.600" [label="concatenate.600 \n u64[2]"];
	"constant.604" [label="constant.604 \n u32[] constant(9), metadata="];
	"broadcast.605" [label="broadcast.605 \n u32[16,128,16]"];
	"convert.607" [label="convert.607 \n f32[16,128,16]"];
	"broadcast.68" [label="broadcast.68 \n f32[16,128,16]"];
	"multiply.613" [label="multiply.613 \n f32[16,128,16]"];
	"convert.616" [label="convert.616 \n bf16[16,128,16]"];
	"broadcast.591" [label="broadcast.591 \n bf16[16,128,16]"];
	"compare.617" [label="compare.617 \n pred[16,128,16]"];
	"constant.30" [label="constant.30 \n bf16[] constant(1), metadata="];
	"broadcast.69" [label="broadcast.69 \n bf16[16,128,16]"];
	"broadcast.78" [label="broadcast.78 \n bf16[16,128,16]"];
	"select.10" [label="select.10 \n bf16[16,128,16]"];
	"multiply.676" [label="multiply.676 \n bf16[16,128,16]"];
	"add.677" [label="add.677 \n bf16[16,128,16]"];
	"reshape.678" [label="reshape.678 \n bf16[1,2048,16]"];
	"constant.636" [label="constant.636 \n bf16[] constant(1), metadata="];
	"broadcast.640" [label="broadcast.640 \n bf16[2048]"];
	"constant.631" [label="constant.631 \n bf16[] constant(0), metadata="];
	"broadcast.635" [label="broadcast.635 \n bf16[2048]"];
	"reshape.736" [label="reshape.736 \n bf16[16,128,16]"];
	"p29.697" [label="p29.697 \n bf16[16]"];
	"broadcast.746" [label="broadcast.746 \n bf16[16,128,16]"];
	"multiply.749" [label="multiply.749 \n bf16[16,128,16]"];
	"add.751" [label="add.751 \n bf16[16,128,16]"];
	"reshape.945" [label="reshape.945 \n bf16[2048,16]"];
	"p37.920" [label="p37.920 \n bf16[16,16]"];
	"transpose.944" [label="transpose.944 \n bf16[16,16]"];
	"dot.946" [label="dot.946 \n bf16[2048,16]"];
	"reshape.947" [label="reshape.947 \n bf16[16,128,16]"];
	"p38.935" [label="p38.935 \n bf16[16]"];
	"broadcast.948" [label="broadcast.948 \n bf16[16,128,16]"];
	"add.949" [label="add.949 \n bf16[16,128,16]"];
	"reshape.979" [label="reshape.979 \n bf16[1,2048,16]"];
	"constant.967" [label="constant.967 \n bf16[] constant(1), metadata="];
	"broadcast.971" [label="broadcast.971 \n bf16[2048]"];
	"constant.962" [label="constant.962 \n bf16[] constant(0), metadata="];
	"broadcast.966" [label="broadcast.966 \n bf16[2048]"];
	"reshape.1034" [label="reshape.1034 \n bf16[16,128,16]"];
	"p39.998" [label="p39.998 \n bf16[16]"];
	"broadcast.1044" [label="broadcast.1044 \n bf16[16,128,16]"];
	"multiply.1047" [label="multiply.1047 \n bf16[16,128,16]"];
	"add.1049" [label="add.1049 \n bf16[16,128,16]"];
	"reshape.1050" [label="reshape.1050 \n bf16[2048,16]"];
	"transpose.1032" [label="transpose.1032 \n bf16[16,30522]"];
	"dot.1051" [label="dot.1051 \n bf16[2048,30522]"];
	"reshape.1052" [label="reshape.1052 \n bf16[16,128,30522]"];
	"p41.1023" [label="p41.1023 \n bf16[30522]"];
	"broadcast.1053" [label="broadcast.1053 \n bf16[16,128,30522]"];
	"add.1054" [label="add.1054 \n bf16[16,128,30522]"];
	"reshape.1057" [label="reshape.1057 \n bf16[2048,30522]"];
	"reduce.0" [label="reduce.0 \n bf16[2048]"];
	"broadcast.0" [label="broadcast.0 \n bf16[2048,30522]"];
	"subtract.0" [label="subtract.0 \n bf16[2048,30522]"];
	"exponential.0" [label="exponential.0 \n bf16[2048,30522]"];
	"reduce.1" [label="reduce.1 \n bf16[2048]"];
	"log.0" [label="log.0 \n bf16[2048]"];
	"broadcast.1" [label="broadcast.1 \n bf16[2048,30522]"];
	"subtract.1" [label="subtract.1 \n bf16[2048,30522]"];
	"exponential.1" [label="exponential.1 \n bf16[2048,30522]"];
	"p40.1016" [label="p40.1016 \n s64[16,128]"];
	"broadcast.203" [label="broadcast.203 \n s64[16,128]"];
	"compare.8" [label="compare.8 \n pred[16,128]"];
	"reshape.527" [label="reshape.527 \n pred[2048]"];
	"constant.865" [label="constant.865 \n bf16[] constant(1), metadata="];
	"p36.864" [label="p36.864 \n bf16[] parameter(36), frontend_attributes="];
	"convert.0" [label="convert.0 \n bf16[2048]"];
	"reduce.5" [label="reduce.5 \n bf16[] reduce(bf16[2048]"];
	"broadcast.11" [label="broadcast.11 \n bf16[2048]"];
	"broadcast.71" [label="broadcast.71 \n bf16[2048]"];
	"select.7" [label="select.7 \n bf16[2048]"];
	"broadcast.12" [label="broadcast.12 \n bf16[2048,30522]"];
	"multiply.5" [label="multiply.5 \n bf16[2048,30522]"];
	"reshape.6" [label="reshape.6 \n s64[2048]"];
	"broadcast.16" [label="broadcast.16 \n s64[2048,30522]"];
	"iota.5" [label="iota.5 \n s64[2048,30522]"];
	"compare.2" [label="compare.2 \n pred[2048,30522]"];
	"broadcast.21" [label="broadcast.21 \n bf16[2048,30522]"];
	"broadcast.22" [label="broadcast.22 \n bf16[2048,30522]"];
	"select.1" [label="select.1 \n bf16[2048,30522]"];
	"add.0" [label="add.0 \n bf16[2048,30522]"];
	"reshape.1364" [label="reshape.1364 \n bf16[2048,16]"];
	"transpose.1365" [label="transpose.1365 \n bf16[16,2048]"];
	"constant.1344" [label="constant.1344 \n bf16[] constant(0), metadata="];
	"broadcast.1348" [label="broadcast.1348 \n bf16[30522,16]"];
	"reshape.1323" [label="reshape.1323 \n s64[2048]"];
	"constant.1338" [label="constant.1338 \n s64[] constant(0), metadata="];
	"broadcast.1339" [label="broadcast.1339 \n s64[2048]"];
	"compare.1340" [label="compare.1340 \n pred[2048]"];
	"p43.1332" [label="p43.1332 \n s64[] parameter(43), frontend_attributes="];
	"broadcast.1336" [label="broadcast.1336 \n s64[2048]"];
	"add.1337" [label="add.1337 \n s64[2048]"];
	"select.1341" [label="select.1341 \n s64[2048]"];
	"reshape.1342" [label="reshape.1342 \n s64[2048,1]"];
	"convert.1324" [label="convert.1324 \n f32[2048]"];
	"constant.1322" [label="constant.1322 \n f32[] constant(0), metadata="];
	"broadcast.1325" [label="broadcast.1325 \n f32[2048]"];
	"compare.1326" [label="compare.1326 \n pred[2048]"];
	"broadcast.1330" [label="broadcast.1330 \n pred[2048,16]"];
	"constant.108" [label="constant.108 \n bf16[] constant(1), metadata="];
	"broadcast.112" [label="broadcast.112 \n bf16[2048]"];
	"constant.104" [label="constant.104 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.105" [label="broadcast.105 \n bf16[2048]"];
	"add.106" [label="add.106 \n bf16[2048]"];
	"multiply.1313" [label="multiply.1313 \n bf16[2048]"];
	"broadcast.72" [label="broadcast.72 \n bf16[2048]"];
	"add.8" [label="add.8 \n bf16[2048]"];
	"constant.501" [label="constant.501 \n bf16[] constant(1), metadata="];
	"broadcast.505" [label="broadcast.505 \n bf16[2048]"];
	"constant.497" [label="constant.497 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.498" [label="broadcast.498 \n bf16[2048]"];
	"add.499" [label="add.499 \n bf16[2048]"];
	"sqrt.1" [label="sqrt.1 \n bf16[2048]"];
	"multiply.1228" [label="multiply.1228 \n bf16[2048]"];
	"broadcast.73" [label="broadcast.73 \n bf16[2048]"];
	"add.9" [label="add.9 \n bf16[2048]"];
	"constant.687" [label="constant.687 \n bf16[] constant(1), metadata="];
	"broadcast.691" [label="broadcast.691 \n bf16[2048]"];
	"constant.683" [label="constant.683 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.684" [label="broadcast.684 \n bf16[2048]"];
	"add.685" [label="add.685 \n bf16[2048]"];
	"sqrt.2" [label="sqrt.2 \n bf16[2048]"];
	"multiply.1194" [label="multiply.1194 \n bf16[2048]"];
	"broadcast.74" [label="broadcast.74 \n bf16[2048]"];
	"add.10" [label="add.10 \n bf16[2048]"];
	"constant.988" [label="constant.988 \n bf16[] constant(1), metadata="];
	"broadcast.992" [label="broadcast.992 \n bf16[2048]"];
	"constant.984" [label="constant.984 \n bf16[] constant(1.002e-12), metadata="];
	"broadcast.985" [label="broadcast.985 \n bf16[2048]"];
	"add.986" [label="add.986 \n bf16[2048]"];
	"sqrt.3" [label="sqrt.3 \n bf16[2048]"];
	"multiply.1165" [label="multiply.1165 \n bf16[2048]"];
	"broadcast.75" [label="broadcast.75 \n bf16[2048]"];
	"add.11" [label="add.11 \n bf16[2048]"];
	"dot.1156" [label="dot.1156 \n bf16[2048,16]"];
	"reshape.1157" [label="reshape.1157 \n bf16[16,128,16]"];
	"broadcast.1158" [label="broadcast.1158 \n bf16[16,128,16]"];
	"multiply.1159" [label="multiply.1159 \n bf16[16,128,16]"];
	"reshape.1160" [label="reshape.1160 \n bf16[1,2048,16]"];
	"reshape.1172" [label="reshape.1172 \n bf16[16,128,16]"];
	"multiply.6" [label="multiply.6 \n bf16[16,128,16]"];
	"reshape.1183" [label="reshape.1183 \n bf16[2048,16]"];
	"dot.1184" [label="dot.1184 \n bf16[2048,16]"];
	"reshape.1185" [label="reshape.1185 \n bf16[16,128,16]"];
	"slice.753" [label="slice.753 \n bf16[16,1,16]"];
	"reshape.754" [label="reshape.754 \n bf16[16,16]"];
	"p30.711" [label="p30.711 \n bf16[16,16]"];
	"transpose.734" [label="transpose.734 \n bf16[16,16]"];
	"dot.755" [label="dot.755 \n bf16[16,16]"];
	"p31.726" [label="p31.726 \n bf16[16]"];
	"broadcast.759" [label="broadcast.759 \n bf16[16,16]"];
	"add.760" [label="add.760 \n bf16[16,16]"];
	"tanh.761" [label="tanh.761 \n bf16[16,16]"];
	"p33.775" [label="p33.775 \n bf16[2,16]"];
	"transpose.794" [label="transpose.794 \n bf16[16,2]"];
	"dot.795" [label="dot.795 \n bf16[16,2]"];
	"p35.786" [label="p35.786 \n bf16[2]"];
	"broadcast.799" [label="broadcast.799 \n bf16[16,2]"];
	"add.800" [label="add.800 \n bf16[16,2]"];
	"reduce.6" [label="reduce.6 \n bf16[16]"];
	"broadcast.24" [label="broadcast.24 \n bf16[16,2]"];
	"subtract.2" [label="subtract.2 \n bf16[16,2]"];
	"exponential.2" [label="exponential.2 \n bf16[16,2]"];
	"reduce.7" [label="reduce.7 \n bf16[16]"];
	"log.1" [label="log.1 \n bf16[16]"];
	"broadcast.26" [label="broadcast.26 \n bf16[16,2]"];
	"subtract.3" [label="subtract.3 \n bf16[16,2]"];
	"exponential.3" [label="exponential.3 \n bf16[16,2]"];
	"p34.785" [label="p34.785 \n s64[16]"];
	"broadcast.37" [label="broadcast.37 \n s64[16]"];
	"compare.4" [label="compare.4 \n pred[16]"];
	"convert.1" [label="convert.1 \n bf16[16]"];
	"reduce.11" [label="reduce.11 \n bf16[] reduce(bf16[16]"];
	"broadcast.39" [label="broadcast.39 \n bf16[16]"];
	"broadcast.77" [label="broadcast.77 \n bf16[16]"];
	"select.9" [label="select.9 \n bf16[16]"];
	"broadcast.41" [label="broadcast.41 \n bf16[16,2]"];
	"multiply.11" [label="multiply.11 \n bf16[16,2]"];
	"broadcast.44" [label="broadcast.44 \n s64[16,2]"];
	"iota.7" [label="iota.7 \n s64[16,2]"];
	"compare.5" [label="compare.5 \n pred[16,2]"];
	"broadcast.48" [label="broadcast.48 \n bf16[16,2]"];
	"broadcast.49" [label="broadcast.49 \n bf16[16,2]"];
	"select.3" [label="select.3 \n bf16[16,2]"];
	"add.1" [label="add.1 \n bf16[16,2]"];
	"dot.901" [label="dot.901 \n bf16[16,16]"];
	"constant.769" [label="constant.769 \n bf16[] constant(1), metadata="];
	"broadcast.773" [label="broadcast.773 \n bf16[16,16]"];
	"multiply.768" [label="multiply.768 \n bf16[16,16]"];
	"subtract.774" [label="subtract.774 \n bf16[16,16]"];
	"multiply.902" [label="multiply.902 \n bf16[16,16]"];
	"dot.903" [label="dot.903 \n bf16[16,16]"];
	"reshape.904" [label="reshape.904 \n bf16[16,1,16]"];
	"add.1186" [label="add.1186 \n bf16[16,128,16]"];
	"broadcast.1187" [label="broadcast.1187 \n bf16[16,128,16]"];
	"multiply.1188" [label="multiply.1188 \n bf16[16,128,16]"];
	"reshape.1189" [label="reshape.1189 \n bf16[1,2048,16]"];
	"reshape.1201" [label="reshape.1201 \n bf16[16,128,16]"];
	"multiply.1202" [label="multiply.1202 \n bf16[16,128,16]"];
	"reshape.1203" [label="reshape.1203 \n bf16[2048,16]"];
	"dot.1204" [label="dot.1204 \n bf16[2048,4096]"];
	"reshape.1205" [label="reshape.1205 \n bf16[16,128,4096]"];
	"multiply.12" [label="multiply.12 \n bf16[16,128,4096]"];
	"reshape.1216" [label="reshape.1216 \n bf16[2048,4096]"];
	"dot.1217" [label="dot.1217 \n bf16[2048,16]"];
	"reshape.1218" [label="reshape.1218 \n bf16[16,128,16]"];
	"add.1220" [label="add.1220 \n bf16[16,128,16]"];
	"broadcast.1221" [label="broadcast.1221 \n bf16[16,128,16]"];
	"multiply.1222" [label="multiply.1222 \n bf16[16,128,16]"];
	"reshape.1223" [label="reshape.1223 \n bf16[1,2048,16]"];
	"reshape.1235" [label="reshape.1235 \n bf16[16,128,16]"];
	"reshape.1292" [label="reshape.1292 \n bf16[32,128,128]"];
	"transpose.1293" [label="transpose.1293 \n bf16[32,128,128]"];
	"multiply.1236" [label="multiply.1236 \n bf16[16,128,16]"];
	"reshape.1237" [label="reshape.1237 \n bf16[2048,16]"];
	"dot.1238" [label="dot.1238 \n bf16[2048,16]"];
	"reshape.1240" [label="reshape.1240 \n bf16[16,128,2,8]"];
	"transpose.1241" [label="transpose.1241 \n bf16[16,2,128,8]"];
	"reshape.1242" [label="reshape.1242 \n bf16[32,128,8]"];
	"dot.1294" [label="dot.1294 \n bf16[32,128,8]"];
	"reshape.1295" [label="reshape.1295 \n bf16[16,2,128,8]"];
	"transpose.1296" [label="transpose.1296 \n bf16[16,128,2,8]"];
	"reshape.1298" [label="reshape.1298 \n bf16[2048,16]"];
	"dot.1299" [label="dot.1299 \n bf16[2048,16]"];
	"reshape.1300" [label="reshape.1300 \n bf16[16,128,16]"];
	"add.1302" [label="add.1302 \n bf16[16,128,16]"];
	"reshape.1274" [label="reshape.1274 \n bf16[32,128,8]"];
	"transpose.1275" [label="transpose.1275 \n bf16[32,8,128]"];
	"reshape.385" [label="reshape.385 \n bf16[32,128,8]"];
	"transpose.386" [label="transpose.386 \n bf16[32,8,128]"];
	"dot.1243" [label="dot.1243 \n bf16[32,128,128]"];
	"reshape.1244" [label="reshape.1244 \n bf16[16,2,128,128]"];
	"multiply.1245" [label="multiply.1245 \n bf16[16,2,128,128]"];
	"multiply.1246" [label="multiply.1246 \n bf16[16,2,128,128]"];
	"constant.1247" [label="constant.1247 \n bf16[] constant(0), metadata="];
	"reduce.1252" [label="reduce.1252 \n bf16[16,2,128]"];
	"broadcast.1253" [label="broadcast.1253 \n bf16[16,2,128,128]"];
	"subtract.1254" [label="subtract.1254 \n bf16[16,2,128,128]"];
	"multiply.1255" [label="multiply.1255 \n bf16[16,2,128,128]"];
	"broadcast.1256" [label="broadcast.1256 \n bf16[16,2,128,128]"];
	"divide.1257" [label="divide.1257 \n bf16[16,2,128,128]"];
	"reshape.1258" [label="reshape.1258 \n bf16[32,128,128]"];
	"dot.1276" [label="dot.1276 \n bf16[32,8,128]"];
	"reshape.1277" [label="reshape.1277 \n bf16[16,2,8,128]"];
	"transpose.1279" [label="transpose.1279 \n bf16[16,128,2,8]"];
	"reshape.1281" [label="reshape.1281 \n bf16[2048,16]"];
	"dot.1282" [label="dot.1282 \n bf16[2048,16]"];
	"reshape.1283" [label="reshape.1283 \n bf16[16,128,16]"];
	"add.1303" [label="add.1303 \n bf16[16,128,16]"];
	"reshape.233" [label="reshape.233 \n bf16[32,8,128]"];
	"transpose.234" [label="transpose.234 \n bf16[32,128,8]"];
	"dot.1259" [label="dot.1259 \n bf16[32,128,8]"];
	"reshape.1260" [label="reshape.1260 \n bf16[16,2,128,8]"];
	"transpose.1261" [label="transpose.1261 \n bf16[16,128,2,8]"];
	"reshape.1263" [label="reshape.1263 \n bf16[2048,16]"];
	"dot.1264" [label="dot.1264 \n bf16[2048,16]"];
	"reshape.1265" [label="reshape.1265 \n bf16[16,128,16]"];
	"add.1304" [label="add.1304 \n bf16[16,128,16]"];
	"multiply.1305" [label="multiply.1305 \n bf16[16,128,16]"];
	"broadcast.1306" [label="broadcast.1306 \n bf16[16,128,16]"];
	"multiply.1307" [label="multiply.1307 \n bf16[16,128,16]"];
	"reshape.1308" [label="reshape.1308 \n bf16[1,2048,16]"];
	"reshape.1321" [label="reshape.1321 \n bf16[2048,16]"];
	"constant.16" [label="constant.16 \n bf16[] constant(0), metadata="];
	"broadcast.20" [label="broadcast.20 \n bf16[2048,16]"];
	"select.1331" [label="select.1331 \n bf16[2048,16]"];
	"scatter.1354" [label="scatter.1354 \n bf16[30522,16]"];
	"add.1375" [label="add.1375 \n bf16[30522,16]"];
	"convert.1376" [label="convert.1376 \n f32[30522,16]"];
	"p46.1388" [label="p46.1388 \n f32[] parameter(46), frontend_attributes="];
	"broadcast.1392" [label="broadcast.1392 \n f32[30522,16]"];
	"multiply.1393" [label="multiply.1393 \n f32[30522,16]"];
	"add.1398" [label="add.1398 \n f32[30522,16]"];
	"p45.1378" [label="p45.1378 \n f32[30522,16]"];
	"p44.1377" [label="p44.1377 \n f32[] parameter(44), frontend_attributes="];
	"broadcast.1379" [label="broadcast.1379 \n f32[30522,16]"];
	"multiply.1380" [label="multiply.1380 \n f32[30522,16]"];
	"multiply.1381" [label="multiply.1381 \n f32[30522,16]"];
	"p1.10" [label="p1.10 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.1382" [label="broadcast.1382 \n f32[30522,16]"];
	"multiply.1383" [label="multiply.1383 \n f32[30522,16]"];
	"add.1384" [label="add.1384 \n f32[30522,16]"];
	"sqrt.1385" [label="sqrt.1385 \n f32[30522,16]"];
	"p0.8" [label="p0.8 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.1386" [label="broadcast.1386 \n f32[30522,16]"];
	"add.1387" [label="add.1387 \n f32[30522,16]"];
	"divide.1399" [label="divide.1399 \n f32[30522,16]"];
	"constant.6" [label="constant.6 \n f32[] constant(-0), metadata="];
	"broadcast.1400" [label="broadcast.1400 \n f32[30522,16]"];
	"multiply.1401" [label="multiply.1401 \n f32[30522,16]"];
	"add.1403" [label="add.1403 \n f32[30522,16]"];
	"convert.1404" [label="convert.1404 \n bf16[30522,16]"];
	"constant.1" [label="constant.1 \n bf16[] constant(-0), metadata="];
	"broadcast.5" [label="broadcast.5 \n bf16[30522,16]"];
	"multiply.1405" [label="multiply.1405 \n bf16[30522,16]"];
	"add.1406" [label="add.1406 \n bf16[30522,16]"];
	"convert.1478" [label="convert.1478 \n f32[512,16]"];
	"p50.1471" [label="p50.1471 \n f32[512,16]"];
	"broadcast.1472" [label="broadcast.1472 \n f32[512,16]"];
	"multiply.1473" [label="multiply.1473 \n f32[512,16]"];
	"broadcast.50" [label="broadcast.50 \n bf16[512,16]"];
	"slice.1416" [label="slice.1416 \n s64[1,128]"];
	"reshape.16" [label="reshape.16 \n s64[128]"];
	"broadcast.51" [label="broadcast.51 \n s64[128]"];
	"compare.6" [label="compare.6 \n pred[128]"];
	"broadcast.52" [label="broadcast.52 \n s64[128]"];
	"add.2" [label="add.2 \n s64[128]"];
	"select.4" [label="select.4 \n s64[128]"];
	"reshape.18" [label="reshape.18 \n s64[128,1]"];
	"reshape.1417" [label="reshape.1417 \n bf16[16,128,16]"];
	"constant.1418" [label="constant.1418 \n bf16[] constant(0), metadata="];
	"reduce.1424" [label="reduce.1424 \n bf16[128,16]"];
	"scatter.0" [label="scatter.0 \n bf16[512,16]"];
	"convert.1455" [label="convert.1455 \n f32[512,16]"];
	"broadcast.1469" [label="broadcast.1469 \n f32[512,16]"];
	"multiply.1470" [label="multiply.1470 \n f32[512,16]"];
	"add.1474" [label="add.1474 \n f32[512,16]"];
	"p49.1456" [label="p49.1456 \n f32[512,16]"];
	"broadcast.1457" [label="broadcast.1457 \n f32[512,16]"];
	"multiply.1458" [label="multiply.1458 \n f32[512,16]"];
	"multiply.1459" [label="multiply.1459 \n f32[512,16]"];
	"broadcast.1460" [label="broadcast.1460 \n f32[512,16]"];
	"multiply.1461" [label="multiply.1461 \n f32[512,16]"];
	"add.1462" [label="add.1462 \n f32[512,16]"];
	"sqrt.1463" [label="sqrt.1463 \n f32[512,16]"];
	"broadcast.1464" [label="broadcast.1464 \n f32[512,16]"];
	"add.1465" [label="add.1465 \n f32[512,16]"];
	"divide.1475" [label="divide.1475 \n f32[512,16]"];
	"constant.1412" [label="constant.1412 \n f32[] constant(-0), metadata="];
	"broadcast.1476" [label="broadcast.1476 \n f32[512,16]"];
	"multiply.1477" [label="multiply.1477 \n f32[512,16]"];
	"add.1479" [label="add.1479 \n f32[512,16]"];
	"convert.1480" [label="convert.1480 \n bf16[512,16]"];
	"constant.1407" [label="constant.1407 \n bf16[] constant(-0), metadata="];
	"broadcast.1411" [label="broadcast.1411 \n bf16[512,16]"];
	"multiply.1481" [label="multiply.1481 \n bf16[512,16]"];
	"add.1482" [label="add.1482 \n bf16[512,16]"];
	"convert.1543" [label="convert.1543 \n f32[2,16]"];
	"p52.1536" [label="p52.1536 \n f32[2,16]"];
	"broadcast.1537" [label="broadcast.1537 \n f32[2,16]"];
	"multiply.1538" [label="multiply.1538 \n f32[2,16]"];
	"broadcast.53" [label="broadcast.53 \n bf16[2,16]"];
	"reshape.21" [label="reshape.21 \n s64[2048]"];
	"broadcast.54" [label="broadcast.54 \n s64[2048]"];
	"compare.7" [label="compare.7 \n pred[2048]"];
	"broadcast.55" [label="broadcast.55 \n s64[2048]"];
	"add.3" [label="add.3 \n s64[2048]"];
	"select.5" [label="select.5 \n s64[2048]"];
	"reshape.23" [label="reshape.23 \n s64[2048,1]"];
	"reshape.25" [label="reshape.25 \n bf16[2048,16]"];
	"scatter.1" [label="scatter.1 \n bf16[2,16]"];
	"convert.1520" [label="convert.1520 \n f32[2,16]"];
	"broadcast.1534" [label="broadcast.1534 \n f32[2,16]"];
	"multiply.1535" [label="multiply.1535 \n f32[2,16]"];
	"add.1539" [label="add.1539 \n f32[2,16]"];
	"p51.1521" [label="p51.1521 \n f32[2,16]"];
	"broadcast.1522" [label="broadcast.1522 \n f32[2,16]"];
	"multiply.1523" [label="multiply.1523 \n f32[2,16]"];
	"multiply.1524" [label="multiply.1524 \n f32[2,16]"];
	"broadcast.1525" [label="broadcast.1525 \n f32[2,16]"];
	"multiply.1526" [label="multiply.1526 \n f32[2,16]"];
	"add.1527" [label="add.1527 \n f32[2,16]"];
	"sqrt.1528" [label="sqrt.1528 \n f32[2,16]"];
	"broadcast.1529" [label="broadcast.1529 \n f32[2,16]"];
	"add.1530" [label="add.1530 \n f32[2,16]"];
	"divide.1540" [label="divide.1540 \n f32[2,16]"];
	"constant.1488" [label="constant.1488 \n f32[] constant(-0), metadata="];
	"broadcast.1541" [label="broadcast.1541 \n f32[2,16]"];
	"multiply.1542" [label="multiply.1542 \n f32[2,16]"];
	"add.1544" [label="add.1544 \n f32[2,16]"];
	"convert.1545" [label="convert.1545 \n bf16[2,16]"];
	"constant.1483" [label="constant.1483 \n bf16[] constant(-0), metadata="];
	"broadcast.1487" [label="broadcast.1487 \n bf16[2,16]"];
	"multiply.1546" [label="multiply.1546 \n bf16[2,16]"];
	"add.1547" [label="add.1547 \n bf16[2,16]"];
	"convert.1597" [label="convert.1597 \n f32[16]"];
	"p54.1590" [label="p54.1590 \n f32[16]"];
	"broadcast.1591" [label="broadcast.1591 \n f32[16]"];
	"multiply.1592" [label="multiply.1592 \n f32[16]"];
	"multiply.1557" [label="multiply.1557 \n bf16[16,128,16]"];
	"constant.1558" [label="constant.1558 \n bf16[] constant(0), metadata="];
	"reduce.1564" [label="reduce.1564 \n bf16[16]"];
	"convert.1574" [label="convert.1574 \n f32[16]"];
	"broadcast.1588" [label="broadcast.1588 \n f32[16]"];
	"multiply.1589" [label="multiply.1589 \n f32[16]"];
	"add.1593" [label="add.1593 \n f32[16]"];
	"p53.1575" [label="p53.1575 \n f32[16]"];
	"broadcast.1576" [label="broadcast.1576 \n f32[16]"];
	"multiply.1577" [label="multiply.1577 \n f32[16]"];
	"multiply.1578" [label="multiply.1578 \n f32[16]"];
	"broadcast.1579" [label="broadcast.1579 \n f32[16]"];
	"multiply.1580" [label="multiply.1580 \n f32[16]"];
	"add.1581" [label="add.1581 \n f32[16]"];
	"sqrt.1582" [label="sqrt.1582 \n f32[16]"];
	"broadcast.1583" [label="broadcast.1583 \n f32[16]"];
	"add.1584" [label="add.1584 \n f32[16]"];
	"divide.1594" [label="divide.1594 \n f32[16]"];
	"constant.1548" [label="constant.1548 \n f32[] constant(-0), metadata="];
	"broadcast.1595" [label="broadcast.1595 \n f32[16]"];
	"multiply.1596" [label="multiply.1596 \n f32[16]"];
	"add.1598" [label="add.1598 \n f32[16]"];
	"convert.1599" [label="convert.1599 \n bf16[16]"];
	"convert.1642" [label="convert.1642 \n f32[16]"];
	"p56.1635" [label="p56.1635 \n f32[16]"];
	"broadcast.1636" [label="broadcast.1636 \n f32[16]"];
	"multiply.1637" [label="multiply.1637 \n f32[16]"];
	"constant.1603" [label="constant.1603 \n bf16[] constant(0), metadata="];
	"reduce.1609" [label="reduce.1609 \n bf16[16]"];
	"convert.1619" [label="convert.1619 \n f32[16]"];
	"broadcast.1633" [label="broadcast.1633 \n f32[16]"];
	"multiply.1634" [label="multiply.1634 \n f32[16]"];
	"add.1638" [label="add.1638 \n f32[16]"];
	"p55.1620" [label="p55.1620 \n f32[16]"];
	"broadcast.1621" [label="broadcast.1621 \n f32[16]"];
	"multiply.1622" [label="multiply.1622 \n f32[16]"];
	"multiply.1623" [label="multiply.1623 \n f32[16]"];
	"broadcast.1624" [label="broadcast.1624 \n f32[16]"];
	"multiply.1625" [label="multiply.1625 \n f32[16]"];
	"add.1626" [label="add.1626 \n f32[16]"];
	"sqrt.1627" [label="sqrt.1627 \n f32[16]"];
	"broadcast.1628" [label="broadcast.1628 \n f32[16]"];
	"add.1629" [label="add.1629 \n f32[16]"];
	"divide.1639" [label="divide.1639 \n f32[16]"];
	"constant.1600" [label="constant.1600 \n f32[] constant(-0), metadata="];
	"broadcast.1640" [label="broadcast.1640 \n f32[16]"];
	"multiply.1641" [label="multiply.1641 \n f32[16]"];
	"add.1643" [label="add.1643 \n f32[16]"];
	"convert.1644" [label="convert.1644 \n bf16[16]"];
	"convert.1687" [label="convert.1687 \n f32[16,16]"];
	"p58.1680" [label="p58.1680 \n f32[16,16]"];
	"broadcast.1681" [label="broadcast.1681 \n f32[16,16]"];
	"multiply.1682" [label="multiply.1682 \n f32[16,16]"];
	"reshape.1653" [label="reshape.1653 \n bf16[2048,16]"];
	"transpose.1654" [label="transpose.1654 \n bf16[16,2048]"];
	"dot.1" [label="dot.1 \n bf16[16,16]"];
	"convert.1664" [label="convert.1664 \n f32[16,16]"];
	"broadcast.1678" [label="broadcast.1678 \n f32[16,16]"];
	"multiply.1679" [label="multiply.1679 \n f32[16,16]"];
	"add.1683" [label="add.1683 \n f32[16,16]"];
	"p57.1665" [label="p57.1665 \n f32[16,16]"];
	"broadcast.1666" [label="broadcast.1666 \n f32[16,16]"];
	"multiply.1667" [label="multiply.1667 \n f32[16,16]"];
	"multiply.1668" [label="multiply.1668 \n f32[16,16]"];
	"broadcast.1669" [label="broadcast.1669 \n f32[16,16]"];
	"multiply.1670" [label="multiply.1670 \n f32[16,16]"];
	"add.1671" [label="add.1671 \n f32[16,16]"];
	"sqrt.1672" [label="sqrt.1672 \n f32[16,16]"];
	"broadcast.1673" [label="broadcast.1673 \n f32[16,16]"];
	"add.1674" [label="add.1674 \n f32[16,16]"];
	"divide.1684" [label="divide.1684 \n f32[16,16]"];
	"constant.1650" [label="constant.1650 \n f32[] constant(-0), metadata="];
	"broadcast.1685" [label="broadcast.1685 \n f32[16,16]"];
	"multiply.1686" [label="multiply.1686 \n f32[16,16]"];
	"add.1688" [label="add.1688 \n f32[16,16]"];
	"convert.1689" [label="convert.1689 \n bf16[16,16]"];
	"constant.1645" [label="constant.1645 \n bf16[] constant(-0), metadata="];
	"broadcast.1649" [label="broadcast.1649 \n bf16[16,16]"];
	"multiply.1690" [label="multiply.1690 \n bf16[16,16]"];
	"add.1691" [label="add.1691 \n bf16[16,16]"];
	"convert.1737" [label="convert.1737 \n f32[16]"];
	"p60.1730" [label="p60.1730 \n f32[16]"];
	"broadcast.1731" [label="broadcast.1731 \n f32[16]"];
	"multiply.1732" [label="multiply.1732 \n f32[16]"];
	"reshape.1695" [label="reshape.1695 \n bf16[16,2,128,8]"];
	"constant.1698" [label="constant.1698 \n bf16[] constant(0), metadata="];
	"reduce.12" [label="reduce.12 \n bf16[2,8]"];
	"reshape.1706" [label="reshape.1706 \n bf16[16]"];
	"convert.1714" [label="convert.1714 \n f32[16]"];
	"broadcast.1728" [label="broadcast.1728 \n f32[16]"];
	"multiply.1729" [label="multiply.1729 \n f32[16]"];
	"add.1733" [label="add.1733 \n f32[16]"];
	"p59.1715" [label="p59.1715 \n f32[16]"];
	"broadcast.1716" [label="broadcast.1716 \n f32[16]"];
	"multiply.1717" [label="multiply.1717 \n f32[16]"];
	"multiply.1718" [label="multiply.1718 \n f32[16]"];
	"broadcast.1719" [label="broadcast.1719 \n f32[16]"];
	"multiply.1720" [label="multiply.1720 \n f32[16]"];
	"add.1721" [label="add.1721 \n f32[16]"];
	"sqrt.1722" [label="sqrt.1722 \n f32[16]"];
	"broadcast.1723" [label="broadcast.1723 \n f32[16]"];
	"add.1724" [label="add.1724 \n f32[16]"];
	"divide.1734" [label="divide.1734 \n f32[16]"];
	"constant.1692" [label="constant.1692 \n f32[] constant(-0), metadata="];
	"broadcast.1735" [label="broadcast.1735 \n f32[16]"];
	"multiply.1736" [label="multiply.1736 \n f32[16]"];
	"add.1738" [label="add.1738 \n f32[16]"];
	"convert.1739" [label="convert.1739 \n bf16[16]"];
	"convert.1782" [label="convert.1782 \n f32[16,16]"];
	"p62.1775" [label="p62.1775 \n f32[16,16]"];
	"broadcast.1776" [label="broadcast.1776 \n f32[16,16]"];
	"multiply.1777" [label="multiply.1777 \n f32[16,16]"];
	"reshape.1748" [label="reshape.1748 \n bf16[2048,16]"];
	"transpose.1749" [label="transpose.1749 \n bf16[16,2048]"];
	"dot.2" [label="dot.2 \n bf16[16,16]"];
	"convert.1759" [label="convert.1759 \n f32[16,16]"];
	"broadcast.1773" [label="broadcast.1773 \n f32[16,16]"];
	"multiply.1774" [label="multiply.1774 \n f32[16,16]"];
	"add.1778" [label="add.1778 \n f32[16,16]"];
	"p61.1760" [label="p61.1760 \n f32[16,16]"];
	"broadcast.1761" [label="broadcast.1761 \n f32[16,16]"];
	"multiply.1762" [label="multiply.1762 \n f32[16,16]"];
	"multiply.1763" [label="multiply.1763 \n f32[16,16]"];
	"broadcast.1764" [label="broadcast.1764 \n f32[16,16]"];
	"multiply.1765" [label="multiply.1765 \n f32[16,16]"];
	"add.1766" [label="add.1766 \n f32[16,16]"];
	"sqrt.1767" [label="sqrt.1767 \n f32[16,16]"];
	"broadcast.1768" [label="broadcast.1768 \n f32[16,16]"];
	"add.1769" [label="add.1769 \n f32[16,16]"];
	"divide.1779" [label="divide.1779 \n f32[16,16]"];
	"constant.1745" [label="constant.1745 \n f32[] constant(-0), metadata="];
	"broadcast.1780" [label="broadcast.1780 \n f32[16,16]"];
	"multiply.1781" [label="multiply.1781 \n f32[16,16]"];
	"add.1783" [label="add.1783 \n f32[16,16]"];
	"convert.1784" [label="convert.1784 \n bf16[16,16]"];
	"constant.1740" [label="constant.1740 \n bf16[] constant(-0), metadata="];
	"broadcast.1744" [label="broadcast.1744 \n bf16[16,16]"];
	"multiply.1785" [label="multiply.1785 \n bf16[16,16]"];
	"add.1786" [label="add.1786 \n bf16[16,16]"];
	"convert.1833" [label="convert.1833 \n f32[16]"];
	"p64.1826" [label="p64.1826 \n f32[16]"];
	"broadcast.1827" [label="broadcast.1827 \n f32[16]"];
	"multiply.1828" [label="multiply.1828 \n f32[16]"];
	"reshape.1790" [label="reshape.1790 \n bf16[16,2,8,128]"];
	"constant.1794" [label="constant.1794 \n bf16[] constant(0), metadata="];
	"reduce.13" [label="reduce.13 \n bf16[2,8]"];
	"reshape.1802" [label="reshape.1802 \n bf16[16]"];
	"convert.1810" [label="convert.1810 \n f32[16]"];
	"broadcast.1824" [label="broadcast.1824 \n f32[16]"];
	"multiply.1825" [label="multiply.1825 \n f32[16]"];
	"add.1829" [label="add.1829 \n f32[16]"];
	"p63.1811" [label="p63.1811 \n f32[16]"];
	"broadcast.1812" [label="broadcast.1812 \n f32[16]"];
	"multiply.1813" [label="multiply.1813 \n f32[16]"];
	"multiply.1814" [label="multiply.1814 \n f32[16]"];
	"broadcast.1815" [label="broadcast.1815 \n f32[16]"];
	"multiply.1816" [label="multiply.1816 \n f32[16]"];
	"add.1817" [label="add.1817 \n f32[16]"];
	"sqrt.1818" [label="sqrt.1818 \n f32[16]"];
	"broadcast.1819" [label="broadcast.1819 \n f32[16]"];
	"add.1820" [label="add.1820 \n f32[16]"];
	"divide.1830" [label="divide.1830 \n f32[16]"];
	"constant.1787" [label="constant.1787 \n f32[] constant(-0), metadata="];
	"broadcast.1831" [label="broadcast.1831 \n f32[16]"];
	"multiply.1832" [label="multiply.1832 \n f32[16]"];
	"add.1834" [label="add.1834 \n f32[16]"];
	"convert.1835" [label="convert.1835 \n bf16[16]"];
	"convert.1878" [label="convert.1878 \n f32[16,16]"];
	"p66.1871" [label="p66.1871 \n f32[16,16]"];
	"broadcast.1872" [label="broadcast.1872 \n f32[16,16]"];
	"multiply.1873" [label="multiply.1873 \n f32[16,16]"];
	"reshape.1844" [label="reshape.1844 \n bf16[2048,16]"];
	"transpose.1845" [label="transpose.1845 \n bf16[16,2048]"];
	"dot.3" [label="dot.3 \n bf16[16,16]"];
	"convert.1855" [label="convert.1855 \n f32[16,16]"];
	"broadcast.1869" [label="broadcast.1869 \n f32[16,16]"];
	"multiply.1870" [label="multiply.1870 \n f32[16,16]"];
	"add.1874" [label="add.1874 \n f32[16,16]"];
	"p65.1856" [label="p65.1856 \n f32[16,16]"];
	"broadcast.1857" [label="broadcast.1857 \n f32[16,16]"];
	"multiply.1858" [label="multiply.1858 \n f32[16,16]"];
	"multiply.1859" [label="multiply.1859 \n f32[16,16]"];
	"broadcast.1860" [label="broadcast.1860 \n f32[16,16]"];
	"multiply.1861" [label="multiply.1861 \n f32[16,16]"];
	"add.1862" [label="add.1862 \n f32[16,16]"];
	"sqrt.1863" [label="sqrt.1863 \n f32[16,16]"];
	"broadcast.1864" [label="broadcast.1864 \n f32[16,16]"];
	"add.1865" [label="add.1865 \n f32[16,16]"];
	"divide.1875" [label="divide.1875 \n f32[16,16]"];
	"constant.1841" [label="constant.1841 \n f32[] constant(-0), metadata="];
	"broadcast.1876" [label="broadcast.1876 \n f32[16,16]"];
	"multiply.1877" [label="multiply.1877 \n f32[16,16]"];
	"add.1879" [label="add.1879 \n f32[16,16]"];
	"convert.1880" [label="convert.1880 \n bf16[16,16]"];
	"constant.1836" [label="constant.1836 \n bf16[] constant(-0), metadata="];
	"broadcast.1840" [label="broadcast.1840 \n bf16[16,16]"];
	"multiply.1881" [label="multiply.1881 \n bf16[16,16]"];
	"add.1882" [label="add.1882 \n bf16[16,16]"];
	"convert.1928" [label="convert.1928 \n f32[16]"];
	"p68.1921" [label="p68.1921 \n f32[16]"];
	"broadcast.1922" [label="broadcast.1922 \n f32[16]"];
	"multiply.1923" [label="multiply.1923 \n f32[16]"];
	"reshape.1886" [label="reshape.1886 \n bf16[16,2,128,8]"];
	"constant.1889" [label="constant.1889 \n bf16[] constant(0), metadata="];
	"reduce.14" [label="reduce.14 \n bf16[2,8]"];
	"reshape.1897" [label="reshape.1897 \n bf16[16]"];
	"convert.1905" [label="convert.1905 \n f32[16]"];
	"broadcast.1919" [label="broadcast.1919 \n f32[16]"];
	"multiply.1920" [label="multiply.1920 \n f32[16]"];
	"add.1924" [label="add.1924 \n f32[16]"];
	"p67.1906" [label="p67.1906 \n f32[16]"];
	"broadcast.1907" [label="broadcast.1907 \n f32[16]"];
	"multiply.1908" [label="multiply.1908 \n f32[16]"];
	"multiply.1909" [label="multiply.1909 \n f32[16]"];
	"broadcast.1910" [label="broadcast.1910 \n f32[16]"];
	"multiply.1911" [label="multiply.1911 \n f32[16]"];
	"add.1912" [label="add.1912 \n f32[16]"];
	"sqrt.1913" [label="sqrt.1913 \n f32[16]"];
	"broadcast.1914" [label="broadcast.1914 \n f32[16]"];
	"add.1915" [label="add.1915 \n f32[16]"];
	"divide.1925" [label="divide.1925 \n f32[16]"];
	"constant.1883" [label="constant.1883 \n f32[] constant(-0), metadata="];
	"broadcast.1926" [label="broadcast.1926 \n f32[16]"];
	"multiply.1927" [label="multiply.1927 \n f32[16]"];
	"add.1929" [label="add.1929 \n f32[16]"];
	"convert.1930" [label="convert.1930 \n bf16[16]"];
	"convert.1976" [label="convert.1976 \n f32[16,16]"];
	"p70.1969" [label="p70.1969 \n f32[16,16]"];
	"broadcast.1970" [label="broadcast.1970 \n f32[16,16]"];
	"multiply.1971" [label="multiply.1971 \n f32[16,16]"];
	"reshape.1939" [label="reshape.1939 \n bf16[16,2,128,8]"];
	"transpose.1940" [label="transpose.1940 \n bf16[16,128,2,8]"];
	"reshape.1942" [label="reshape.1942 \n bf16[2048,16]"];
	"transpose.1943" [label="transpose.1943 \n bf16[16,2048]"];
	"dot.4" [label="dot.4 \n bf16[16,16]"];
	"convert.1953" [label="convert.1953 \n f32[16,16]"];
	"broadcast.1967" [label="broadcast.1967 \n f32[16,16]"];
	"multiply.1968" [label="multiply.1968 \n f32[16,16]"];
	"add.1972" [label="add.1972 \n f32[16,16]"];
	"p69.1954" [label="p69.1954 \n f32[16,16]"];
	"broadcast.1955" [label="broadcast.1955 \n f32[16,16]"];
	"multiply.1956" [label="multiply.1956 \n f32[16,16]"];
	"multiply.1957" [label="multiply.1957 \n f32[16,16]"];
	"broadcast.1958" [label="broadcast.1958 \n f32[16,16]"];
	"multiply.1959" [label="multiply.1959 \n f32[16,16]"];
	"add.1960" [label="add.1960 \n f32[16,16]"];
	"sqrt.1961" [label="sqrt.1961 \n f32[16,16]"];
	"broadcast.1962" [label="broadcast.1962 \n f32[16,16]"];
	"add.1963" [label="add.1963 \n f32[16,16]"];
	"divide.1973" [label="divide.1973 \n f32[16,16]"];
	"constant.1936" [label="constant.1936 \n f32[] constant(-0), metadata="];
	"broadcast.1974" [label="broadcast.1974 \n f32[16,16]"];
	"multiply.1975" [label="multiply.1975 \n f32[16,16]"];
	"add.1977" [label="add.1977 \n f32[16,16]"];
	"convert.1978" [label="convert.1978 \n bf16[16,16]"];
	"constant.1931" [label="constant.1931 \n bf16[] constant(-0), metadata="];
	"broadcast.1935" [label="broadcast.1935 \n bf16[16,16]"];
	"multiply.1979" [label="multiply.1979 \n bf16[16,16]"];
	"add.1980" [label="add.1980 \n bf16[16,16]"];
	"convert.2023" [label="convert.2023 \n f32[16]"];
	"p72.2016" [label="p72.2016 \n f32[16]"];
	"broadcast.2017" [label="broadcast.2017 \n f32[16]"];
	"multiply.2018" [label="multiply.2018 \n f32[16]"];
	"constant.1984" [label="constant.1984 \n bf16[] constant(0), metadata="];
	"reduce.1990" [label="reduce.1990 \n bf16[16]"];
	"convert.2000" [label="convert.2000 \n f32[16]"];
	"broadcast.2014" [label="broadcast.2014 \n f32[16]"];
	"multiply.2015" [label="multiply.2015 \n f32[16]"];
	"add.2019" [label="add.2019 \n f32[16]"];
	"p71.2001" [label="p71.2001 \n f32[16]"];
	"broadcast.2002" [label="broadcast.2002 \n f32[16]"];
	"multiply.2003" [label="multiply.2003 \n f32[16]"];
	"multiply.2004" [label="multiply.2004 \n f32[16]"];
	"broadcast.2005" [label="broadcast.2005 \n f32[16]"];
	"multiply.2006" [label="multiply.2006 \n f32[16]"];
	"add.2007" [label="add.2007 \n f32[16]"];
	"sqrt.2008" [label="sqrt.2008 \n f32[16]"];
	"broadcast.2009" [label="broadcast.2009 \n f32[16]"];
	"add.2010" [label="add.2010 \n f32[16]"];
	"divide.2020" [label="divide.2020 \n f32[16]"];
	"constant.1981" [label="constant.1981 \n f32[] constant(-0), metadata="];
	"broadcast.2021" [label="broadcast.2021 \n f32[16]"];
	"multiply.2022" [label="multiply.2022 \n f32[16]"];
	"add.2024" [label="add.2024 \n f32[16]"];
	"convert.2025" [label="convert.2025 \n bf16[16]"];
	"convert.2075" [label="convert.2075 \n f32[16]"];
	"p74.2068" [label="p74.2068 \n f32[16]"];
	"broadcast.2069" [label="broadcast.2069 \n f32[16]"];
	"multiply.2070" [label="multiply.2070 \n f32[16]"];
	"multiply.2035" [label="multiply.2035 \n bf16[16,128,16]"];
	"constant.2036" [label="constant.2036 \n bf16[] constant(0), metadata="];
	"reduce.2042" [label="reduce.2042 \n bf16[16]"];
	"convert.2052" [label="convert.2052 \n f32[16]"];
	"broadcast.2066" [label="broadcast.2066 \n f32[16]"];
	"multiply.2067" [label="multiply.2067 \n f32[16]"];
	"add.2071" [label="add.2071 \n f32[16]"];
	"p73.2053" [label="p73.2053 \n f32[16]"];
	"broadcast.2054" [label="broadcast.2054 \n f32[16]"];
	"multiply.2055" [label="multiply.2055 \n f32[16]"];
	"multiply.2056" [label="multiply.2056 \n f32[16]"];
	"broadcast.2057" [label="broadcast.2057 \n f32[16]"];
	"multiply.2058" [label="multiply.2058 \n f32[16]"];
	"add.2059" [label="add.2059 \n f32[16]"];
	"sqrt.2060" [label="sqrt.2060 \n f32[16]"];
	"broadcast.2061" [label="broadcast.2061 \n f32[16]"];
	"add.2062" [label="add.2062 \n f32[16]"];
	"divide.2072" [label="divide.2072 \n f32[16]"];
	"constant.2026" [label="constant.2026 \n f32[] constant(-0), metadata="];
	"broadcast.2073" [label="broadcast.2073 \n f32[16]"];
	"multiply.2074" [label="multiply.2074 \n f32[16]"];
	"add.2076" [label="add.2076 \n f32[16]"];
	"convert.2077" [label="convert.2077 \n bf16[16]"];
	"convert.2120" [label="convert.2120 \n f32[16]"];
	"p76.2113" [label="p76.2113 \n f32[16]"];
	"broadcast.2114" [label="broadcast.2114 \n f32[16]"];
	"multiply.2115" [label="multiply.2115 \n f32[16]"];
	"constant.2081" [label="constant.2081 \n bf16[] constant(0), metadata="];
	"reduce.2087" [label="reduce.2087 \n bf16[16]"];
	"convert.2097" [label="convert.2097 \n f32[16]"];
	"broadcast.2111" [label="broadcast.2111 \n f32[16]"];
	"multiply.2112" [label="multiply.2112 \n f32[16]"];
	"add.2116" [label="add.2116 \n f32[16]"];
	"p75.2098" [label="p75.2098 \n f32[16]"];
	"broadcast.2099" [label="broadcast.2099 \n f32[16]"];
	"multiply.2100" [label="multiply.2100 \n f32[16]"];
	"multiply.2101" [label="multiply.2101 \n f32[16]"];
	"broadcast.2102" [label="broadcast.2102 \n f32[16]"];
	"multiply.2103" [label="multiply.2103 \n f32[16]"];
	"add.2104" [label="add.2104 \n f32[16]"];
	"sqrt.2105" [label="sqrt.2105 \n f32[16]"];
	"broadcast.2106" [label="broadcast.2106 \n f32[16]"];
	"add.2107" [label="add.2107 \n f32[16]"];
	"divide.2117" [label="divide.2117 \n f32[16]"];
	"constant.2078" [label="constant.2078 \n f32[] constant(-0), metadata="];
	"broadcast.2118" [label="broadcast.2118 \n f32[16]"];
	"multiply.2119" [label="multiply.2119 \n f32[16]"];
	"add.2121" [label="add.2121 \n f32[16]"];
	"convert.2122" [label="convert.2122 \n bf16[16]"];
	"convert.2165" [label="convert.2165 \n f32[4096,16]"];
	"p78.2158" [label="p78.2158 \n f32[4096,16]"];
	"broadcast.2159" [label="broadcast.2159 \n f32[4096,16]"];
	"multiply.2160" [label="multiply.2160 \n f32[4096,16]"];
	"reshape.2131" [label="reshape.2131 \n bf16[2048,16]"];
	"transpose.2132" [label="transpose.2132 \n bf16[16,2048]"];
	"dot.5" [label="dot.5 \n bf16[4096,16]"];
	"convert.2142" [label="convert.2142 \n f32[4096,16]"];
	"broadcast.2156" [label="broadcast.2156 \n f32[4096,16]"];
	"multiply.2157" [label="multiply.2157 \n f32[4096,16]"];
	"add.2161" [label="add.2161 \n f32[4096,16]"];
	"p77.2143" [label="p77.2143 \n f32[4096,16]"];
	"broadcast.2144" [label="broadcast.2144 \n f32[4096,16]"];
	"multiply.2145" [label="multiply.2145 \n f32[4096,16]"];
	"multiply.2146" [label="multiply.2146 \n f32[4096,16]"];
	"broadcast.2147" [label="broadcast.2147 \n f32[4096,16]"];
	"multiply.2148" [label="multiply.2148 \n f32[4096,16]"];
	"add.2149" [label="add.2149 \n f32[4096,16]"];
	"sqrt.2150" [label="sqrt.2150 \n f32[4096,16]"];
	"broadcast.2151" [label="broadcast.2151 \n f32[4096,16]"];
	"add.2152" [label="add.2152 \n f32[4096,16]"];
	"divide.2162" [label="divide.2162 \n f32[4096,16]"];
	"constant.2128" [label="constant.2128 \n f32[] constant(-0), metadata="];
	"broadcast.2163" [label="broadcast.2163 \n f32[4096,16]"];
	"multiply.2164" [label="multiply.2164 \n f32[4096,16]"];
	"add.2166" [label="add.2166 \n f32[4096,16]"];
	"convert.2167" [label="convert.2167 \n bf16[4096,16]"];
	"constant.2123" [label="constant.2123 \n bf16[] constant(-0), metadata="];
	"broadcast.2127" [label="broadcast.2127 \n bf16[4096,16]"];
	"multiply.2168" [label="multiply.2168 \n bf16[4096,16]"];
	"add.2169" [label="add.2169 \n bf16[4096,16]"];
	"convert.2212" [label="convert.2212 \n f32[4096]"];
	"p80.2205" [label="p80.2205 \n f32[4096]"];
	"broadcast.2206" [label="broadcast.2206 \n f32[4096]"];
	"multiply.2207" [label="multiply.2207 \n f32[4096]"];
	"constant.2173" [label="constant.2173 \n bf16[] constant(0), metadata="];
	"reduce.2179" [label="reduce.2179 \n bf16[4096]"];
	"convert.2189" [label="convert.2189 \n f32[4096]"];
	"broadcast.2203" [label="broadcast.2203 \n f32[4096]"];
	"multiply.2204" [label="multiply.2204 \n f32[4096]"];
	"add.2208" [label="add.2208 \n f32[4096]"];
	"p79.2190" [label="p79.2190 \n f32[4096]"];
	"broadcast.2191" [label="broadcast.2191 \n f32[4096]"];
	"multiply.2192" [label="multiply.2192 \n f32[4096]"];
	"multiply.2193" [label="multiply.2193 \n f32[4096]"];
	"broadcast.2194" [label="broadcast.2194 \n f32[4096]"];
	"multiply.2195" [label="multiply.2195 \n f32[4096]"];
	"add.2196" [label="add.2196 \n f32[4096]"];
	"sqrt.2197" [label="sqrt.2197 \n f32[4096]"];
	"broadcast.2198" [label="broadcast.2198 \n f32[4096]"];
	"add.2199" [label="add.2199 \n f32[4096]"];
	"divide.2209" [label="divide.2209 \n f32[4096]"];
	"constant.2170" [label="constant.2170 \n f32[] constant(-0), metadata="];
	"broadcast.2210" [label="broadcast.2210 \n f32[4096]"];
	"multiply.2211" [label="multiply.2211 \n f32[4096]"];
	"add.2213" [label="add.2213 \n f32[4096]"];
	"convert.2214" [label="convert.2214 \n bf16[4096]"];
	"convert.2257" [label="convert.2257 \n f32[16,4096]"];
	"p82.2250" [label="p82.2250 \n f32[16,4096]"];
	"broadcast.2251" [label="broadcast.2251 \n f32[16,4096]"];
	"multiply.2252" [label="multiply.2252 \n f32[16,4096]"];
	"reshape.2223" [label="reshape.2223 \n bf16[2048,4096]"];
	"transpose.2224" [label="transpose.2224 \n bf16[4096,2048]"];
	"dot.6" [label="dot.6 \n bf16[16,4096]"];
	"convert.2234" [label="convert.2234 \n f32[16,4096]"];
	"broadcast.2248" [label="broadcast.2248 \n f32[16,4096]"];
	"multiply.2249" [label="multiply.2249 \n f32[16,4096]"];
	"add.2253" [label="add.2253 \n f32[16,4096]"];
	"p81.2235" [label="p81.2235 \n f32[16,4096]"];
	"broadcast.2236" [label="broadcast.2236 \n f32[16,4096]"];
	"multiply.2237" [label="multiply.2237 \n f32[16,4096]"];
	"multiply.2238" [label="multiply.2238 \n f32[16,4096]"];
	"broadcast.2239" [label="broadcast.2239 \n f32[16,4096]"];
	"multiply.2240" [label="multiply.2240 \n f32[16,4096]"];
	"add.2241" [label="add.2241 \n f32[16,4096]"];
	"sqrt.2242" [label="sqrt.2242 \n f32[16,4096]"];
	"broadcast.2243" [label="broadcast.2243 \n f32[16,4096]"];
	"add.2244" [label="add.2244 \n f32[16,4096]"];
	"divide.2254" [label="divide.2254 \n f32[16,4096]"];
	"constant.2220" [label="constant.2220 \n f32[] constant(-0), metadata="];
	"broadcast.2255" [label="broadcast.2255 \n f32[16,4096]"];
	"multiply.2256" [label="multiply.2256 \n f32[16,4096]"];
	"add.2258" [label="add.2258 \n f32[16,4096]"];
	"convert.2259" [label="convert.2259 \n bf16[16,4096]"];
	"constant.2215" [label="constant.2215 \n bf16[] constant(-0), metadata="];
	"broadcast.2219" [label="broadcast.2219 \n bf16[16,4096]"];
	"multiply.2260" [label="multiply.2260 \n bf16[16,4096]"];
	"add.2261" [label="add.2261 \n bf16[16,4096]"];
	"convert.2304" [label="convert.2304 \n f32[16]"];
	"p84.2297" [label="p84.2297 \n f32[16]"];
	"broadcast.2298" [label="broadcast.2298 \n f32[16]"];
	"multiply.2299" [label="multiply.2299 \n f32[16]"];
	"constant.2265" [label="constant.2265 \n bf16[] constant(0), metadata="];
	"reduce.2271" [label="reduce.2271 \n bf16[16]"];
	"convert.2281" [label="convert.2281 \n f32[16]"];
	"broadcast.2295" [label="broadcast.2295 \n f32[16]"];
	"multiply.2296" [label="multiply.2296 \n f32[16]"];
	"add.2300" [label="add.2300 \n f32[16]"];
	"p83.2282" [label="p83.2282 \n f32[16]"];
	"broadcast.2283" [label="broadcast.2283 \n f32[16]"];
	"multiply.2284" [label="multiply.2284 \n f32[16]"];
	"multiply.2285" [label="multiply.2285 \n f32[16]"];
	"broadcast.2286" [label="broadcast.2286 \n f32[16]"];
	"multiply.2287" [label="multiply.2287 \n f32[16]"];
	"add.2288" [label="add.2288 \n f32[16]"];
	"sqrt.2289" [label="sqrt.2289 \n f32[16]"];
	"broadcast.2290" [label="broadcast.2290 \n f32[16]"];
	"add.2291" [label="add.2291 \n f32[16]"];
	"divide.2301" [label="divide.2301 \n f32[16]"];
	"constant.2262" [label="constant.2262 \n f32[] constant(-0), metadata="];
	"broadcast.2302" [label="broadcast.2302 \n f32[16]"];
	"multiply.2303" [label="multiply.2303 \n f32[16]"];
	"add.2305" [label="add.2305 \n f32[16]"];
	"convert.2306" [label="convert.2306 \n bf16[16]"];
	"convert.2356" [label="convert.2356 \n f32[16]"];
	"p86.2349" [label="p86.2349 \n f32[16]"];
	"broadcast.2350" [label="broadcast.2350 \n f32[16]"];
	"multiply.2351" [label="multiply.2351 \n f32[16]"];
	"multiply.2316" [label="multiply.2316 \n bf16[16,128,16]"];
	"constant.2317" [label="constant.2317 \n bf16[] constant(0), metadata="];
	"reduce.2323" [label="reduce.2323 \n bf16[16]"];
	"convert.2333" [label="convert.2333 \n f32[16]"];
	"broadcast.2347" [label="broadcast.2347 \n f32[16]"];
	"multiply.2348" [label="multiply.2348 \n f32[16]"];
	"add.2352" [label="add.2352 \n f32[16]"];
	"p85.2334" [label="p85.2334 \n f32[16]"];
	"broadcast.2335" [label="broadcast.2335 \n f32[16]"];
	"multiply.2336" [label="multiply.2336 \n f32[16]"];
	"multiply.2337" [label="multiply.2337 \n f32[16]"];
	"broadcast.2338" [label="broadcast.2338 \n f32[16]"];
	"multiply.2339" [label="multiply.2339 \n f32[16]"];
	"add.2340" [label="add.2340 \n f32[16]"];
	"sqrt.2341" [label="sqrt.2341 \n f32[16]"];
	"broadcast.2342" [label="broadcast.2342 \n f32[16]"];
	"add.2343" [label="add.2343 \n f32[16]"];
	"divide.2353" [label="divide.2353 \n f32[16]"];
	"constant.2307" [label="constant.2307 \n f32[] constant(-0), metadata="];
	"broadcast.2354" [label="broadcast.2354 \n f32[16]"];
	"multiply.2355" [label="multiply.2355 \n f32[16]"];
	"add.2357" [label="add.2357 \n f32[16]"];
	"convert.2358" [label="convert.2358 \n bf16[16]"];
	"convert.2401" [label="convert.2401 \n f32[16]"];
	"p88.2394" [label="p88.2394 \n f32[16]"];
	"broadcast.2395" [label="broadcast.2395 \n f32[16]"];
	"multiply.2396" [label="multiply.2396 \n f32[16]"];
	"constant.2362" [label="constant.2362 \n bf16[] constant(0), metadata="];
	"reduce.2368" [label="reduce.2368 \n bf16[16]"];
	"convert.2378" [label="convert.2378 \n f32[16]"];
	"broadcast.2392" [label="broadcast.2392 \n f32[16]"];
	"multiply.2393" [label="multiply.2393 \n f32[16]"];
	"add.2397" [label="add.2397 \n f32[16]"];
	"p87.2379" [label="p87.2379 \n f32[16]"];
	"broadcast.2380" [label="broadcast.2380 \n f32[16]"];
	"multiply.2381" [label="multiply.2381 \n f32[16]"];
	"multiply.2382" [label="multiply.2382 \n f32[16]"];
	"broadcast.2383" [label="broadcast.2383 \n f32[16]"];
	"multiply.2384" [label="multiply.2384 \n f32[16]"];
	"add.2385" [label="add.2385 \n f32[16]"];
	"sqrt.2386" [label="sqrt.2386 \n f32[16]"];
	"broadcast.2387" [label="broadcast.2387 \n f32[16]"];
	"add.2388" [label="add.2388 \n f32[16]"];
	"divide.2398" [label="divide.2398 \n f32[16]"];
	"constant.2359" [label="constant.2359 \n f32[] constant(-0), metadata="];
	"broadcast.2399" [label="broadcast.2399 \n f32[16]"];
	"multiply.2400" [label="multiply.2400 \n f32[16]"];
	"add.2402" [label="add.2402 \n f32[16]"];
	"convert.2403" [label="convert.2403 \n bf16[16]"];
	"convert.2448" [label="convert.2448 \n f32[16,16]"];
	"p90.2441" [label="p90.2441 \n f32[16,16]"];
	"broadcast.2442" [label="broadcast.2442 \n f32[16,16]"];
	"multiply.2443" [label="multiply.2443 \n f32[16,16]"];
	"slice.2413" [label="slice.2413 \n bf16[16,1,16]"];
	"reshape.2414" [label="reshape.2414 \n bf16[16,16]"];
	"transpose.2415" [label="transpose.2415 \n bf16[16,16]"];
	"dot.7" [label="dot.7 \n bf16[16,16]"];
	"convert.2425" [label="convert.2425 \n f32[16,16]"];
	"broadcast.2439" [label="broadcast.2439 \n f32[16,16]"];
	"multiply.2440" [label="multiply.2440 \n f32[16,16]"];
	"add.2444" [label="add.2444 \n f32[16,16]"];
	"p89.2426" [label="p89.2426 \n f32[16,16]"];
	"broadcast.2427" [label="broadcast.2427 \n f32[16,16]"];
	"multiply.2428" [label="multiply.2428 \n f32[16,16]"];
	"multiply.2429" [label="multiply.2429 \n f32[16,16]"];
	"broadcast.2430" [label="broadcast.2430 \n f32[16,16]"];
	"multiply.2431" [label="multiply.2431 \n f32[16,16]"];
	"add.2432" [label="add.2432 \n f32[16,16]"];
	"sqrt.2433" [label="sqrt.2433 \n f32[16,16]"];
	"broadcast.2434" [label="broadcast.2434 \n f32[16,16]"];
	"add.2435" [label="add.2435 \n f32[16,16]"];
	"divide.2445" [label="divide.2445 \n f32[16,16]"];
	"constant.2409" [label="constant.2409 \n f32[] constant(-0), metadata="];
	"broadcast.2446" [label="broadcast.2446 \n f32[16,16]"];
	"multiply.2447" [label="multiply.2447 \n f32[16,16]"];
	"add.2449" [label="add.2449 \n f32[16,16]"];
	"convert.2450" [label="convert.2450 \n bf16[16,16]"];
	"constant.2404" [label="constant.2404 \n bf16[] constant(-0), metadata="];
	"broadcast.2408" [label="broadcast.2408 \n bf16[16,16]"];
	"multiply.2451" [label="multiply.2451 \n bf16[16,16]"];
	"add.2452" [label="add.2452 \n bf16[16,16]"];
	"convert.2495" [label="convert.2495 \n f32[16]"];
	"p92.2488" [label="p92.2488 \n f32[16]"];
	"broadcast.2489" [label="broadcast.2489 \n f32[16]"];
	"multiply.2490" [label="multiply.2490 \n f32[16]"];
	"constant.2456" [label="constant.2456 \n bf16[] constant(0), metadata="];
	"reduce.2462" [label="reduce.2462 \n bf16[16]"];
	"convert.2472" [label="convert.2472 \n f32[16]"];
	"broadcast.2486" [label="broadcast.2486 \n f32[16]"];
	"multiply.2487" [label="multiply.2487 \n f32[16]"];
	"add.2491" [label="add.2491 \n f32[16]"];
	"p91.2473" [label="p91.2473 \n f32[16]"];
	"broadcast.2474" [label="broadcast.2474 \n f32[16]"];
	"multiply.2475" [label="multiply.2475 \n f32[16]"];
	"multiply.2476" [label="multiply.2476 \n f32[16]"];
	"broadcast.2477" [label="broadcast.2477 \n f32[16]"];
	"multiply.2478" [label="multiply.2478 \n f32[16]"];
	"add.2479" [label="add.2479 \n f32[16]"];
	"sqrt.2480" [label="sqrt.2480 \n f32[16]"];
	"broadcast.2481" [label="broadcast.2481 \n f32[16]"];
	"add.2482" [label="add.2482 \n f32[16]"];
	"divide.2492" [label="divide.2492 \n f32[16]"];
	"constant.2453" [label="constant.2453 \n f32[] constant(-0), metadata="];
	"broadcast.2493" [label="broadcast.2493 \n f32[16]"];
	"multiply.2494" [label="multiply.2494 \n f32[16]"];
	"add.2496" [label="add.2496 \n f32[16]"];
	"convert.2497" [label="convert.2497 \n bf16[16]"];
	"convert.2540" [label="convert.2540 \n f32[16,16]"];
	"p94.2533" [label="p94.2533 \n f32[16,16]"];
	"broadcast.2534" [label="broadcast.2534 \n f32[16,16]"];
	"multiply.2535" [label="multiply.2535 \n f32[16,16]"];
	"reshape.2506" [label="reshape.2506 \n bf16[2048,16]"];
	"transpose.2507" [label="transpose.2507 \n bf16[16,2048]"];
	"dot.8" [label="dot.8 \n bf16[16,16]"];
	"convert.2517" [label="convert.2517 \n f32[16,16]"];
	"broadcast.2531" [label="broadcast.2531 \n f32[16,16]"];
	"multiply.2532" [label="multiply.2532 \n f32[16,16]"];
	"add.2536" [label="add.2536 \n f32[16,16]"];
	"p93.2518" [label="p93.2518 \n f32[16,16]"];
	"broadcast.2519" [label="broadcast.2519 \n f32[16,16]"];
	"multiply.2520" [label="multiply.2520 \n f32[16,16]"];
	"multiply.2521" [label="multiply.2521 \n f32[16,16]"];
	"broadcast.2522" [label="broadcast.2522 \n f32[16,16]"];
	"multiply.2523" [label="multiply.2523 \n f32[16,16]"];
	"add.2524" [label="add.2524 \n f32[16,16]"];
	"sqrt.2525" [label="sqrt.2525 \n f32[16,16]"];
	"broadcast.2526" [label="broadcast.2526 \n f32[16,16]"];
	"add.2527" [label="add.2527 \n f32[16,16]"];
	"divide.2537" [label="divide.2537 \n f32[16,16]"];
	"constant.2503" [label="constant.2503 \n f32[] constant(-0), metadata="];
	"broadcast.2538" [label="broadcast.2538 \n f32[16,16]"];
	"multiply.2539" [label="multiply.2539 \n f32[16,16]"];
	"add.2541" [label="add.2541 \n f32[16,16]"];
	"convert.2542" [label="convert.2542 \n bf16[16,16]"];
	"constant.2498" [label="constant.2498 \n bf16[] constant(-0), metadata="];
	"broadcast.2502" [label="broadcast.2502 \n bf16[16,16]"];
	"multiply.2543" [label="multiply.2543 \n bf16[16,16]"];
	"add.2544" [label="add.2544 \n bf16[16,16]"];
	"convert.2587" [label="convert.2587 \n f32[16]"];
	"p96.2580" [label="p96.2580 \n f32[16]"];
	"broadcast.2581" [label="broadcast.2581 \n f32[16]"];
	"multiply.2582" [label="multiply.2582 \n f32[16]"];
	"constant.2548" [label="constant.2548 \n bf16[] constant(0), metadata="];
	"reduce.2554" [label="reduce.2554 \n bf16[16]"];
	"convert.2564" [label="convert.2564 \n f32[16]"];
	"broadcast.2578" [label="broadcast.2578 \n f32[16]"];
	"multiply.2579" [label="multiply.2579 \n f32[16]"];
	"add.2583" [label="add.2583 \n f32[16]"];
	"p95.2565" [label="p95.2565 \n f32[16]"];
	"broadcast.2566" [label="broadcast.2566 \n f32[16]"];
	"multiply.2567" [label="multiply.2567 \n f32[16]"];
	"multiply.2568" [label="multiply.2568 \n f32[16]"];
	"broadcast.2569" [label="broadcast.2569 \n f32[16]"];
	"multiply.2570" [label="multiply.2570 \n f32[16]"];
	"add.2571" [label="add.2571 \n f32[16]"];
	"sqrt.2572" [label="sqrt.2572 \n f32[16]"];
	"broadcast.2573" [label="broadcast.2573 \n f32[16]"];
	"add.2574" [label="add.2574 \n f32[16]"];
	"divide.2584" [label="divide.2584 \n f32[16]"];
	"constant.2545" [label="constant.2545 \n f32[] constant(-0), metadata="];
	"broadcast.2585" [label="broadcast.2585 \n f32[16]"];
	"multiply.2586" [label="multiply.2586 \n f32[16]"];
	"add.2588" [label="add.2588 \n f32[16]"];
	"convert.2589" [label="convert.2589 \n bf16[16]"];
	"convert.2639" [label="convert.2639 \n f32[16]"];
	"p98.2632" [label="p98.2632 \n f32[16]"];
	"broadcast.2633" [label="broadcast.2633 \n f32[16]"];
	"multiply.2634" [label="multiply.2634 \n f32[16]"];
	"multiply.2599" [label="multiply.2599 \n bf16[16,128,16]"];
	"constant.2600" [label="constant.2600 \n bf16[] constant(0), metadata="];
	"reduce.2606" [label="reduce.2606 \n bf16[16]"];
	"convert.2616" [label="convert.2616 \n f32[16]"];
	"broadcast.2630" [label="broadcast.2630 \n f32[16]"];
	"multiply.2631" [label="multiply.2631 \n f32[16]"];
	"add.2635" [label="add.2635 \n f32[16]"];
	"p97.2617" [label="p97.2617 \n f32[16]"];
	"broadcast.2618" [label="broadcast.2618 \n f32[16]"];
	"multiply.2619" [label="multiply.2619 \n f32[16]"];
	"multiply.2620" [label="multiply.2620 \n f32[16]"];
	"broadcast.2621" [label="broadcast.2621 \n f32[16]"];
	"multiply.2622" [label="multiply.2622 \n f32[16]"];
	"add.2623" [label="add.2623 \n f32[16]"];
	"sqrt.2624" [label="sqrt.2624 \n f32[16]"];
	"broadcast.2625" [label="broadcast.2625 \n f32[16]"];
	"add.2626" [label="add.2626 \n f32[16]"];
	"divide.2636" [label="divide.2636 \n f32[16]"];
	"constant.2590" [label="constant.2590 \n f32[] constant(-0), metadata="];
	"broadcast.2637" [label="broadcast.2637 \n f32[16]"];
	"multiply.2638" [label="multiply.2638 \n f32[16]"];
	"add.2640" [label="add.2640 \n f32[16]"];
	"convert.2641" [label="convert.2641 \n bf16[16]"];
	"convert.2684" [label="convert.2684 \n f32[16]"];
	"p100.2677" [label="p100.2677 \n f32[16]"];
	"broadcast.2678" [label="broadcast.2678 \n f32[16]"];
	"multiply.2679" [label="multiply.2679 \n f32[16]"];
	"constant.2645" [label="constant.2645 \n bf16[] constant(0), metadata="];
	"reduce.2651" [label="reduce.2651 \n bf16[16]"];
	"convert.2661" [label="convert.2661 \n f32[16]"];
	"broadcast.2675" [label="broadcast.2675 \n f32[16]"];
	"multiply.2676" [label="multiply.2676 \n f32[16]"];
	"add.2680" [label="add.2680 \n f32[16]"];
	"p99.2662" [label="p99.2662 \n f32[16]"];
	"broadcast.2663" [label="broadcast.2663 \n f32[16]"];
	"multiply.2664" [label="multiply.2664 \n f32[16]"];
	"multiply.2665" [label="multiply.2665 \n f32[16]"];
	"broadcast.2666" [label="broadcast.2666 \n f32[16]"];
	"multiply.2667" [label="multiply.2667 \n f32[16]"];
	"add.2668" [label="add.2668 \n f32[16]"];
	"sqrt.2669" [label="sqrt.2669 \n f32[16]"];
	"broadcast.2670" [label="broadcast.2670 \n f32[16]"];
	"add.2671" [label="add.2671 \n f32[16]"];
	"divide.2681" [label="divide.2681 \n f32[16]"];
	"constant.2642" [label="constant.2642 \n f32[] constant(-0), metadata="];
	"broadcast.2682" [label="broadcast.2682 \n f32[16]"];
	"multiply.2683" [label="multiply.2683 \n f32[16]"];
	"add.2685" [label="add.2685 \n f32[16]"];
	"convert.2686" [label="convert.2686 \n bf16[16]"];
	"convert.2730" [label="convert.2730 \n f32[30522]"];
	"p102.2723" [label="p102.2723 \n f32[30522]"];
	"broadcast.2724" [label="broadcast.2724 \n f32[30522]"];
	"multiply.2725" [label="multiply.2725 \n f32[30522]"];
	"constant.2691" [label="constant.2691 \n bf16[] constant(0), metadata="];
	"reduce.2697" [label="reduce.2697 \n bf16[30522]"];
	"convert.2707" [label="convert.2707 \n f32[30522]"];
	"broadcast.2721" [label="broadcast.2721 \n f32[30522]"];
	"multiply.2722" [label="multiply.2722 \n f32[30522]"];
	"add.2726" [label="add.2726 \n f32[30522]"];
	"p101.2708" [label="p101.2708 \n f32[30522]"];
	"broadcast.2709" [label="broadcast.2709 \n f32[30522]"];
	"multiply.2710" [label="multiply.2710 \n f32[30522]"];
	"multiply.2711" [label="multiply.2711 \n f32[30522]"];
	"broadcast.2712" [label="broadcast.2712 \n f32[30522]"];
	"multiply.2713" [label="multiply.2713 \n f32[30522]"];
	"add.2714" [label="add.2714 \n f32[30522]"];
	"sqrt.2715" [label="sqrt.2715 \n f32[30522]"];
	"broadcast.2716" [label="broadcast.2716 \n f32[30522]"];
	"add.2717" [label="add.2717 \n f32[30522]"];
	"divide.2727" [label="divide.2727 \n f32[30522]"];
	"constant.2687" [label="constant.2687 \n f32[] constant(-0), metadata="];
	"broadcast.2728" [label="broadcast.2728 \n f32[30522]"];
	"multiply.2729" [label="multiply.2729 \n f32[30522]"];
	"add.2731" [label="add.2731 \n f32[30522]"];
	"convert.2732" [label="convert.2732 \n bf16[30522]"];
	"convert.2774" [label="convert.2774 \n f32[2,16]"];
	"p104.2767" [label="p104.2767 \n f32[2,16]"];
	"broadcast.2768" [label="broadcast.2768 \n f32[2,16]"];
	"multiply.2769" [label="multiply.2769 \n f32[2,16]"];
	"transpose.2741" [label="transpose.2741 \n bf16[16,16]"];
	"dot.9" [label="dot.9 \n bf16[2,16]"];
	"convert.2751" [label="convert.2751 \n f32[2,16]"];
	"broadcast.2765" [label="broadcast.2765 \n f32[2,16]"];
	"multiply.2766" [label="multiply.2766 \n f32[2,16]"];
	"add.2770" [label="add.2770 \n f32[2,16]"];
	"p103.2752" [label="p103.2752 \n f32[2,16]"];
	"broadcast.2753" [label="broadcast.2753 \n f32[2,16]"];
	"multiply.2754" [label="multiply.2754 \n f32[2,16]"];
	"multiply.2755" [label="multiply.2755 \n f32[2,16]"];
	"broadcast.2756" [label="broadcast.2756 \n f32[2,16]"];
	"multiply.2757" [label="multiply.2757 \n f32[2,16]"];
	"add.2758" [label="add.2758 \n f32[2,16]"];
	"sqrt.2759" [label="sqrt.2759 \n f32[2,16]"];
	"broadcast.2760" [label="broadcast.2760 \n f32[2,16]"];
	"add.2761" [label="add.2761 \n f32[2,16]"];
	"divide.2771" [label="divide.2771 \n f32[2,16]"];
	"constant.2738" [label="constant.2738 \n f32[] constant(-0), metadata="];
	"broadcast.2772" [label="broadcast.2772 \n f32[2,16]"];
	"multiply.2773" [label="multiply.2773 \n f32[2,16]"];
	"add.2775" [label="add.2775 \n f32[2,16]"];
	"convert.2776" [label="convert.2776 \n bf16[2,16]"];
	"constant.2733" [label="constant.2733 \n bf16[] constant(-0), metadata="];
	"broadcast.2737" [label="broadcast.2737 \n bf16[2,16]"];
	"multiply.2777" [label="multiply.2777 \n bf16[2,16]"];
	"add.2778" [label="add.2778 \n bf16[2,16]"];
	"convert.2821" [label="convert.2821 \n f32[2]"];
	"p106.2814" [label="p106.2814 \n f32[2]"];
	"broadcast.2815" [label="broadcast.2815 \n f32[2]"];
	"multiply.2816" [label="multiply.2816 \n f32[2]"];
	"constant.2782" [label="constant.2782 \n bf16[] constant(0), metadata="];
	"reduce.2788" [label="reduce.2788 \n bf16[2]"];
	"convert.2798" [label="convert.2798 \n f32[2]"];
	"broadcast.2812" [label="broadcast.2812 \n f32[2]"];
	"multiply.2813" [label="multiply.2813 \n f32[2]"];
	"add.2817" [label="add.2817 \n f32[2]"];
	"p105.2799" [label="p105.2799 \n f32[2]"];
	"broadcast.2800" [label="broadcast.2800 \n f32[2]"];
	"multiply.2801" [label="multiply.2801 \n f32[2]"];
	"multiply.2802" [label="multiply.2802 \n f32[2]"];
	"broadcast.2803" [label="broadcast.2803 \n f32[2]"];
	"multiply.2804" [label="multiply.2804 \n f32[2]"];
	"add.2805" [label="add.2805 \n f32[2]"];
	"sqrt.2806" [label="sqrt.2806 \n f32[2]"];
	"broadcast.2807" [label="broadcast.2807 \n f32[2]"];
	"add.2808" [label="add.2808 \n f32[2]"];
	"divide.2818" [label="divide.2818 \n f32[2]"];
	"constant.2779" [label="constant.2779 \n f32[] constant(-0), metadata="];
	"broadcast.2819" [label="broadcast.2819 \n f32[2]"];
	"multiply.2820" [label="multiply.2820 \n f32[2]"];
	"add.2822" [label="add.2822 \n f32[2]"];
	"convert.2823" [label="convert.2823 \n bf16[2]"];
	"p108.2828" [label="p108.2828 \n f32[1]"];
	"p107.2825" [label="p107.2825 \n bf16[] parameter(107), frontend_attributes="];
	"convert.56" [label="convert.56 \n f32[] convert(bf16[] %p107.2825), metadata="];
	"reshape.658" [label="reshape.658 \n f32[1]"];
	"add.2830" [label="add.2830 \n f32[1]"];
	"constant.72" [label="constant.72 \n bf16[1]"];
	"reshape.1" [label="reshape.1 \n s64[2048]"];
	"broadcast.4" [label="broadcast.4 \n s64[2048,30522]"];
	"iota.9" [label="iota.9 \n s64[2048,30522]"];
	"compare.0" [label="compare.0 \n pred[2048,30522]"];
	"broadcast.8" [label="broadcast.8 \n bf16[2048,30522]"];
	"broadcast.9" [label="broadcast.9 \n bf16[2048,30522]"];
	"select.0" [label="select.0 \n bf16[2048,30522]"];
	"multiply.2" [label="multiply.2 \n bf16[2048,30522]"];
	"reduce.2" [label="reduce.2 \n bf16[2048]"];
	"broadcast.70" [label="broadcast.70 \n bf16[2048]"];
	"select.6" [label="select.6 \n bf16[2048]"];
	"reduce.3" [label="reduce.3 \n bf16[] reduce(bf16[2048]"];
	"reduce.4" [label="reduce.4 \n bf16[] reduce(bf16[2048]"];
	"negate.0" [label="negate.0 \n bf16[] negate(bf16[] %divide.0), metadata="];
	"broadcast.29" [label="broadcast.29 \n s64[16,2]"];
	"iota.11" [label="iota.11 \n s64[16,2]"];
	"compare.3" [label="compare.3 \n pred[16,2]"];
	"broadcast.34" [label="broadcast.34 \n bf16[16,2]"];
	"broadcast.36" [label="broadcast.36 \n bf16[16,2]"];
	"select.2" [label="select.2 \n bf16[16,2]"];
	"multiply.7" [label="multiply.7 \n bf16[16,2]"];
	"reduce.8" [label="reduce.8 \n bf16[16]"];
	"broadcast.76" [label="broadcast.76 \n bf16[16]"];
	"select.8" [label="select.8 \n bf16[16]"];
	"reduce.9" [label="reduce.9 \n bf16[] reduce(bf16[16]"];
	"reduce.10" [label="reduce.10 \n bf16[] reduce(bf16[16]"];
	"negate.2" [label="negate.2 \n bf16[] negate(bf16[] %divide.2), metadata="];
	"add.2837" [label="add.2837 \n bf16[] add(bf16[] %negate.0, bf16[] %negate.2), metadata="];
	"divide.2838" [label="divide.2838 \n bf16[] divide(bf16[] %add.2837, bf16[] %p36.864), metadata="];
	"tuple.2839" [label="tuple.2839 \n (bf16[30522,16]"]; 
 	"p7.83" -> "convert.1402";
	"p47.1394" -> "broadcast.1396";
	"p48.1395" -> "multiply.1397";
	"broadcast.1396" -> "multiply.1397";
	"p42.1035" -> "custom-call.94";
	"custom-call.94" -> "broadcast.1048";
	"p32.737" -> "custom-call.67";
	"custom-call.67" -> "broadcast.750";
	"p26.552" -> "custom-call.68";
	"custom-call.68" -> "broadcast.565";
	"p14.206" -> "custom-call.69";
	"custom-call.69" -> "broadcast.219";
	"p7.83" -> "custom-call.70";
	"p6.81" -> "convert.7";
	"convert.7" -> "reshape.372";
	"custom-call.70" -> "gather.92";
	"reshape.372" -> "gather.92";
	"p5.69" -> "custom-call.71";
	"p4.67" -> "convert.6";
	"convert.6" -> "reshape.371";
	"custom-call.71" -> "gather.78";
	"reshape.371" -> "gather.78";
	"gather.92" -> "add.12";
	"gather.78" -> "add.12";
	"add.12" -> "reshape.516";
	"p3.50" -> "custom-call.73";
	"p2.46" -> "convert.5";
	"convert.5" -> "slice.0";
	"slice.0" -> "reshape.370";
	"custom-call.73" -> "gather.59";
	"reshape.370" -> "gather.59";
	"gather.59" -> "broadcast.97";
	"reshape.516" -> "add.98";
	"broadcast.97" -> "add.98";
	"add.98" -> "reshape.99";
	"constant.36" -> "broadcast.40";
	"constant.31" -> "broadcast.35";
	"reshape.99" -> "batch-norm-training.100";
	"broadcast.40" -> "batch-norm-training.100";
	"broadcast.35" -> "batch-norm-training.100";
	"batch-norm-training.100" -> "get-tuple-element.101";
	"get-tuple-element.101" -> "reshape.205";
	"p8.118" -> "custom-call.74";
	"custom-call.74" -> "broadcast.215";
	"reshape.205" -> "multiply.218";
	"broadcast.215" -> "multiply.218";
	"broadcast.219" -> "add.220";
	"multiply.218" -> "add.220";
	"constant.129" -> "multiply.130";
	"p10.128" -> "multiply.130";
	"multiply.130" -> "add.132";
	"constant.131" -> "add.132";
	"add.132" -> "convert.139";
	"convert.139" -> "reshape.143";
	"reshape.143" -> "concatenate.145";
	"constant.43" -> "concatenate.145";
	"concatenate.145" -> "rng-bit-generator.146";
	"rng-bit-generator.146" -> "get-tuple-element.147";
	"constant.149" -> "broadcast.150";
	"get-tuple-element.147" -> "shift-right-logical.151";
	"broadcast.150" -> "shift-right-logical.151";
	"shift-right-logical.151" -> "convert.152";
	"constant.47" -> "broadcast.57";
	"convert.152" -> "multiply.158";
	"broadcast.57" -> "multiply.158";
	"multiply.158" -> "convert.161";
	"p9.127" -> "broadcast.136";
	"convert.161" -> "compare.162";
	"broadcast.136" -> "compare.162";
	"constant.27" -> "divide.4";
	"p9.127" -> "divide.4";
	"divide.4" -> "broadcast.58";
	"constant.40" -> "broadcast.81";
	"compare.162" -> "select.13";
	"broadcast.58" -> "select.13";
	"broadcast.81" -> "select.13";
	"add.220" -> "multiply.459";
	"select.13" -> "multiply.459";
	"multiply.459" -> "reshape.279";
	"p11.171" -> "custom-call.75";
	"custom-call.75" -> "transpose.278";
	"reshape.279" -> "dot.280";
	"transpose.278" -> "dot.280";
	"dot.280" -> "reshape.281";
	"p18.269" -> "custom-call.76";
	"custom-call.76" -> "broadcast.282";
	"reshape.281" -> "add.283";
	"broadcast.282" -> "add.283";
	"add.283" -> "reshape.286";
	"reshape.286" -> "transpose.287";
	"transpose.287" -> "reshape.289";
	"multiply.459" -> "reshape.222";
	"p13.195" -> "custom-call.77";
	"custom-call.77" -> "transpose.203";
	"reshape.222" -> "dot.223";
	"transpose.203" -> "dot.223";
	"dot.223" -> "reshape.224";
	"p12.186" -> "custom-call.78";
	"custom-call.78" -> "broadcast.225";
	"reshape.224" -> "add.226";
	"broadcast.225" -> "add.226";
	"add.226" -> "reshape.229";
	"reshape.229" -> "transpose.231";
	"transpose.231" -> "reshape.263";
	"reshape.289" -> "dot.290";
	"reshape.263" -> "dot.290";
	"p15.235" -> "broadcast.199";
	"dot.290" -> "divide.10";
	"broadcast.199" -> "divide.10";
	"divide.10" -> "reshape.524";
	"constant.254" -> "broadcast.201";
	"p17.242" -> "convert.3";
	"broadcast.201" -> "subtract.4";
	"convert.3" -> "subtract.4";
	"p16.241" -> "broadcast.205";
	"subtract.4" -> "multiply.32";
	"broadcast.205" -> "multiply.32";
	"multiply.32" -> "broadcast.296";
	"reshape.524" -> "add.297";
	"broadcast.296" -> "add.297";
	"add.297" -> "reduce.303";
	"constant.298" -> "reduce.303";
	"MaxComputation.299" -> "reduce.303";
	"reduce.303" -> "broadcast.304";
	"add.297" -> "subtract.305";
	"broadcast.304" -> "subtract.305";
	"subtract.305" -> "exponential.306";
	"exponential.306" -> "reduce.312";
	"constant.307" -> "reduce.312";
	"AddComputation.308" -> "reduce.312";
	"reduce.312" -> "broadcast.313";
	"exponential.306" -> "divide.314";
	"broadcast.313" -> "divide.314";
	"constant.315" -> "multiply.316";
	"add.132" -> "multiply.316";
	"multiply.316" -> "add.318";
	"constant.317" -> "add.318";
	"add.318" -> "convert.325";
	"convert.325" -> "reshape.329";
	"reshape.329" -> "concatenate.331";
	"constant.48" -> "concatenate.331";
	"concatenate.331" -> "rng-bit-generator.332";
	"rng-bit-generator.332" -> "get-tuple-element.333";
	"constant.335" -> "broadcast.336";
	"get-tuple-element.333" -> "shift-right-logical.337";
	"broadcast.336" -> "shift-right-logical.337";
	"shift-right-logical.337" -> "convert.338";
	"constant.52" -> "broadcast.62";
	"convert.338" -> "multiply.344";
	"broadcast.62" -> "multiply.344";
	"multiply.344" -> "convert.347";
	"p9.127" -> "broadcast.322";
	"convert.347" -> "compare.348";
	"broadcast.322" -> "compare.348";
	"constant.28" -> "divide.5";
	"p9.127" -> "divide.5";
	"divide.5" -> "broadcast.63";
	"constant.39" -> "broadcast.80";
	"compare.348" -> "select.12";
	"broadcast.63" -> "select.12";
	"broadcast.80" -> "select.12";
	"divide.314" -> "multiply.476";
	"select.12" -> "multiply.476";
	"multiply.476" -> "reshape.478";
	"multiply.459" -> "reshape.375";
	"p20.366" -> "custom-call.79";
	"custom-call.79" -> "transpose.374";
	"reshape.375" -> "dot.376";
	"transpose.374" -> "dot.376";
	"dot.376" -> "reshape.377";
	"p19.357" -> "custom-call.80";
	"custom-call.80" -> "broadcast.378";
	"reshape.377" -> "add.379";
	"broadcast.378" -> "add.379";
	"add.379" -> "reshape.382";
	"reshape.382" -> "transpose.383";
	"transpose.383" -> "reshape.475";
	"reshape.478" -> "dot.479";
	"reshape.475" -> "dot.479";
	"dot.479" -> "reshape.480";
	"reshape.480" -> "transpose.481";
	"transpose.481" -> "reshape.483";
	"p21.387" -> "custom-call.81";
	"custom-call.81" -> "transpose.474";
	"reshape.483" -> "dot.484";
	"transpose.474" -> "dot.484";
	"dot.484" -> "reshape.485";
	"p22.465" -> "custom-call.82";
	"custom-call.82" -> "broadcast.486";
	"reshape.485" -> "add.487";
	"broadcast.486" -> "add.487";
	"constant.397" -> "multiply.398";
	"add.318" -> "multiply.398";
	"multiply.398" -> "add.400";
	"constant.399" -> "add.400";
	"add.400" -> "convert.407";
	"convert.407" -> "reshape.411";
	"reshape.411" -> "concatenate.413";
	"constant.53" -> "concatenate.413";
	"concatenate.413" -> "rng-bit-generator.414";
	"rng-bit-generator.414" -> "get-tuple-element.415";
	"constant.417" -> "broadcast.418";
	"get-tuple-element.415" -> "shift-right-logical.419";
	"broadcast.418" -> "shift-right-logical.419";
	"shift-right-logical.419" -> "convert.420";
	"constant.57" -> "broadcast.65";
	"convert.420" -> "multiply.426";
	"broadcast.65" -> "multiply.426";
	"multiply.426" -> "convert.429";
	"p9.127" -> "broadcast.404";
	"convert.429" -> "compare.430";
	"broadcast.404" -> "compare.430";
	"constant.29" -> "divide.6";
	"p9.127" -> "divide.6";
	"divide.6" -> "broadcast.67";
	"constant.38" -> "broadcast.79";
	"compare.430" -> "select.11";
	"broadcast.67" -> "select.11";
	"broadcast.79" -> "select.11";
	"add.487" -> "multiply.490";
	"select.11" -> "multiply.490";
	"multiply.490" -> "add.491";
	"multiply.459" -> "add.491";
	"add.491" -> "reshape.492";
	"constant.449" -> "broadcast.453";
	"constant.444" -> "broadcast.448";
	"reshape.492" -> "batch-norm-training.493";
	"broadcast.453" -> "batch-norm-training.493";
	"broadcast.448" -> "batch-norm-training.493";
	"batch-norm-training.493" -> "get-tuple-element.494";
	"get-tuple-element.494" -> "reshape.551";
	"p23.511" -> "custom-call.83";
	"custom-call.83" -> "broadcast.561";
	"reshape.551" -> "multiply.564";
	"broadcast.561" -> "multiply.564";
	"broadcast.565" -> "add.566";
	"multiply.564" -> "add.566";
	"add.566" -> "reshape.567";
	"p24.525" -> "custom-call.84";
	"custom-call.84" -> "transpose.549";
	"reshape.567" -> "dot.568";
	"transpose.549" -> "dot.568";
	"dot.568" -> "reshape.569";
	"p25.540" -> "custom-call.85";
	"custom-call.85" -> "broadcast.570";
	"reshape.569" -> "add.571";
	"broadcast.570" -> "add.571";
	"add.571" -> "custom-call.87";
	"custom-call.87" -> "reshape.669";
	"p27.574" -> "custom-call.88";
	"custom-call.88" -> "transpose.661";
	"reshape.669" -> "dot.670";
	"transpose.661" -> "dot.670";
	"dot.670" -> "reshape.671";
	"p28.652" -> "custom-call.89";
	"custom-call.89" -> "broadcast.672";
	"reshape.671" -> "add.673";
	"broadcast.672" -> "add.673";
	"constant.584" -> "multiply.585";
	"add.400" -> "multiply.585";
	"multiply.585" -> "add.587";
	"constant.586" -> "add.587";
	"add.587" -> "convert.594";
	"convert.594" -> "reshape.598";
	"reshape.598" -> "concatenate.600";
	"constant.59" -> "concatenate.600";
	"concatenate.600" -> "rng-bit-generator.601";
	"rng-bit-generator.601" -> "get-tuple-element.602";
	"constant.604" -> "broadcast.605";
	"get-tuple-element.602" -> "shift-right-logical.606";
	"broadcast.605" -> "shift-right-logical.606";
	"shift-right-logical.606" -> "convert.607";
	"constant.64" -> "broadcast.68";
	"convert.607" -> "multiply.613";
	"broadcast.68" -> "multiply.613";
	"multiply.613" -> "convert.616";
	"p9.127" -> "broadcast.591";
	"convert.616" -> "compare.617";
	"broadcast.591" -> "compare.617";
	"constant.30" -> "divide.7";
	"p9.127" -> "divide.7";
	"divide.7" -> "broadcast.69";
	"constant.37" -> "broadcast.78";
	"compare.617" -> "select.10";
	"broadcast.69" -> "select.10";
	"broadcast.78" -> "select.10";
	"add.673" -> "multiply.676";
	"select.10" -> "multiply.676";
	"multiply.676" -> "add.677";
	"add.566" -> "add.677";
	"add.677" -> "reshape.678";
	"constant.636" -> "broadcast.640";
	"constant.631" -> "broadcast.635";
	"reshape.678" -> "batch-norm-training.679";
	"broadcast.640" -> "batch-norm-training.679";
	"broadcast.635" -> "batch-norm-training.679";
	"batch-norm-training.679" -> "get-tuple-element.680";
	"get-tuple-element.680" -> "reshape.736";
	"p29.697" -> "custom-call.90";
	"custom-call.90" -> "broadcast.746";
	"reshape.736" -> "multiply.749";
	"broadcast.746" -> "multiply.749";
	"broadcast.750" -> "add.751";
	"multiply.749" -> "add.751";
	"add.751" -> "reshape.945";
	"p37.920" -> "custom-call.91";
	"custom-call.91" -> "transpose.944";
	"reshape.945" -> "dot.946";
	"transpose.944" -> "dot.946";
	"dot.946" -> "reshape.947";
	"p38.935" -> "custom-call.92";
	"custom-call.92" -> "broadcast.948";
	"reshape.947" -> "add.949";
	"broadcast.948" -> "add.949";
	"add.949" -> "custom-call.93";
	"custom-call.93" -> "reshape.979";
	"constant.967" -> "broadcast.971";
	"constant.962" -> "broadcast.966";
	"reshape.979" -> "batch-norm-training.980";
	"broadcast.971" -> "batch-norm-training.980";
	"broadcast.966" -> "batch-norm-training.980";
	"batch-norm-training.980" -> "get-tuple-element.981";
	"get-tuple-element.981" -> "reshape.1034";
	"p39.998" -> "custom-call.95";
	"custom-call.95" -> "broadcast.1044";
	"reshape.1034" -> "multiply.1047";
	"broadcast.1044" -> "multiply.1047";
	"broadcast.1048" -> "add.1049";
	"multiply.1047" -> "add.1049";
	"add.1049" -> "reshape.1050";
	"p7.83" -> "custom-call.96";
	"custom-call.96" -> "transpose.1032";
	"reshape.1050" -> "dot.1051";
	"transpose.1032" -> "dot.1051";
	"dot.1051" -> "reshape.1052";
	"p41.1023" -> "custom-call.97";
	"custom-call.97" -> "broadcast.1053";
	"reshape.1052" -> "add.1054";
	"broadcast.1053" -> "add.1054";
	"add.1054" -> "reshape.1057";
	"reshape.1057" -> "reduce.0";
	"constant.0" -> "reduce.0";
	"SimpleCrossEntropyLossForwardMax.1058" -> "reduce.0";
	"reduce.0" -> "broadcast.0";
	"reshape.1057" -> "subtract.0";
	"broadcast.0" -> "subtract.0";
	"subtract.0" -> "exponential.0";
	"exponential.0" -> "reduce.1";
	"constant.2" -> "reduce.1";
	"SimpleCrossEntropyLossForwardAdd.1062" -> "reduce.1";
	"reduce.1" -> "log.0";
	"log.0" -> "broadcast.1";
	"subtract.0" -> "subtract.1";
	"broadcast.1" -> "subtract.1";
	"subtract.1" -> "exponential.1";
	"constant.5" -> "broadcast.203";
	"p40.1016" -> "compare.8";
	"broadcast.203" -> "compare.8";
	"compare.8" -> "reshape.527";
	"reshape.527" -> "convert.0";
	"convert.0" -> "reduce.5";
	"constant.8" -> "reduce.5";
	"SimpleCrossEntropyLossBackwardAdd.1121" -> "reduce.5";
	"p36.864" -> "multiply.25";
	"reduce.5" -> "multiply.25";
	"constant.865" -> "divide.1";
	"multiply.25" -> "divide.1";
	"divide.1" -> "broadcast.11";
	"constant.33" -> "broadcast.71";
	"reshape.527" -> "select.7";
	"broadcast.11" -> "select.7";
	"broadcast.71" -> "select.7";
	"select.7" -> "broadcast.12";
	"exponential.1" -> "multiply.5";
	"broadcast.12" -> "multiply.5";
	"p40.1016" -> "reshape.6";
	"reshape.6" -> "broadcast.16";
	"broadcast.16" -> "compare.2";
	"iota.5" -> "compare.2";
	"divide.1" -> "negate.1";
	"negate.1" -> "broadcast.21";
	"constant.9" -> "broadcast.22";
	"compare.2" -> "select.1";
	"broadcast.21" -> "select.1";
	"broadcast.22" -> "select.1";
	"multiply.5" -> "add.0";
	"select.1" -> "add.0";
	"add.1049" -> "reshape.1364";
	"reshape.1364" -> "transpose.1365";
	"add.0" -> "dot";
	"transpose.1365" -> "dot";
	"dot" -> "custom-call.104";
	"constant.1344" -> "broadcast.1348";
	"p6.81" -> "reshape.1323";
	"constant.1338" -> "broadcast.1339";
	"reshape.1323" -> "compare.1340";
	"broadcast.1339" -> "compare.1340";
	"p43.1332" -> "broadcast.1336";
	"reshape.1323" -> "add.1337";
	"broadcast.1336" -> "add.1337";
	"compare.1340" -> "select.1341";
	"add.1337" -> "select.1341";
	"reshape.1323" -> "select.1341";
	"select.1341" -> "reshape.1342";
	"reshape.1323" -> "convert.1324";
	"constant.1322" -> "broadcast.1325";
	"convert.1324" -> "compare.1326";
	"broadcast.1325" -> "compare.1326";
	"compare.1326" -> "broadcast.1330";
	"constant.108" -> "broadcast.112";
	"batch-norm-training.100" -> "get-tuple-element.102";
	"batch-norm-training.100" -> "get-tuple-element.103";
	"constant.104" -> "broadcast.105";
	"get-tuple-element.103" -> "add.106";
	"broadcast.105" -> "add.106";
	"add.106" -> "sqrt";
	"sqrt" -> "multiply.1313";
	"sqrt" -> "multiply.1313";
	"constant.67" -> "broadcast.72";
	"multiply.1313" -> "add.8";
	"broadcast.72" -> "add.8";
	"constant.501" -> "broadcast.505";
	"batch-norm-training.493" -> "get-tuple-element.495";
	"batch-norm-training.493" -> "get-tuple-element.496";
	"constant.497" -> "broadcast.498";
	"get-tuple-element.496" -> "add.499";
	"broadcast.498" -> "add.499";
	"add.499" -> "sqrt.1";
	"sqrt.1" -> "multiply.1228";
	"sqrt.1" -> "multiply.1228";
	"constant.68" -> "broadcast.73";
	"multiply.1228" -> "add.9";
	"broadcast.73" -> "add.9";
	"constant.687" -> "broadcast.691";
	"batch-norm-training.679" -> "get-tuple-element.681";
	"batch-norm-training.679" -> "get-tuple-element.682";
	"constant.683" -> "broadcast.684";
	"get-tuple-element.682" -> "add.685";
	"broadcast.684" -> "add.685";
	"add.685" -> "sqrt.2";
	"sqrt.2" -> "multiply.1194";
	"sqrt.2" -> "multiply.1194";
	"constant.69" -> "broadcast.74";
	"multiply.1194" -> "add.10";
	"broadcast.74" -> "add.10";
	"constant.988" -> "broadcast.992";
	"batch-norm-training.980" -> "get-tuple-element.982";
	"batch-norm-training.980" -> "get-tuple-element.983";
	"constant.984" -> "broadcast.985";
	"get-tuple-element.983" -> "add.986";
	"broadcast.985" -> "add.986";
	"add.986" -> "sqrt.3";
	"sqrt.3" -> "multiply.1165";
	"sqrt.3" -> "multiply.1165";
	"constant.70" -> "broadcast.75";
	"multiply.1165" -> "add.11";
	"broadcast.75" -> "add.11";
	"add.0" -> "dot.1156";
	"custom-call.96" -> "dot.1156";
	"dot.1156" -> "reshape.1157";
	"custom-call.95" -> "broadcast.1158";
	"reshape.1157" -> "multiply.1159";
	"broadcast.1158" -> "multiply.1159";
	"multiply.1159" -> "reshape.1160";
	"reshape.979" -> "batch-norm-grad.1168";
	"broadcast.992" -> "batch-norm-grad.1168";
	"get-tuple-element.982" -> "batch-norm-grad.1168";
	"add.11" -> "batch-norm-grad.1168";
	"reshape.1160" -> "batch-norm-grad.1168";
	"batch-norm-grad.1168" -> "get-tuple-element.1169";
	"get-tuple-element.1169" -> "reshape.1172";
	"add.949" -> "custom-call.98";
	"reshape.1172" -> "multiply.6";
	"custom-call.98" -> "multiply.6";
	"multiply.6" -> "reshape.1183";
	"reshape.1183" -> "dot.1184";
	"custom-call.91" -> "dot.1184";
	"dot.1184" -> "reshape.1185";
	"add.751" -> "slice.753";
	"slice.753" -> "reshape.754";
	"p30.711" -> "custom-call.99";
	"custom-call.99" -> "transpose.734";
	"reshape.754" -> "dot.755";
	"transpose.734" -> "dot.755";
	"p31.726" -> "custom-call.100";
	"custom-call.100" -> "broadcast.759";
	"dot.755" -> "add.760";
	"broadcast.759" -> "add.760";
	"add.760" -> "tanh.761";
	"p33.775" -> "custom-call.101";
	"custom-call.101" -> "transpose.794";
	"tanh.761" -> "dot.795";
	"transpose.794" -> "dot.795";
	"p35.786" -> "custom-call.102";
	"custom-call.102" -> "broadcast.799";
	"dot.795" -> "add.800";
	"broadcast.799" -> "add.800";
	"add.800" -> "reduce.6";
	"constant.10" -> "reduce.6";
	"SimpleCrossEntropyLossForwardMax.801" -> "reduce.6";
	"reduce.6" -> "broadcast.24";
	"add.800" -> "subtract.2";
	"broadcast.24" -> "subtract.2";
	"subtract.2" -> "exponential.2";
	"exponential.2" -> "reduce.7";
	"constant.12" -> "reduce.7";
	"SimpleCrossEntropyLossForwardAdd.805" -> "reduce.7";
	"reduce.7" -> "log.1";
	"log.1" -> "broadcast.26";
	"subtract.2" -> "subtract.3";
	"broadcast.26" -> "subtract.3";
	"subtract.3" -> "exponential.3";
	"constant.15" -> "broadcast.37";
	"p34.785" -> "compare.4";
	"broadcast.37" -> "compare.4";
	"compare.4" -> "convert.1";
	"convert.1" -> "reduce.11";
	"constant.17" -> "reduce.11";
	"SimpleCrossEntropyLossBackwardAdd.868" -> "reduce.11";
	"p36.864" -> "multiply.30";
	"reduce.11" -> "multiply.30";
	"constant.865" -> "divide.3";
	"multiply.30" -> "divide.3";
	"divide.3" -> "broadcast.39";
	"constant.35" -> "broadcast.77";
	"compare.4" -> "select.9";
	"broadcast.39" -> "select.9";
	"broadcast.77" -> "select.9";
	"select.9" -> "broadcast.41";
	"exponential.3" -> "multiply.11";
	"broadcast.41" -> "multiply.11";
	"p34.785" -> "broadcast.44";
	"broadcast.44" -> "compare.5";
	"iota.7" -> "compare.5";
	"divide.3" -> "negate.3";
	"negate.3" -> "broadcast.48";
	"constant.18" -> "broadcast.49";
	"compare.5" -> "select.3";
	"broadcast.48" -> "select.3";
	"broadcast.49" -> "select.3";
	"multiply.11" -> "add.1";
	"select.3" -> "add.1";
	"add.1" -> "dot.901";
	"custom-call.101" -> "dot.901";
	"constant.769" -> "broadcast.773";
	"tanh.761" -> "multiply.768";
	"tanh.761" -> "multiply.768";
	"broadcast.773" -> "subtract.774";
	"multiply.768" -> "subtract.774";
	"dot.901" -> "multiply.902";
	"subtract.774" -> "multiply.902";
	"multiply.902" -> "dot.903";
	"custom-call.99" -> "dot.903";
	"dot.903" -> "reshape.904";
	"reshape.904" -> "pad";
	"constant.71" -> "pad";
	"reshape.1185" -> "add.1186";
	"pad" -> "add.1186";
	"custom-call.90" -> "broadcast.1187";
	"add.1186" -> "multiply.1188";
	"broadcast.1187" -> "multiply.1188";
	"multiply.1188" -> "reshape.1189";
	"reshape.678" -> "batch-norm-grad.1197";
	"broadcast.691" -> "batch-norm-grad.1197";
	"get-tuple-element.681" -> "batch-norm-grad.1197";
	"add.10" -> "batch-norm-grad.1197";
	"reshape.1189" -> "batch-norm-grad.1197";
	"batch-norm-grad.1197" -> "get-tuple-element.1198";
	"get-tuple-element.1198" -> "reshape.1201";
	"reshape.1201" -> "multiply.1202";
	"select.10" -> "multiply.1202";
	"multiply.1202" -> "reshape.1203";
	"reshape.1203" -> "dot.1204";
	"custom-call.88" -> "dot.1204";
	"dot.1204" -> "reshape.1205";
	"add.571" -> "custom-call.103";
	"reshape.1205" -> "multiply.12";
	"custom-call.103" -> "multiply.12";
	"multiply.12" -> "reshape.1216";
	"reshape.1216" -> "dot.1217";
	"custom-call.84" -> "dot.1217";
	"dot.1217" -> "reshape.1218";
	"reshape.1201" -> "add.1220";
	"reshape.1218" -> "add.1220";
	"custom-call.83" -> "broadcast.1221";
	"add.1220" -> "multiply.1222";
	"broadcast.1221" -> "multiply.1222";
	"multiply.1222" -> "reshape.1223";
	"reshape.492" -> "batch-norm-grad.1231";
	"broadcast.505" -> "batch-norm-grad.1231";
	"get-tuple-element.495" -> "batch-norm-grad.1231";
	"add.9" -> "batch-norm-grad.1231";
	"reshape.1223" -> "batch-norm-grad.1231";
	"batch-norm-grad.1231" -> "get-tuple-element.1232";
	"get-tuple-element.1232" -> "reshape.1235";
	"multiply.476" -> "reshape.1292";
	"reshape.1292" -> "transpose.1293";
	"reshape.1235" -> "multiply.1236";
	"select.11" -> "multiply.1236";
	"multiply.1236" -> "reshape.1237";
	"reshape.1237" -> "dot.1238";
	"custom-call.81" -> "dot.1238";
	"dot.1238" -> "reshape.1240";
	"reshape.1240" -> "transpose.1241";
	"transpose.1241" -> "reshape.1242";
	"transpose.1293" -> "dot.1294";
	"reshape.1242" -> "dot.1294";
	"dot.1294" -> "reshape.1295";
	"reshape.1295" -> "transpose.1296";
	"transpose.1296" -> "reshape.1298";
	"reshape.1298" -> "dot.1299";
	"custom-call.79" -> "dot.1299";
	"dot.1299" -> "reshape.1300";
	"reshape.1235" -> "add.1302";
	"reshape.1300" -> "add.1302";
	"transpose.287" -> "reshape.1274";
	"reshape.1274" -> "transpose.1275";
	"transpose.383" -> "reshape.385";
	"reshape.385" -> "transpose.386";
	"reshape.1242" -> "dot.1243";
	"transpose.386" -> "dot.1243";
	"dot.1243" -> "reshape.1244";
	"reshape.1244" -> "multiply.1245";
	"select.12" -> "multiply.1245";
	"multiply.1245" -> "multiply.1246";
	"divide.314" -> "multiply.1246";
	"multiply.1246" -> "reduce.1252";
	"constant.1247" -> "reduce.1252";
	"AddComputation.1248" -> "reduce.1252";
	"reduce.1252" -> "broadcast.1253";
	"multiply.1245" -> "subtract.1254";
	"broadcast.1253" -> "subtract.1254";
	"divide.314" -> "multiply.1255";
	"subtract.1254" -> "multiply.1255";
	"p15.235" -> "broadcast.1256";
	"multiply.1255" -> "divide.1257";
	"broadcast.1256" -> "divide.1257";
	"divide.1257" -> "reshape.1258";
	"transpose.1275" -> "dot.1276";
	"reshape.1258" -> "dot.1276";
	"dot.1276" -> "reshape.1277";
	"reshape.1277" -> "transpose.1279";
	"transpose.1279" -> "reshape.1281";
	"reshape.1281" -> "dot.1282";
	"custom-call.77" -> "dot.1282";
	"dot.1282" -> "reshape.1283";
	"add.1302" -> "add.1303";
	"reshape.1283" -> "add.1303";
	"transpose.231" -> "reshape.233";
	"reshape.233" -> "transpose.234";
	"reshape.1258" -> "dot.1259";
	"transpose.234" -> "dot.1259";
	"dot.1259" -> "reshape.1260";
	"reshape.1260" -> "transpose.1261";
	"transpose.1261" -> "reshape.1263";
	"reshape.1263" -> "dot.1264";
	"custom-call.75" -> "dot.1264";
	"dot.1264" -> "reshape.1265";
	"add.1303" -> "add.1304";
	"reshape.1265" -> "add.1304";
	"add.1304" -> "multiply.1305";
	"select.13" -> "multiply.1305";
	"custom-call.74" -> "broadcast.1306";
	"multiply.1305" -> "multiply.1307";
	"broadcast.1306" -> "multiply.1307";
	"multiply.1307" -> "reshape.1308";
	"reshape.99" -> "batch-norm-grad.1316";
	"broadcast.112" -> "batch-norm-grad.1316";
	"get-tuple-element.102" -> "batch-norm-grad.1316";
	"add.8" -> "batch-norm-grad.1316";
	"reshape.1308" -> "batch-norm-grad.1316";
	"batch-norm-grad.1316" -> "get-tuple-element.1317";
	"get-tuple-element.1317" -> "reshape.1321";
	"constant.16" -> "broadcast.20";
	"broadcast.1330" -> "select.1331";
	"reshape.1321" -> "select.1331";
	"broadcast.20" -> "select.1331";
	"broadcast.1348" -> "scatter.1354";
	"reshape.1342" -> "scatter.1354";
	"select.1331" -> "scatter.1354";
	"ScatterCombiner.1350" -> "scatter.1354";
	"scatter.1354" -> "custom-call.105";
	"custom-call.104" -> "add.1375";
	"custom-call.105" -> "add.1375";
	"add.1375" -> "convert.1376";
	"p46.1388" -> "broadcast.1392";
	"convert.1376" -> "multiply.1393";
	"broadcast.1392" -> "multiply.1393";
	"multiply.1397" -> "add.1398";
	"multiply.1393" -> "add.1398";
	"p44.1377" -> "broadcast.1379";
	"p45.1378" -> "multiply.1380";
	"broadcast.1379" -> "multiply.1380";
	"convert.1376" -> "multiply.1381";
	"convert.1376" -> "multiply.1381";
	"p1.10" -> "broadcast.1382";
	"multiply.1381" -> "multiply.1383";
	"broadcast.1382" -> "multiply.1383";
	"multiply.1380" -> "add.1384";
	"multiply.1383" -> "add.1384";
	"add.1384" -> "sqrt.1385";
	"p0.8" -> "broadcast.1386";
	"sqrt.1385" -> "add.1387";
	"broadcast.1386" -> "add.1387";
	"add.1398" -> "divide.1399";
	"add.1387" -> "divide.1399";
	"constant.6" -> "broadcast.1400";
	"divide.1399" -> "multiply.1401";
	"broadcast.1400" -> "multiply.1401";
	"convert.1402" -> "add.1403";
	"multiply.1401" -> "add.1403";
	"add.1403" -> "convert.1404";
	"constant.1" -> "broadcast.5";
	"convert.1404" -> "multiply.1405";
	"broadcast.5" -> "multiply.1405";
	"convert.1404" -> "add.1406";
	"multiply.1405" -> "add.1406";
	"p3.50" -> "convert.1478";
	"p47.1394" -> "broadcast.1472";
	"p50.1471" -> "multiply.1473";
	"broadcast.1472" -> "multiply.1473";
	"constant.19" -> "broadcast.50";
	"p2.46" -> "slice.1416";
	"slice.1416" -> "reshape.16";
	"constant.20" -> "broadcast.51";
	"reshape.16" -> "compare.6";
	"broadcast.51" -> "compare.6";
	"constant.22" -> "broadcast.52";
	"reshape.16" -> "add.2";
	"broadcast.52" -> "add.2";
	"compare.6" -> "select.4";
	"reshape.16" -> "select.4";
	"add.2" -> "select.4";
	"select.4" -> "reshape.18";
	"get-tuple-element.1317" -> "reshape.1417";
	"reshape.1417" -> "reduce.1424";
	"constant.1418" -> "reduce.1424";
	"AddComputation.1420" -> "reduce.1424";
	"broadcast.50" -> "scatter.0";
	"reshape.18" -> "scatter.0";
	"reduce.1424" -> "scatter.0";
	"Int32PermissiveEmbeddingScatterCombiner.1426" -> "scatter.0";
	"scatter.0" -> "custom-call.106";
	"custom-call.106" -> "convert.1455";
	"p46.1388" -> "broadcast.1469";
	"convert.1455" -> "multiply.1470";
	"broadcast.1469" -> "multiply.1470";
	"multiply.1473" -> "add.1474";
	"multiply.1470" -> "add.1474";
	"p44.1377" -> "broadcast.1457";
	"p49.1456" -> "multiply.1458";
	"broadcast.1457" -> "multiply.1458";
	"convert.1455" -> "multiply.1459";
	"convert.1455" -> "multiply.1459";
	"p1.10" -> "broadcast.1460";
	"multiply.1459" -> "multiply.1461";
	"broadcast.1460" -> "multiply.1461";
	"multiply.1458" -> "add.1462";
	"multiply.1461" -> "add.1462";
	"add.1462" -> "sqrt.1463";
	"p0.8" -> "broadcast.1464";
	"sqrt.1463" -> "add.1465";
	"broadcast.1464" -> "add.1465";
	"add.1474" -> "divide.1475";
	"add.1465" -> "divide.1475";
	"constant.1412" -> "broadcast.1476";
	"divide.1475" -> "multiply.1477";
	"broadcast.1476" -> "multiply.1477";
	"convert.1478" -> "add.1479";
	"multiply.1477" -> "add.1479";
	"add.1479" -> "convert.1480";
	"constant.1407" -> "broadcast.1411";
	"convert.1480" -> "multiply.1481";
	"broadcast.1411" -> "multiply.1481";
	"convert.1480" -> "add.1482";
	"multiply.1481" -> "add.1482";
	"p5.69" -> "convert.1543";
	"p47.1394" -> "broadcast.1537";
	"p52.1536" -> "multiply.1538";
	"broadcast.1537" -> "multiply.1538";
	"constant.23" -> "broadcast.53";
	"p4.67" -> "reshape.21";
	"constant.24" -> "broadcast.54";
	"reshape.21" -> "compare.7";
	"broadcast.54" -> "compare.7";
	"constant.25" -> "broadcast.55";
	"reshape.21" -> "add.3";
	"broadcast.55" -> "add.3";
	"compare.7" -> "select.5";
	"reshape.21" -> "select.5";
	"add.3" -> "select.5";
	"select.5" -> "reshape.23";
	"get-tuple-element.1317" -> "reshape.25";
	"broadcast.53" -> "scatter.1";
	"reshape.23" -> "scatter.1";
	"reshape.25" -> "scatter.1";
	"Int32PermissiveEmbeddingScatterCombiner.1491" -> "scatter.1";
	"scatter.1" -> "custom-call.107";
	"custom-call.107" -> "convert.1520";
	"p46.1388" -> "broadcast.1534";
	"convert.1520" -> "multiply.1535";
	"broadcast.1534" -> "multiply.1535";
	"multiply.1538" -> "add.1539";
	"multiply.1535" -> "add.1539";
	"p44.1377" -> "broadcast.1522";
	"p51.1521" -> "multiply.1523";
	"broadcast.1522" -> "multiply.1523";
	"convert.1520" -> "multiply.1524";
	"convert.1520" -> "multiply.1524";
	"p1.10" -> "broadcast.1525";
	"multiply.1524" -> "multiply.1526";
	"broadcast.1525" -> "multiply.1526";
	"multiply.1523" -> "add.1527";
	"multiply.1526" -> "add.1527";
	"add.1527" -> "sqrt.1528";
	"p0.8" -> "broadcast.1529";
	"sqrt.1528" -> "add.1530";
	"broadcast.1529" -> "add.1530";
	"add.1539" -> "divide.1540";
	"add.1530" -> "divide.1540";
	"constant.1488" -> "broadcast.1541";
	"divide.1540" -> "multiply.1542";
	"broadcast.1541" -> "multiply.1542";
	"convert.1543" -> "add.1544";
	"multiply.1542" -> "add.1544";
	"add.1544" -> "convert.1545";
	"constant.1483" -> "broadcast.1487";
	"convert.1545" -> "multiply.1546";
	"broadcast.1487" -> "multiply.1546";
	"convert.1545" -> "add.1547";
	"multiply.1546" -> "add.1547";
	"p8.118" -> "convert.1597";
	"p47.1394" -> "broadcast.1591";
	"p54.1590" -> "multiply.1592";
	"broadcast.1591" -> "multiply.1592";
	"multiply.1305" -> "multiply.1557";
	"reshape.205" -> "multiply.1557";
	"multiply.1557" -> "reduce.1564";
	"constant.1558" -> "reduce.1564";
	"AddComputation.1560" -> "reduce.1564";
	"reduce.1564" -> "custom-call.108";
	"custom-call.108" -> "convert.1574";
	"p46.1388" -> "broadcast.1588";
	"convert.1574" -> "multiply.1589";
	"broadcast.1588" -> "multiply.1589";
	"multiply.1592" -> "add.1593";
	"multiply.1589" -> "add.1593";
	"p44.1377" -> "broadcast.1576";
	"p53.1575" -> "multiply.1577";
	"broadcast.1576" -> "multiply.1577";
	"convert.1574" -> "multiply.1578";
	"convert.1574" -> "multiply.1578";
	"p1.10" -> "broadcast.1579";
	"multiply.1578" -> "multiply.1580";
	"broadcast.1579" -> "multiply.1580";
	"multiply.1577" -> "add.1581";
	"multiply.1580" -> "add.1581";
	"add.1581" -> "sqrt.1582";
	"p0.8" -> "broadcast.1583";
	"sqrt.1582" -> "add.1584";
	"broadcast.1583" -> "add.1584";
	"add.1593" -> "divide.1594";
	"add.1584" -> "divide.1594";
	"constant.1548" -> "broadcast.1595";
	"divide.1594" -> "multiply.1596";
	"broadcast.1595" -> "multiply.1596";
	"convert.1597" -> "add.1598";
	"multiply.1596" -> "add.1598";
	"add.1598" -> "convert.1599";
	"p14.206" -> "convert.1642";
	"p47.1394" -> "broadcast.1636";
	"p56.1635" -> "multiply.1637";
	"broadcast.1636" -> "multiply.1637";
	"multiply.1305" -> "reduce.1609";
	"constant.1603" -> "reduce.1609";
	"AddComputation.1605" -> "reduce.1609";
	"reduce.1609" -> "custom-call.109";
	"custom-call.109" -> "convert.1619";
	"p46.1388" -> "broadcast.1633";
	"convert.1619" -> "multiply.1634";
	"broadcast.1633" -> "multiply.1634";
	"multiply.1637" -> "add.1638";
	"multiply.1634" -> "add.1638";
	"p44.1377" -> "broadcast.1621";
	"p55.1620" -> "multiply.1622";
	"broadcast.1621" -> "multiply.1622";
	"convert.1619" -> "multiply.1623";
	"convert.1619" -> "multiply.1623";
	"p1.10" -> "broadcast.1624";
	"multiply.1623" -> "multiply.1625";
	"broadcast.1624" -> "multiply.1625";
	"multiply.1622" -> "add.1626";
	"multiply.1625" -> "add.1626";
	"add.1626" -> "sqrt.1627";
	"p0.8" -> "broadcast.1628";
	"sqrt.1627" -> "add.1629";
	"broadcast.1628" -> "add.1629";
	"add.1638" -> "divide.1639";
	"add.1629" -> "divide.1639";
	"constant.1600" -> "broadcast.1640";
	"divide.1639" -> "multiply.1641";
	"broadcast.1640" -> "multiply.1641";
	"convert.1642" -> "add.1643";
	"multiply.1641" -> "add.1643";
	"add.1643" -> "convert.1644";
	"p11.171" -> "convert.1687";
	"p47.1394" -> "broadcast.1681";
	"p58.1680" -> "multiply.1682";
	"broadcast.1681" -> "multiply.1682";
	"multiply.459" -> "reshape.1653";
	"reshape.1653" -> "transpose.1654";
	"reshape.1263" -> "dot.1";
	"transpose.1654" -> "dot.1";
	"dot.1" -> "custom-call.110";
	"custom-call.110" -> "convert.1664";
	"p46.1388" -> "broadcast.1678";
	"convert.1664" -> "multiply.1679";
	"broadcast.1678" -> "multiply.1679";
	"multiply.1682" -> "add.1683";
	"multiply.1679" -> "add.1683";
	"p44.1377" -> "broadcast.1666";
	"p57.1665" -> "multiply.1667";
	"broadcast.1666" -> "multiply.1667";
	"convert.1664" -> "multiply.1668";
	"convert.1664" -> "multiply.1668";
	"p1.10" -> "broadcast.1669";
	"multiply.1668" -> "multiply.1670";
	"broadcast.1669" -> "multiply.1670";
	"multiply.1667" -> "add.1671";
	"multiply.1670" -> "add.1671";
	"add.1671" -> "sqrt.1672";
	"p0.8" -> "broadcast.1673";
	"sqrt.1672" -> "add.1674";
	"broadcast.1673" -> "add.1674";
	"add.1683" -> "divide.1684";
	"add.1674" -> "divide.1684";
	"constant.1650" -> "broadcast.1685";
	"divide.1684" -> "multiply.1686";
	"broadcast.1685" -> "multiply.1686";
	"convert.1687" -> "add.1688";
	"multiply.1686" -> "add.1688";
	"add.1688" -> "convert.1689";
	"constant.1645" -> "broadcast.1649";
	"convert.1689" -> "multiply.1690";
	"broadcast.1649" -> "multiply.1690";
	"convert.1689" -> "add.1691";
	"multiply.1690" -> "add.1691";
	"p18.269" -> "convert.1737";
	"p47.1394" -> "broadcast.1731";
	"p60.1730" -> "multiply.1732";
	"broadcast.1731" -> "multiply.1732";
	"dot.1259" -> "reshape.1695";
	"reshape.1695" -> "reduce.12";
	"constant.1698" -> "reduce.12";
	"AddComputation.1700" -> "reduce.12";
	"reduce.12" -> "reshape.1706";
	"reshape.1706" -> "custom-call.111";
	"custom-call.111" -> "convert.1714";
	"p46.1388" -> "broadcast.1728";
	"convert.1714" -> "multiply.1729";
	"broadcast.1728" -> "multiply.1729";
	"multiply.1732" -> "add.1733";
	"multiply.1729" -> "add.1733";
	"p44.1377" -> "broadcast.1716";
	"p59.1715" -> "multiply.1717";
	"broadcast.1716" -> "multiply.1717";
	"convert.1714" -> "multiply.1718";
	"convert.1714" -> "multiply.1718";
	"p1.10" -> "broadcast.1719";
	"multiply.1718" -> "multiply.1720";
	"broadcast.1719" -> "multiply.1720";
	"multiply.1717" -> "add.1721";
	"multiply.1720" -> "add.1721";
	"add.1721" -> "sqrt.1722";
	"p0.8" -> "broadcast.1723";
	"sqrt.1722" -> "add.1724";
	"broadcast.1723" -> "add.1724";
	"add.1733" -> "divide.1734";
	"add.1724" -> "divide.1734";
	"constant.1692" -> "broadcast.1735";
	"divide.1734" -> "multiply.1736";
	"broadcast.1735" -> "multiply.1736";
	"convert.1737" -> "add.1738";
	"multiply.1736" -> "add.1738";
	"add.1738" -> "convert.1739";
	"p13.195" -> "convert.1782";
	"p47.1394" -> "broadcast.1776";
	"p62.1775" -> "multiply.1777";
	"broadcast.1776" -> "multiply.1777";
	"multiply.459" -> "reshape.1748";
	"reshape.1748" -> "transpose.1749";
	"reshape.1281" -> "dot.2";
	"transpose.1749" -> "dot.2";
	"dot.2" -> "custom-call.112";
	"custom-call.112" -> "convert.1759";
	"p46.1388" -> "broadcast.1773";
	"convert.1759" -> "multiply.1774";
	"broadcast.1773" -> "multiply.1774";
	"multiply.1777" -> "add.1778";
	"multiply.1774" -> "add.1778";
	"p44.1377" -> "broadcast.1761";
	"p61.1760" -> "multiply.1762";
	"broadcast.1761" -> "multiply.1762";
	"convert.1759" -> "multiply.1763";
	"convert.1759" -> "multiply.1763";
	"p1.10" -> "broadcast.1764";
	"multiply.1763" -> "multiply.1765";
	"broadcast.1764" -> "multiply.1765";
	"multiply.1762" -> "add.1766";
	"multiply.1765" -> "add.1766";
	"add.1766" -> "sqrt.1767";
	"p0.8" -> "broadcast.1768";
	"sqrt.1767" -> "add.1769";
	"broadcast.1768" -> "add.1769";
	"add.1778" -> "divide.1779";
	"add.1769" -> "divide.1779";
	"constant.1745" -> "broadcast.1780";
	"divide.1779" -> "multiply.1781";
	"broadcast.1780" -> "multiply.1781";
	"convert.1782" -> "add.1783";
	"multiply.1781" -> "add.1783";
	"add.1783" -> "convert.1784";
	"constant.1740" -> "broadcast.1744";
	"convert.1784" -> "multiply.1785";
	"broadcast.1744" -> "multiply.1785";
	"convert.1784" -> "add.1786";
	"multiply.1785" -> "add.1786";
	"p12.186" -> "convert.1833";
	"p47.1394" -> "broadcast.1827";
	"p64.1826" -> "multiply.1828";
	"broadcast.1827" -> "multiply.1828";
	"dot.1276" -> "reshape.1790";
	"reshape.1790" -> "reduce.13";
	"constant.1794" -> "reduce.13";
	"AddComputation.1796" -> "reduce.13";
	"reduce.13" -> "reshape.1802";
	"reshape.1802" -> "custom-call.113";
	"custom-call.113" -> "convert.1810";
	"p46.1388" -> "broadcast.1824";
	"convert.1810" -> "multiply.1825";
	"broadcast.1824" -> "multiply.1825";
	"multiply.1828" -> "add.1829";
	"multiply.1825" -> "add.1829";
	"p44.1377" -> "broadcast.1812";
	"p63.1811" -> "multiply.1813";
	"broadcast.1812" -> "multiply.1813";
	"convert.1810" -> "multiply.1814";
	"convert.1810" -> "multiply.1814";
	"p1.10" -> "broadcast.1815";
	"multiply.1814" -> "multiply.1816";
	"broadcast.1815" -> "multiply.1816";
	"multiply.1813" -> "add.1817";
	"multiply.1816" -> "add.1817";
	"add.1817" -> "sqrt.1818";
	"p0.8" -> "broadcast.1819";
	"sqrt.1818" -> "add.1820";
	"broadcast.1819" -> "add.1820";
	"add.1829" -> "divide.1830";
	"add.1820" -> "divide.1830";
	"constant.1787" -> "broadcast.1831";
	"divide.1830" -> "multiply.1832";
	"broadcast.1831" -> "multiply.1832";
	"convert.1833" -> "add.1834";
	"multiply.1832" -> "add.1834";
	"add.1834" -> "convert.1835";
	"p20.366" -> "convert.1878";
	"p47.1394" -> "broadcast.1872";
	"p66.1871" -> "multiply.1873";
	"broadcast.1872" -> "multiply.1873";
	"multiply.459" -> "reshape.1844";
	"reshape.1844" -> "transpose.1845";
	"reshape.1298" -> "dot.3";
	"transpose.1845" -> "dot.3";
	"dot.3" -> "custom-call.114";
	"custom-call.114" -> "convert.1855";
	"p46.1388" -> "broadcast.1869";
	"convert.1855" -> "multiply.1870";
	"broadcast.1869" -> "multiply.1870";
	"multiply.1873" -> "add.1874";
	"multiply.1870" -> "add.1874";
	"p44.1377" -> "broadcast.1857";
	"p65.1856" -> "multiply.1858";
	"broadcast.1857" -> "multiply.1858";
	"convert.1855" -> "multiply.1859";
	"convert.1855" -> "multiply.1859";
	"p1.10" -> "broadcast.1860";
	"multiply.1859" -> "multiply.1861";
	"broadcast.1860" -> "multiply.1861";
	"multiply.1858" -> "add.1862";
	"multiply.1861" -> "add.1862";
	"add.1862" -> "sqrt.1863";
	"p0.8" -> "broadcast.1864";
	"sqrt.1863" -> "add.1865";
	"broadcast.1864" -> "add.1865";
	"add.1874" -> "divide.1875";
	"add.1865" -> "divide.1875";
	"constant.1841" -> "broadcast.1876";
	"divide.1875" -> "multiply.1877";
	"broadcast.1876" -> "multiply.1877";
	"convert.1878" -> "add.1879";
	"multiply.1877" -> "add.1879";
	"add.1879" -> "convert.1880";
	"constant.1836" -> "broadcast.1840";
	"convert.1880" -> "multiply.1881";
	"broadcast.1840" -> "multiply.1881";
	"convert.1880" -> "add.1882";
	"multiply.1881" -> "add.1882";
	"p19.357" -> "convert.1928";
	"p47.1394" -> "broadcast.1922";
	"p68.1921" -> "multiply.1923";
	"broadcast.1922" -> "multiply.1923";
	"dot.1294" -> "reshape.1886";
	"reshape.1886" -> "reduce.14";
	"constant.1889" -> "reduce.14";
	"AddComputation.1891" -> "reduce.14";
	"reduce.14" -> "reshape.1897";
	"reshape.1897" -> "custom-call.115";
	"custom-call.115" -> "convert.1905";
	"p46.1388" -> "broadcast.1919";
	"convert.1905" -> "multiply.1920";
	"broadcast.1919" -> "multiply.1920";
	"multiply.1923" -> "add.1924";
	"multiply.1920" -> "add.1924";
	"p44.1377" -> "broadcast.1907";
	"p67.1906" -> "multiply.1908";
	"broadcast.1907" -> "multiply.1908";
	"convert.1905" -> "multiply.1909";
	"convert.1905" -> "multiply.1909";
	"p1.10" -> "broadcast.1910";
	"multiply.1909" -> "multiply.1911";
	"broadcast.1910" -> "multiply.1911";
	"multiply.1908" -> "add.1912";
	"multiply.1911" -> "add.1912";
	"add.1912" -> "sqrt.1913";
	"p0.8" -> "broadcast.1914";
	"sqrt.1913" -> "add.1915";
	"broadcast.1914" -> "add.1915";
	"add.1924" -> "divide.1925";
	"add.1915" -> "divide.1925";
	"constant.1883" -> "broadcast.1926";
	"divide.1925" -> "multiply.1927";
	"broadcast.1926" -> "multiply.1927";
	"convert.1928" -> "add.1929";
	"multiply.1927" -> "add.1929";
	"add.1929" -> "convert.1930";
	"p21.387" -> "convert.1976";
	"p47.1394" -> "broadcast.1970";
	"p70.1969" -> "multiply.1971";
	"broadcast.1970" -> "multiply.1971";
	"dot.479" -> "reshape.1939";
	"reshape.1939" -> "transpose.1940";
	"transpose.1940" -> "reshape.1942";
	"reshape.1942" -> "transpose.1943";
	"reshape.1237" -> "dot.4";
	"transpose.1943" -> "dot.4";
	"dot.4" -> "custom-call.116";
	"custom-call.116" -> "convert.1953";
	"p46.1388" -> "broadcast.1967";
	"convert.1953" -> "multiply.1968";
	"broadcast.1967" -> "multiply.1968";
	"multiply.1971" -> "add.1972";
	"multiply.1968" -> "add.1972";
	"p44.1377" -> "broadcast.1955";
	"p69.1954" -> "multiply.1956";
	"broadcast.1955" -> "multiply.1956";
	"convert.1953" -> "multiply.1957";
	"convert.1953" -> "multiply.1957";
	"p1.10" -> "broadcast.1958";
	"multiply.1957" -> "multiply.1959";
	"broadcast.1958" -> "multiply.1959";
	"multiply.1956" -> "add.1960";
	"multiply.1959" -> "add.1960";
	"add.1960" -> "sqrt.1961";
	"p0.8" -> "broadcast.1962";
	"sqrt.1961" -> "add.1963";
	"broadcast.1962" -> "add.1963";
	"add.1972" -> "divide.1973";
	"add.1963" -> "divide.1973";
	"constant.1936" -> "broadcast.1974";
	"divide.1973" -> "multiply.1975";
	"broadcast.1974" -> "multiply.1975";
	"convert.1976" -> "add.1977";
	"multiply.1975" -> "add.1977";
	"add.1977" -> "convert.1978";
	"constant.1931" -> "broadcast.1935";
	"convert.1978" -> "multiply.1979";
	"broadcast.1935" -> "multiply.1979";
	"convert.1978" -> "add.1980";
	"multiply.1979" -> "add.1980";
	"p22.465" -> "convert.2023";
	"p47.1394" -> "broadcast.2017";
	"p72.2016" -> "multiply.2018";
	"broadcast.2017" -> "multiply.2018";
	"multiply.1236" -> "reduce.1990";
	"constant.1984" -> "reduce.1990";
	"AddComputation.1986" -> "reduce.1990";
	"reduce.1990" -> "custom-call.117";
	"custom-call.117" -> "convert.2000";
	"p46.1388" -> "broadcast.2014";
	"convert.2000" -> "multiply.2015";
	"broadcast.2014" -> "multiply.2015";
	"multiply.2018" -> "add.2019";
	"multiply.2015" -> "add.2019";
	"p44.1377" -> "broadcast.2002";
	"p71.2001" -> "multiply.2003";
	"broadcast.2002" -> "multiply.2003";
	"convert.2000" -> "multiply.2004";
	"convert.2000" -> "multiply.2004";
	"p1.10" -> "broadcast.2005";
	"multiply.2004" -> "multiply.2006";
	"broadcast.2005" -> "multiply.2006";
	"multiply.2003" -> "add.2007";
	"multiply.2006" -> "add.2007";
	"add.2007" -> "sqrt.2008";
	"p0.8" -> "broadcast.2009";
	"sqrt.2008" -> "add.2010";
	"broadcast.2009" -> "add.2010";
	"add.2019" -> "divide.2020";
	"add.2010" -> "divide.2020";
	"constant.1981" -> "broadcast.2021";
	"divide.2020" -> "multiply.2022";
	"broadcast.2021" -> "multiply.2022";
	"convert.2023" -> "add.2024";
	"multiply.2022" -> "add.2024";
	"add.2024" -> "convert.2025";
	"p23.511" -> "convert.2075";
	"p47.1394" -> "broadcast.2069";
	"p74.2068" -> "multiply.2070";
	"broadcast.2069" -> "multiply.2070";
	"add.1220" -> "multiply.2035";
	"reshape.551" -> "multiply.2035";
	"multiply.2035" -> "reduce.2042";
	"constant.2036" -> "reduce.2042";
	"AddComputation.2038" -> "reduce.2042";
	"reduce.2042" -> "custom-call.118";
	"custom-call.118" -> "convert.2052";
	"p46.1388" -> "broadcast.2066";
	"convert.2052" -> "multiply.2067";
	"broadcast.2066" -> "multiply.2067";
	"multiply.2070" -> "add.2071";
	"multiply.2067" -> "add.2071";
	"p44.1377" -> "broadcast.2054";
	"p73.2053" -> "multiply.2055";
	"broadcast.2054" -> "multiply.2055";
	"convert.2052" -> "multiply.2056";
	"convert.2052" -> "multiply.2056";
	"p1.10" -> "broadcast.2057";
	"multiply.2056" -> "multiply.2058";
	"broadcast.2057" -> "multiply.2058";
	"multiply.2055" -> "add.2059";
	"multiply.2058" -> "add.2059";
	"add.2059" -> "sqrt.2060";
	"p0.8" -> "broadcast.2061";
	"sqrt.2060" -> "add.2062";
	"broadcast.2061" -> "add.2062";
	"add.2071" -> "divide.2072";
	"add.2062" -> "divide.2072";
	"constant.2026" -> "broadcast.2073";
	"divide.2072" -> "multiply.2074";
	"broadcast.2073" -> "multiply.2074";
	"convert.2075" -> "add.2076";
	"multiply.2074" -> "add.2076";
	"add.2076" -> "convert.2077";
	"p26.552" -> "convert.2120";
	"p47.1394" -> "broadcast.2114";
	"p76.2113" -> "multiply.2115";
	"broadcast.2114" -> "multiply.2115";
	"add.1220" -> "reduce.2087";
	"constant.2081" -> "reduce.2087";
	"AddComputation.2083" -> "reduce.2087";
	"reduce.2087" -> "custom-call.119";
	"custom-call.119" -> "convert.2097";
	"p46.1388" -> "broadcast.2111";
	"convert.2097" -> "multiply.2112";
	"broadcast.2111" -> "multiply.2112";
	"multiply.2115" -> "add.2116";
	"multiply.2112" -> "add.2116";
	"p44.1377" -> "broadcast.2099";
	"p75.2098" -> "multiply.2100";
	"broadcast.2099" -> "multiply.2100";
	"convert.2097" -> "multiply.2101";
	"convert.2097" -> "multiply.2101";
	"p1.10" -> "broadcast.2102";
	"multiply.2101" -> "multiply.2103";
	"broadcast.2102" -> "multiply.2103";
	"multiply.2100" -> "add.2104";
	"multiply.2103" -> "add.2104";
	"add.2104" -> "sqrt.2105";
	"p0.8" -> "broadcast.2106";
	"sqrt.2105" -> "add.2107";
	"broadcast.2106" -> "add.2107";
	"add.2116" -> "divide.2117";
	"add.2107" -> "divide.2117";
	"constant.2078" -> "broadcast.2118";
	"divide.2117" -> "multiply.2119";
	"broadcast.2118" -> "multiply.2119";
	"convert.2120" -> "add.2121";
	"multiply.2119" -> "add.2121";
	"add.2121" -> "convert.2122";
	"p24.525" -> "convert.2165";
	"p47.1394" -> "broadcast.2159";
	"p78.2158" -> "multiply.2160";
	"broadcast.2159" -> "multiply.2160";
	"add.566" -> "reshape.2131";
	"reshape.2131" -> "transpose.2132";
	"reshape.1216" -> "dot.5";
	"transpose.2132" -> "dot.5";
	"dot.5" -> "custom-call.120";
	"custom-call.120" -> "convert.2142";
	"p46.1388" -> "broadcast.2156";
	"convert.2142" -> "multiply.2157";
	"broadcast.2156" -> "multiply.2157";
	"multiply.2160" -> "add.2161";
	"multiply.2157" -> "add.2161";
	"p44.1377" -> "broadcast.2144";
	"p77.2143" -> "multiply.2145";
	"broadcast.2144" -> "multiply.2145";
	"convert.2142" -> "multiply.2146";
	"convert.2142" -> "multiply.2146";
	"p1.10" -> "broadcast.2147";
	"multiply.2146" -> "multiply.2148";
	"broadcast.2147" -> "multiply.2148";
	"multiply.2145" -> "add.2149";
	"multiply.2148" -> "add.2149";
	"add.2149" -> "sqrt.2150";
	"p0.8" -> "broadcast.2151";
	"sqrt.2150" -> "add.2152";
	"broadcast.2151" -> "add.2152";
	"add.2161" -> "divide.2162";
	"add.2152" -> "divide.2162";
	"constant.2128" -> "broadcast.2163";
	"divide.2162" -> "multiply.2164";
	"broadcast.2163" -> "multiply.2164";
	"convert.2165" -> "add.2166";
	"multiply.2164" -> "add.2166";
	"add.2166" -> "convert.2167";
	"constant.2123" -> "broadcast.2127";
	"convert.2167" -> "multiply.2168";
	"broadcast.2127" -> "multiply.2168";
	"convert.2167" -> "add.2169";
	"multiply.2168" -> "add.2169";
	"p25.540" -> "convert.2212";
	"p47.1394" -> "broadcast.2206";
	"p80.2205" -> "multiply.2207";
	"broadcast.2206" -> "multiply.2207";
	"multiply.12" -> "reduce.2179";
	"constant.2173" -> "reduce.2179";
	"AddComputation.2175" -> "reduce.2179";
	"reduce.2179" -> "custom-call.122";
	"custom-call.122" -> "convert.2189";
	"p46.1388" -> "broadcast.2203";
	"convert.2189" -> "multiply.2204";
	"broadcast.2203" -> "multiply.2204";
	"multiply.2207" -> "add.2208";
	"multiply.2204" -> "add.2208";
	"p44.1377" -> "broadcast.2191";
	"p79.2190" -> "multiply.2192";
	"broadcast.2191" -> "multiply.2192";
	"convert.2189" -> "multiply.2193";
	"convert.2189" -> "multiply.2193";
	"p1.10" -> "broadcast.2194";
	"multiply.2193" -> "multiply.2195";
	"broadcast.2194" -> "multiply.2195";
	"multiply.2192" -> "add.2196";
	"multiply.2195" -> "add.2196";
	"add.2196" -> "sqrt.2197";
	"p0.8" -> "broadcast.2198";
	"sqrt.2197" -> "add.2199";
	"broadcast.2198" -> "add.2199";
	"add.2208" -> "divide.2209";
	"add.2199" -> "divide.2209";
	"constant.2170" -> "broadcast.2210";
	"divide.2209" -> "multiply.2211";
	"broadcast.2210" -> "multiply.2211";
	"convert.2212" -> "add.2213";
	"multiply.2211" -> "add.2213";
	"add.2213" -> "convert.2214";
	"p27.574" -> "convert.2257";
	"p47.1394" -> "broadcast.2251";
	"p82.2250" -> "multiply.2252";
	"broadcast.2251" -> "multiply.2252";
	"custom-call.87" -> "reshape.2223";
	"reshape.2223" -> "transpose.2224";
	"reshape.1203" -> "dot.6";
	"transpose.2224" -> "dot.6";
	"dot.6" -> "custom-call.123";
	"custom-call.123" -> "convert.2234";
	"p46.1388" -> "broadcast.2248";
	"convert.2234" -> "multiply.2249";
	"broadcast.2248" -> "multiply.2249";
	"multiply.2252" -> "add.2253";
	"multiply.2249" -> "add.2253";
	"p44.1377" -> "broadcast.2236";
	"p81.2235" -> "multiply.2237";
	"broadcast.2236" -> "multiply.2237";
	"convert.2234" -> "multiply.2238";
	"convert.2234" -> "multiply.2238";
	"p1.10" -> "broadcast.2239";
	"multiply.2238" -> "multiply.2240";
	"broadcast.2239" -> "multiply.2240";
	"multiply.2237" -> "add.2241";
	"multiply.2240" -> "add.2241";
	"add.2241" -> "sqrt.2242";
	"p0.8" -> "broadcast.2243";
	"sqrt.2242" -> "add.2244";
	"broadcast.2243" -> "add.2244";
	"add.2253" -> "divide.2254";
	"add.2244" -> "divide.2254";
	"constant.2220" -> "broadcast.2255";
	"divide.2254" -> "multiply.2256";
	"broadcast.2255" -> "multiply.2256";
	"convert.2257" -> "add.2258";
	"multiply.2256" -> "add.2258";
	"add.2258" -> "convert.2259";
	"constant.2215" -> "broadcast.2219";
	"convert.2259" -> "multiply.2260";
	"broadcast.2219" -> "multiply.2260";
	"convert.2259" -> "add.2261";
	"multiply.2260" -> "add.2261";
	"p28.652" -> "convert.2304";
	"p47.1394" -> "broadcast.2298";
	"p84.2297" -> "multiply.2299";
	"broadcast.2298" -> "multiply.2299";
	"multiply.1202" -> "reduce.2271";
	"constant.2265" -> "reduce.2271";
	"AddComputation.2267" -> "reduce.2271";
	"reduce.2271" -> "custom-call.124";
	"custom-call.124" -> "convert.2281";
	"p46.1388" -> "broadcast.2295";
	"convert.2281" -> "multiply.2296";
	"broadcast.2295" -> "multiply.2296";
	"multiply.2299" -> "add.2300";
	"multiply.2296" -> "add.2300";
	"p44.1377" -> "broadcast.2283";
	"p83.2282" -> "multiply.2284";
	"broadcast.2283" -> "multiply.2284";
	"convert.2281" -> "multiply.2285";
	"convert.2281" -> "multiply.2285";
	"p1.10" -> "broadcast.2286";
	"multiply.2285" -> "multiply.2287";
	"broadcast.2286" -> "multiply.2287";
	"multiply.2284" -> "add.2288";
	"multiply.2287" -> "add.2288";
	"add.2288" -> "sqrt.2289";
	"p0.8" -> "broadcast.2290";
	"sqrt.2289" -> "add.2291";
	"broadcast.2290" -> "add.2291";
	"add.2300" -> "divide.2301";
	"add.2291" -> "divide.2301";
	"constant.2262" -> "broadcast.2302";
	"divide.2301" -> "multiply.2303";
	"broadcast.2302" -> "multiply.2303";
	"convert.2304" -> "add.2305";
	"multiply.2303" -> "add.2305";
	"add.2305" -> "convert.2306";
	"p29.697" -> "convert.2356";
	"p47.1394" -> "broadcast.2350";
	"p86.2349" -> "multiply.2351";
	"broadcast.2350" -> "multiply.2351";
	"add.1186" -> "multiply.2316";
	"reshape.736" -> "multiply.2316";
	"multiply.2316" -> "reduce.2323";
	"constant.2317" -> "reduce.2323";
	"AddComputation.2319" -> "reduce.2323";
	"reduce.2323" -> "custom-call.125";
	"custom-call.125" -> "convert.2333";
	"p46.1388" -> "broadcast.2347";
	"convert.2333" -> "multiply.2348";
	"broadcast.2347" -> "multiply.2348";
	"multiply.2351" -> "add.2352";
	"multiply.2348" -> "add.2352";
	"p44.1377" -> "broadcast.2335";
	"p85.2334" -> "multiply.2336";
	"broadcast.2335" -> "multiply.2336";
	"convert.2333" -> "multiply.2337";
	"convert.2333" -> "multiply.2337";
	"p1.10" -> "broadcast.2338";
	"multiply.2337" -> "multiply.2339";
	"broadcast.2338" -> "multiply.2339";
	"multiply.2336" -> "add.2340";
	"multiply.2339" -> "add.2340";
	"add.2340" -> "sqrt.2341";
	"p0.8" -> "broadcast.2342";
	"sqrt.2341" -> "add.2343";
	"broadcast.2342" -> "add.2343";
	"add.2352" -> "divide.2353";
	"add.2343" -> "divide.2353";
	"constant.2307" -> "broadcast.2354";
	"divide.2353" -> "multiply.2355";
	"broadcast.2354" -> "multiply.2355";
	"convert.2356" -> "add.2357";
	"multiply.2355" -> "add.2357";
	"add.2357" -> "convert.2358";
	"p32.737" -> "convert.2401";
	"p47.1394" -> "broadcast.2395";
	"p88.2394" -> "multiply.2396";
	"broadcast.2395" -> "multiply.2396";
	"add.1186" -> "reduce.2368";
	"constant.2362" -> "reduce.2368";
	"AddComputation.2364" -> "reduce.2368";
	"reduce.2368" -> "custom-call.126";
	"custom-call.126" -> "convert.2378";
	"p46.1388" -> "broadcast.2392";
	"convert.2378" -> "multiply.2393";
	"broadcast.2392" -> "multiply.2393";
	"multiply.2396" -> "add.2397";
	"multiply.2393" -> "add.2397";
	"p44.1377" -> "broadcast.2380";
	"p87.2379" -> "multiply.2381";
	"broadcast.2380" -> "multiply.2381";
	"convert.2378" -> "multiply.2382";
	"convert.2378" -> "multiply.2382";
	"p1.10" -> "broadcast.2383";
	"multiply.2382" -> "multiply.2384";
	"broadcast.2383" -> "multiply.2384";
	"multiply.2381" -> "add.2385";
	"multiply.2384" -> "add.2385";
	"add.2385" -> "sqrt.2386";
	"p0.8" -> "broadcast.2387";
	"sqrt.2386" -> "add.2388";
	"broadcast.2387" -> "add.2388";
	"add.2397" -> "divide.2398";
	"add.2388" -> "divide.2398";
	"constant.2359" -> "broadcast.2399";
	"divide.2398" -> "multiply.2400";
	"broadcast.2399" -> "multiply.2400";
	"convert.2401" -> "add.2402";
	"multiply.2400" -> "add.2402";
	"add.2402" -> "convert.2403";
	"p30.711" -> "convert.2448";
	"p47.1394" -> "broadcast.2442";
	"p90.2441" -> "multiply.2443";
	"broadcast.2442" -> "multiply.2443";
	"add.751" -> "slice.2413";
	"slice.2413" -> "reshape.2414";
	"reshape.2414" -> "transpose.2415";
	"multiply.902" -> "dot.7";
	"transpose.2415" -> "dot.7";
	"dot.7" -> "custom-call.127";
	"custom-call.127" -> "convert.2425";
	"p46.1388" -> "broadcast.2439";
	"convert.2425" -> "multiply.2440";
	"broadcast.2439" -> "multiply.2440";
	"multiply.2443" -> "add.2444";
	"multiply.2440" -> "add.2444";
	"p44.1377" -> "broadcast.2427";
	"p89.2426" -> "multiply.2428";
	"broadcast.2427" -> "multiply.2428";
	"convert.2425" -> "multiply.2429";
	"convert.2425" -> "multiply.2429";
	"p1.10" -> "broadcast.2430";
	"multiply.2429" -> "multiply.2431";
	"broadcast.2430" -> "multiply.2431";
	"multiply.2428" -> "add.2432";
	"multiply.2431" -> "add.2432";
	"add.2432" -> "sqrt.2433";
	"p0.8" -> "broadcast.2434";
	"sqrt.2433" -> "add.2435";
	"broadcast.2434" -> "add.2435";
	"add.2444" -> "divide.2445";
	"add.2435" -> "divide.2445";
	"constant.2409" -> "broadcast.2446";
	"divide.2445" -> "multiply.2447";
	"broadcast.2446" -> "multiply.2447";
	"convert.2448" -> "add.2449";
	"multiply.2447" -> "add.2449";
	"add.2449" -> "convert.2450";
	"constant.2404" -> "broadcast.2408";
	"convert.2450" -> "multiply.2451";
	"broadcast.2408" -> "multiply.2451";
	"convert.2450" -> "add.2452";
	"multiply.2451" -> "add.2452";
	"p31.726" -> "convert.2495";
	"p47.1394" -> "broadcast.2489";
	"p92.2488" -> "multiply.2490";
	"broadcast.2489" -> "multiply.2490";
	"multiply.902" -> "reduce.2462";
	"constant.2456" -> "reduce.2462";
	"AddComputation.2458" -> "reduce.2462";
	"reduce.2462" -> "custom-call.128";
	"custom-call.128" -> "convert.2472";
	"p46.1388" -> "broadcast.2486";
	"convert.2472" -> "multiply.2487";
	"broadcast.2486" -> "multiply.2487";
	"multiply.2490" -> "add.2491";
	"multiply.2487" -> "add.2491";
	"p44.1377" -> "broadcast.2474";
	"p91.2473" -> "multiply.2475";
	"broadcast.2474" -> "multiply.2475";
	"convert.2472" -> "multiply.2476";
	"convert.2472" -> "multiply.2476";
	"p1.10" -> "broadcast.2477";
	"multiply.2476" -> "multiply.2478";
	"broadcast.2477" -> "multiply.2478";
	"multiply.2475" -> "add.2479";
	"multiply.2478" -> "add.2479";
	"add.2479" -> "sqrt.2480";
	"p0.8" -> "broadcast.2481";
	"sqrt.2480" -> "add.2482";
	"broadcast.2481" -> "add.2482";
	"add.2491" -> "divide.2492";
	"add.2482" -> "divide.2492";
	"constant.2453" -> "broadcast.2493";
	"divide.2492" -> "multiply.2494";
	"broadcast.2493" -> "multiply.2494";
	"convert.2495" -> "add.2496";
	"multiply.2494" -> "add.2496";
	"add.2496" -> "convert.2497";
	"p37.920" -> "convert.2540";
	"p47.1394" -> "broadcast.2534";
	"p94.2533" -> "multiply.2535";
	"broadcast.2534" -> "multiply.2535";
	"add.751" -> "reshape.2506";
	"reshape.2506" -> "transpose.2507";
	"reshape.1183" -> "dot.8";
	"transpose.2507" -> "dot.8";
	"dot.8" -> "custom-call.129";
	"custom-call.129" -> "convert.2517";
	"p46.1388" -> "broadcast.2531";
	"convert.2517" -> "multiply.2532";
	"broadcast.2531" -> "multiply.2532";
	"multiply.2535" -> "add.2536";
	"multiply.2532" -> "add.2536";
	"p44.1377" -> "broadcast.2519";
	"p93.2518" -> "multiply.2520";
	"broadcast.2519" -> "multiply.2520";
	"convert.2517" -> "multiply.2521";
	"convert.2517" -> "multiply.2521";
	"p1.10" -> "broadcast.2522";
	"multiply.2521" -> "multiply.2523";
	"broadcast.2522" -> "multiply.2523";
	"multiply.2520" -> "add.2524";
	"multiply.2523" -> "add.2524";
	"add.2524" -> "sqrt.2525";
	"p0.8" -> "broadcast.2526";
	"sqrt.2525" -> "add.2527";
	"broadcast.2526" -> "add.2527";
	"add.2536" -> "divide.2537";
	"add.2527" -> "divide.2537";
	"constant.2503" -> "broadcast.2538";
	"divide.2537" -> "multiply.2539";
	"broadcast.2538" -> "multiply.2539";
	"convert.2540" -> "add.2541";
	"multiply.2539" -> "add.2541";
	"add.2541" -> "convert.2542";
	"constant.2498" -> "broadcast.2502";
	"convert.2542" -> "multiply.2543";
	"broadcast.2502" -> "multiply.2543";
	"convert.2542" -> "add.2544";
	"multiply.2543" -> "add.2544";
	"p38.935" -> "convert.2587";
	"p47.1394" -> "broadcast.2581";
	"p96.2580" -> "multiply.2582";
	"broadcast.2581" -> "multiply.2582";
	"multiply.6" -> "reduce.2554";
	"constant.2548" -> "reduce.2554";
	"AddComputation.2550" -> "reduce.2554";
	"reduce.2554" -> "custom-call.130";
	"custom-call.130" -> "convert.2564";
	"p46.1388" -> "broadcast.2578";
	"convert.2564" -> "multiply.2579";
	"broadcast.2578" -> "multiply.2579";
	"multiply.2582" -> "add.2583";
	"multiply.2579" -> "add.2583";
	"p44.1377" -> "broadcast.2566";
	"p95.2565" -> "multiply.2567";
	"broadcast.2566" -> "multiply.2567";
	"convert.2564" -> "multiply.2568";
	"convert.2564" -> "multiply.2568";
	"p1.10" -> "broadcast.2569";
	"multiply.2568" -> "multiply.2570";
	"broadcast.2569" -> "multiply.2570";
	"multiply.2567" -> "add.2571";
	"multiply.2570" -> "add.2571";
	"add.2571" -> "sqrt.2572";
	"p0.8" -> "broadcast.2573";
	"sqrt.2572" -> "add.2574";
	"broadcast.2573" -> "add.2574";
	"add.2583" -> "divide.2584";
	"add.2574" -> "divide.2584";
	"constant.2545" -> "broadcast.2585";
	"divide.2584" -> "multiply.2586";
	"broadcast.2585" -> "multiply.2586";
	"convert.2587" -> "add.2588";
	"multiply.2586" -> "add.2588";
	"add.2588" -> "convert.2589";
	"p39.998" -> "convert.2639";
	"p47.1394" -> "broadcast.2633";
	"p98.2632" -> "multiply.2634";
	"broadcast.2633" -> "multiply.2634";
	"reshape.1157" -> "multiply.2599";
	"reshape.1034" -> "multiply.2599";
	"multiply.2599" -> "reduce.2606";
	"constant.2600" -> "reduce.2606";
	"AddComputation.2602" -> "reduce.2606";
	"reduce.2606" -> "custom-call.131";
	"custom-call.131" -> "convert.2616";
	"p46.1388" -> "broadcast.2630";
	"convert.2616" -> "multiply.2631";
	"broadcast.2630" -> "multiply.2631";
	"multiply.2634" -> "add.2635";
	"multiply.2631" -> "add.2635";
	"p44.1377" -> "broadcast.2618";
	"p97.2617" -> "multiply.2619";
	"broadcast.2618" -> "multiply.2619";
	"convert.2616" -> "multiply.2620";
	"convert.2616" -> "multiply.2620";
	"p1.10" -> "broadcast.2621";
	"multiply.2620" -> "multiply.2622";
	"broadcast.2621" -> "multiply.2622";
	"multiply.2619" -> "add.2623";
	"multiply.2622" -> "add.2623";
	"add.2623" -> "sqrt.2624";
	"p0.8" -> "broadcast.2625";
	"sqrt.2624" -> "add.2626";
	"broadcast.2625" -> "add.2626";
	"add.2635" -> "divide.2636";
	"add.2626" -> "divide.2636";
	"constant.2590" -> "broadcast.2637";
	"divide.2636" -> "multiply.2638";
	"broadcast.2637" -> "multiply.2638";
	"convert.2639" -> "add.2640";
	"multiply.2638" -> "add.2640";
	"add.2640" -> "convert.2641";
	"p42.1035" -> "convert.2684";
	"p47.1394" -> "broadcast.2678";
	"p100.2677" -> "multiply.2679";
	"broadcast.2678" -> "multiply.2679";
	"dot.1156" -> "reduce.2651";
	"constant.2645" -> "reduce.2651";
	"AddComputation.2647" -> "reduce.2651";
	"reduce.2651" -> "custom-call.132";
	"custom-call.132" -> "convert.2661";
	"p46.1388" -> "broadcast.2675";
	"convert.2661" -> "multiply.2676";
	"broadcast.2675" -> "multiply.2676";
	"multiply.2679" -> "add.2680";
	"multiply.2676" -> "add.2680";
	"p44.1377" -> "broadcast.2663";
	"p99.2662" -> "multiply.2664";
	"broadcast.2663" -> "multiply.2664";
	"convert.2661" -> "multiply.2665";
	"convert.2661" -> "multiply.2665";
	"p1.10" -> "broadcast.2666";
	"multiply.2665" -> "multiply.2667";
	"broadcast.2666" -> "multiply.2667";
	"multiply.2664" -> "add.2668";
	"multiply.2667" -> "add.2668";
	"add.2668" -> "sqrt.2669";
	"p0.8" -> "broadcast.2670";
	"sqrt.2669" -> "add.2671";
	"broadcast.2670" -> "add.2671";
	"add.2680" -> "divide.2681";
	"add.2671" -> "divide.2681";
	"constant.2642" -> "broadcast.2682";
	"divide.2681" -> "multiply.2683";
	"broadcast.2682" -> "multiply.2683";
	"convert.2684" -> "add.2685";
	"multiply.2683" -> "add.2685";
	"add.2685" -> "convert.2686";
	"p41.1023" -> "convert.2730";
	"p47.1394" -> "broadcast.2724";
	"p102.2723" -> "multiply.2725";
	"broadcast.2724" -> "multiply.2725";
	"add.0" -> "reduce.2697";
	"constant.2691" -> "reduce.2697";
	"AddComputation.2693" -> "reduce.2697";
	"reduce.2697" -> "custom-call.133";
	"custom-call.133" -> "convert.2707";
	"p46.1388" -> "broadcast.2721";
	"convert.2707" -> "multiply.2722";
	"broadcast.2721" -> "multiply.2722";
	"multiply.2725" -> "add.2726";
	"multiply.2722" -> "add.2726";
	"p44.1377" -> "broadcast.2709";
	"p101.2708" -> "multiply.2710";
	"broadcast.2709" -> "multiply.2710";
	"convert.2707" -> "multiply.2711";
	"convert.2707" -> "multiply.2711";
	"p1.10" -> "broadcast.2712";
	"multiply.2711" -> "multiply.2713";
	"broadcast.2712" -> "multiply.2713";
	"multiply.2710" -> "add.2714";
	"multiply.2713" -> "add.2714";
	"add.2714" -> "sqrt.2715";
	"p0.8" -> "broadcast.2716";
	"sqrt.2715" -> "add.2717";
	"broadcast.2716" -> "add.2717";
	"add.2726" -> "divide.2727";
	"add.2717" -> "divide.2727";
	"constant.2687" -> "broadcast.2728";
	"divide.2727" -> "multiply.2729";
	"broadcast.2728" -> "multiply.2729";
	"convert.2730" -> "add.2731";
	"multiply.2729" -> "add.2731";
	"add.2731" -> "convert.2732";
	"p33.775" -> "convert.2774";
	"p47.1394" -> "broadcast.2768";
	"p104.2767" -> "multiply.2769";
	"broadcast.2768" -> "multiply.2769";
	"tanh.761" -> "transpose.2741";
	"add.1" -> "dot.9";
	"transpose.2741" -> "dot.9";
	"dot.9" -> "custom-call.134";
	"custom-call.134" -> "convert.2751";
	"p46.1388" -> "broadcast.2765";
	"convert.2751" -> "multiply.2766";
	"broadcast.2765" -> "multiply.2766";
	"multiply.2769" -> "add.2770";
	"multiply.2766" -> "add.2770";
	"p44.1377" -> "broadcast.2753";
	"p103.2752" -> "multiply.2754";
	"broadcast.2753" -> "multiply.2754";
	"convert.2751" -> "multiply.2755";
	"convert.2751" -> "multiply.2755";
	"p1.10" -> "broadcast.2756";
	"multiply.2755" -> "multiply.2757";
	"broadcast.2756" -> "multiply.2757";
	"multiply.2754" -> "add.2758";
	"multiply.2757" -> "add.2758";
	"add.2758" -> "sqrt.2759";
	"p0.8" -> "broadcast.2760";
	"sqrt.2759" -> "add.2761";
	"broadcast.2760" -> "add.2761";
	"add.2770" -> "divide.2771";
	"add.2761" -> "divide.2771";
	"constant.2738" -> "broadcast.2772";
	"divide.2771" -> "multiply.2773";
	"broadcast.2772" -> "multiply.2773";
	"convert.2774" -> "add.2775";
	"multiply.2773" -> "add.2775";
	"add.2775" -> "convert.2776";
	"constant.2733" -> "broadcast.2737";
	"convert.2776" -> "multiply.2777";
	"broadcast.2737" -> "multiply.2777";
	"convert.2776" -> "add.2778";
	"multiply.2777" -> "add.2778";
	"p35.786" -> "convert.2821";
	"p47.1394" -> "broadcast.2815";
	"p106.2814" -> "multiply.2816";
	"broadcast.2815" -> "multiply.2816";
	"add.1" -> "reduce.2788";
	"constant.2782" -> "reduce.2788";
	"AddComputation.2784" -> "reduce.2788";
	"reduce.2788" -> "custom-call.135";
	"custom-call.135" -> "convert.2798";
	"p46.1388" -> "broadcast.2812";
	"convert.2798" -> "multiply.2813";
	"broadcast.2812" -> "multiply.2813";
	"multiply.2816" -> "add.2817";
	"multiply.2813" -> "add.2817";
	"p44.1377" -> "broadcast.2800";
	"p105.2799" -> "multiply.2801";
	"broadcast.2800" -> "multiply.2801";
	"convert.2798" -> "multiply.2802";
	"convert.2798" -> "multiply.2802";
	"p1.10" -> "broadcast.2803";
	"multiply.2802" -> "multiply.2804";
	"broadcast.2803" -> "multiply.2804";
	"multiply.2801" -> "add.2805";
	"multiply.2804" -> "add.2805";
	"add.2805" -> "sqrt.2806";
	"p0.8" -> "broadcast.2807";
	"sqrt.2806" -> "add.2808";
	"broadcast.2807" -> "add.2808";
	"add.2817" -> "divide.2818";
	"add.2808" -> "divide.2818";
	"constant.2779" -> "broadcast.2819";
	"divide.2818" -> "multiply.2820";
	"broadcast.2819" -> "multiply.2820";
	"convert.2821" -> "add.2822";
	"multiply.2820" -> "add.2822";
	"add.2822" -> "convert.2823";
	"p107.2825" -> "convert.56";
	"convert.56" -> "reshape.658";
	"p108.2828" -> "add.2830";
	"reshape.658" -> "add.2830";
	"p40.1016" -> "reshape.1";
	"reshape.1" -> "broadcast.4";
	"broadcast.4" -> "compare.0";
	"iota.9" -> "compare.0";
	"constant.3" -> "broadcast.8";
	"constant.4" -> "broadcast.9";
	"compare.0" -> "select.0";
	"broadcast.8" -> "select.0";
	"broadcast.9" -> "select.0";
	"subtract.1" -> "multiply.2";
	"select.0" -> "multiply.2";
	"multiply.2" -> "reduce.2";
	"constant.2" -> "reduce.2";
	"SimpleCrossEntropyLossForwardAdd.1066" -> "reduce.2";
	"constant.32" -> "broadcast.70";
	"reshape.527" -> "select.6";
	"reduce.2" -> "select.6";
	"broadcast.70" -> "select.6";
	"select.6" -> "reduce.3";
	"constant.2" -> "reduce.3";
	"SimpleCrossEntropyLossForwardAdd.1070" -> "reduce.3";
	"convert.0" -> "reduce.4";
	"constant.2" -> "reduce.4";
	"SimpleCrossEntropyLossForwardAdd.1074" -> "reduce.4";
	"reduce.3" -> "divide.0";
	"reduce.4" -> "divide.0";
	"divide.0" -> "negate.0";
	"p34.785" -> "broadcast.29";
	"broadcast.29" -> "compare.3";
	"iota.11" -> "compare.3";
	"constant.13" -> "broadcast.34";
	"constant.14" -> "broadcast.36";
	"compare.3" -> "select.2";
	"broadcast.34" -> "select.2";
	"broadcast.36" -> "select.2";
	"subtract.3" -> "multiply.7";
	"select.2" -> "multiply.7";
	"multiply.7" -> "reduce.8";
	"constant.12" -> "reduce.8";
	"SimpleCrossEntropyLossForwardAdd.809" -> "reduce.8";
	"constant.34" -> "broadcast.76";
	"compare.4" -> "select.8";
	"reduce.8" -> "select.8";
	"broadcast.76" -> "select.8";
	"select.8" -> "reduce.9";
	"constant.12" -> "reduce.9";
	"SimpleCrossEntropyLossForwardAdd.813" -> "reduce.9";
	"convert.1" -> "reduce.10";
	"constant.12" -> "reduce.10";
	"SimpleCrossEntropyLossForwardAdd.817" -> "reduce.10";
	"reduce.9" -> "divide.2";
	"reduce.10" -> "divide.2";
	"divide.2" -> "negate.2";
	"negate.0" -> "add.2837";
	"negate.2" -> "add.2837";
	"add.2837" -> "divide.2838";
	"p36.864" -> "divide.2838";
	"add.1406" -> "tuple.2839";
	"add.1482" -> "tuple.2839";
	"add.1547" -> "tuple.2839";
	"convert.1599" -> "tuple.2839";
	"convert.1644" -> "tuple.2839";
	"p2.46" -> "tuple.2839";
	"add.1691" -> "tuple.2839";
	"convert.1739" -> "tuple.2839";
	"add.1786" -> "tuple.2839";
	"convert.1835" -> "tuple.2839";
	"add.1882" -> "tuple.2839";
	"convert.1930" -> "tuple.2839";
	"add.1980" -> "tuple.2839";
	"convert.2025" -> "tuple.2839";
	"convert.2077" -> "tuple.2839";
	"convert.2122" -> "tuple.2839";
	"add.2169" -> "tuple.2839";
	"convert.2214" -> "tuple.2839";
	"add.2261" -> "tuple.2839";
	"convert.2306" -> "tuple.2839";
	"convert.2358" -> "tuple.2839";
	"convert.2403" -> "tuple.2839";
	"add.2452" -> "tuple.2839";
	"convert.2497" -> "tuple.2839";
	"add.2544" -> "tuple.2839";
	"convert.2589" -> "tuple.2839";
	"convert.2641" -> "tuple.2839";
	"convert.2686" -> "tuple.2839";
	"convert.2732" -> "tuple.2839";
	"add.2778" -> "tuple.2839";
	"convert.2823" -> "tuple.2839";
	"add.2830" -> "tuple.2839";
	"add.1398" -> "tuple.2839";
	"add.1384" -> "tuple.2839";
	"add.1474" -> "tuple.2839";
	"add.1462" -> "tuple.2839";
	"add.1539" -> "tuple.2839";
	"add.1527" -> "tuple.2839";
	"add.1683" -> "tuple.2839";
	"add.1671" -> "tuple.2839";
	"add.1778" -> "tuple.2839";
	"add.1766" -> "tuple.2839";
	"add.1874" -> "tuple.2839";
	"add.1862" -> "tuple.2839";
	"add.1972" -> "tuple.2839";
	"add.1960" -> "tuple.2839";
	"add.2161" -> "tuple.2839";
	"add.2149" -> "tuple.2839";
	"add.2253" -> "tuple.2839";
	"add.2241" -> "tuple.2839";
	"add.2444" -> "tuple.2839";
	"add.2432" -> "tuple.2839";
	"add.2536" -> "tuple.2839";
	"add.2524" -> "tuple.2839";
	"add.2770" -> "tuple.2839";
	"add.2758" -> "tuple.2839";
	"add.1593" -> "tuple.2839";
	"add.1581" -> "tuple.2839";
	"add.1638" -> "tuple.2839";
	"add.1626" -> "tuple.2839";
	"add.1733" -> "tuple.2839";
	"add.1721" -> "tuple.2839";
	"add.1829" -> "tuple.2839";
	"add.1817" -> "tuple.2839";
	"add.1924" -> "tuple.2839";
	"add.1912" -> "tuple.2839";
	"add.2019" -> "tuple.2839";
	"add.2007" -> "tuple.2839";
	"add.2071" -> "tuple.2839";
	"add.2059" -> "tuple.2839";
	"add.2116" -> "tuple.2839";
	"add.2104" -> "tuple.2839";
	"add.2208" -> "tuple.2839";
	"add.2196" -> "tuple.2839";
	"add.2300" -> "tuple.2839";
	"add.2288" -> "tuple.2839";
	"add.2352" -> "tuple.2839";
	"add.2340" -> "tuple.2839";
	"add.2397" -> "tuple.2839";
	"add.2385" -> "tuple.2839";
	"add.2491" -> "tuple.2839";
	"add.2479" -> "tuple.2839";
	"add.2726" -> "tuple.2839";
	"add.2714" -> "tuple.2839";
	"add.2583" -> "tuple.2839";
	"add.2571" -> "tuple.2839";
	"add.2635" -> "tuple.2839";
	"add.2623" -> "tuple.2839";
	"add.2680" -> "tuple.2839";
	"add.2668" -> "tuple.2839";
	"add.2817" -> "tuple.2839";
	"add.2805" -> "tuple.2839";
	"constant.72" -> "tuple.2839";
	"p6.81" -> "tuple.2839";
	"p4.67" -> "tuple.2839";
	"p17.242" -> "tuple.2839";
	"p40.1016" -> "tuple.2839";
	"p34.785" -> "tuple.2839";
	"add.1054" -> "tuple.2839";
	"add.800" -> "tuple.2839";
	"add.2837" -> "tuple.2839";
	"divide.2838" -> "tuple.2839";
	"custom-call.135" -> "tuple.2839";
	"custom-call.134" -> "tuple.2839";
	"custom-call.133" -> "tuple.2839";
	"add.1375" -> "tuple.2839";
	"custom-call.132" -> "tuple.2839";
	"custom-call.131" -> "tuple.2839";
	"custom-call.130" -> "tuple.2839";
	"custom-call.129" -> "tuple.2839";
	"custom-call.128" -> "tuple.2839";
	"custom-call.127" -> "tuple.2839";
	"custom-call.126" -> "tuple.2839";
	"custom-call.125" -> "tuple.2839";
	"custom-call.124" -> "tuple.2839";
	"custom-call.123" -> "tuple.2839";
	"custom-call.122" -> "tuple.2839";
	"custom-call.120" -> "tuple.2839";
	"custom-call.119" -> "tuple.2839";
	"custom-call.118" -> "tuple.2839";
	"custom-call.117" -> "tuple.2839";
	"custom-call.116" -> "tuple.2839";
	"custom-call.115" -> "tuple.2839";
	"custom-call.114" -> "tuple.2839";
	"custom-call.113" -> "tuple.2839";
	"custom-call.112" -> "tuple.2839";
	"custom-call.111" -> "tuple.2839";
	"custom-call.110" -> "tuple.2839";
	"custom-call.109" -> "tuple.2839";
	"custom-call.108" -> "tuple.2839";
	"custom-call.106" -> "tuple.2839";
	"custom-call.107" -> "tuple.2839";
}