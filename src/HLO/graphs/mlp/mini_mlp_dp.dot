digraph HloModule {
	"p4.16" [label="p4.16 \n f32[10,784]"];
	"p2.7" [label="p2.7 \n s64[16]"];
	"broadcast.38" [label="broadcast.38 \n s64[16,10]"];
	"iota.1" [label="iota.1 \n s64[16,10]"];
	"compare.41" [label="compare.41 \n pred[16,10]"];
	"constant.36" [label="constant.36 \n f32[] constant(1), metadata="];
	"broadcast.43" [label="broadcast.43 \n f32[16,10]"];
	"constant.35" [label="constant.35 \n f32[] constant(0), metadata="];
	"broadcast.42" [label="broadcast.42 \n f32[16,10]"];
	"select.44" [label="select.44 \n f32[16,10]"];
	"negate.45" [label="negate.45 \n f32[16,10]"];
	"constant.48" [label="constant.48 \n s64[] constant(-100), metadata="];
	"broadcast.49" [label="broadcast.49 \n s64[16]"];
	"compare.50" [label="compare.50 \n pred[16]"];
	"constant.51" [label="constant.51 \n f32[] constant(1), metadata="];
	"broadcast.1" [label="broadcast.1 \n f32[16]"];
	"constant.53" [label="constant.53 \n f32[] constant(0), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[16]"];
	"select.0" [label="select.0 \n f32[16]"];
	"broadcast.4" [label="broadcast.4 \n f32[16,10]"];
	"multiply.57" [label="multiply.57 \n f32[16,10]"];
	"multiply.67" [label="multiply.67 \n f32[16,10]"];
	"constant.58" [label="constant.58 \n f32[] constant(0), metadata="];
	"reduce.63" [label="reduce.63 \n f32[] reduce(f32[16,10]"];
	"compare.65" [label="compare.65 \n pred[] compare(f32[] %reduce.63, f32[] %constant.58), direction=NE, metadata="];
	"constant.64" [label="constant.64 \n f32[] constant(1), metadata="];
	"select.66" [label="select.66 \n f32[] select(pred[] %compare.65, f32[] %reduce.63, f32[] %constant.64), metadata="];
	"broadcast.68" [label="broadcast.68 \n f32[16,10]"];
	"divide.69" [label="divide.69 \n f32[16,10]"];
	"constant.81" [label="constant.81 \n f32[] constant(0), metadata="];
	"reduce.87" [label="reduce.87 \n f32[10]"];
	"p5.25" [label="p5.25 \n f32[16,1,28,28]"];
	"reshape.70" [label="reshape.70 \n f32[16,784]"];
	"transpose.71" [label="transpose.71 \n f32[784,16]"];
	"p1.6" [label="p1.6 \n f32[] parameter(1), frontend_attributes="];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"constant.111" [label="constant.111 \n f32[] constant(0.5), metadata="];
	"broadcast.6" [label="broadcast.6 \n f32[10,784]"];
	"multiply.115" [label="multiply.115 \n f32[10,784]"];
	"add.116" [label="add.116 \n f32[10,784]"];
	"p3.8" [label="p3.8 \n f32[10]"];
	"constant.107" [label="constant.107 \n f32[] constant(0.5), metadata="];
	"multiply.2" [label="multiply.2 \n f32[] multiply(f32[] %p0.1, f32[] %constant.107), metadata="];
	"broadcast.7" [label="broadcast.7 \n f32[10]"];
	"multiply.121" [label="multiply.121 \n f32[10]"];
	"add.122" [label="add.122 \n f32[10]"];
	"reshape.26" [label="reshape.26 \n f32[16,784]"];
	"transpose.24" [label="transpose.24 \n f32[784,10]"];
	"dot.27" [label="dot.27 \n f32[16,10]"];
	"broadcast.31" [label="broadcast.31 \n f32[16,10]"];
	"add.32" [label="add.32 \n f32[16,10]"];
	"broadcast.126" [label="broadcast.126 \n s64[16,10]"];
	"iota.3" [label="iota.3 \n s64[16,10]"];
	"compare.129" [label="compare.129 \n pred[16,10]"];
	"constant.124" [label="constant.124 \n f32[] constant(1), metadata="];
	"broadcast.131" [label="broadcast.131 \n f32[16,10]"];
	"constant.123" [label="constant.123 \n f32[] constant(0), metadata="];
	"broadcast.130" [label="broadcast.130 \n f32[16,10]"];
	"select.132" [label="select.132 \n f32[16,10]"];
	"broadcast.135" [label="broadcast.135 \n f32[16,10]"];
	"compare.136" [label="compare.136 \n pred[16,10]"];
	"broadcast.137" [label="broadcast.137 \n f32[16,10]"];
	"negate.133" [label="negate.133 \n f32[16,10]"];
	"multiply.134" [label="multiply.134 \n f32[16,10]"];
	"select.138" [label="select.138 \n f32[16,10]"];
	"constant.139" [label="constant.139 \n s64[] constant(-100), metadata="];
	"broadcast.140" [label="broadcast.140 \n s64[16]"];
	"compare.141" [label="compare.141 \n pred[16]"];
	"constant.142" [label="constant.142 \n f32[] constant(1), metadata="];
	"broadcast.8" [label="broadcast.8 \n f32[16]"];
	"constant.144" [label="constant.144 \n f32[] constant(0), metadata="];
	"broadcast.9" [label="broadcast.9 \n f32[16]"];
	"select.1" [label="select.1 \n f32[16]"];
	"broadcast.10" [label="broadcast.10 \n f32[16,10]"];
	"multiply.148" [label="multiply.148 \n f32[16,10]"];
	"multiply.155" [label="multiply.155 \n f32[16,10]"];
	"reduce.160" [label="reduce.160 \n f32[] reduce(f32[16,10]"];
	"constant.149" [label="constant.149 \n f32[] constant(0), metadata="];
	"reduce.154" [label="reduce.154 \n f32[] reduce(f32[16,10]"];
	"divide.161" [label="divide.161 \n f32[] divide(f32[] %reduce.160, f32[] %reduce.154), metadata="];
	"broadcast.108" [label="broadcast.108 \n f32[10]"];
	"multiply.109" [label="multiply.109 \n f32[10]"];
	"broadcast.112" [label="broadcast.112 \n f32[10,784]"];
	"multiply.113" [label="multiply.113 \n f32[10,784]"];
	"tuple.162" [label="tuple.162 \n (f32[10,784]"]; 
 	"p2.7" -> "broadcast.38";
	"broadcast.38" -> "compare.41";
	"iota.1" -> "compare.41";
	"constant.36" -> "broadcast.43";
	"constant.35" -> "broadcast.42";
	"compare.41" -> "select.44";
	"broadcast.43" -> "select.44";
	"broadcast.42" -> "select.44";
	"select.44" -> "negate.45";
	"constant.48" -> "broadcast.49";
	"p2.7" -> "compare.50";
	"broadcast.49" -> "compare.50";
	"constant.51" -> "broadcast.1";
	"constant.53" -> "broadcast.2";
	"compare.50" -> "select.0";
	"broadcast.1" -> "select.0";
	"broadcast.2" -> "select.0";
	"select.0" -> "broadcast.4";
	"broadcast.4" -> "multiply.57";
	"select.44" -> "multiply.57";
	"negate.45" -> "multiply.67";
	"multiply.57" -> "multiply.67";
	"multiply.57" -> "reduce.63";
	"constant.58" -> "reduce.63";
	"AddComputation.59" -> "reduce.63";
	"reduce.63" -> "compare.65";
	"constant.58" -> "compare.65";
	"compare.65" -> "select.66";
	"reduce.63" -> "select.66";
	"constant.64" -> "select.66";
	"select.66" -> "broadcast.68";
	"multiply.67" -> "divide.69";
	"broadcast.68" -> "divide.69";
	"divide.69" -> "reduce.87";
	"constant.81" -> "reduce.87";
	"AddComputation.83" -> "reduce.87";
	"reduce.87" -> "custom-call.4";
	"p5.25" -> "reshape.70";
	"reshape.70" -> "transpose.71";
	"divide.69" -> "dot";
	"transpose.71" -> "dot";
	"dot" -> "custom-call.5";
	"custom-call.4" -> "all-reduce.105";
	"custom-call.5" -> "all-reduce.105";
	"p1.6" -> "all-reduce.105";
	"AddComputation.101" -> "all-reduce.105";
	"all-reduce.105" -> "get-tuple-element.110";
	"p0.1" -> "multiply";
	"constant.111" -> "multiply";
	"multiply" -> "broadcast.6";
	"get-tuple-element.110" -> "multiply.115";
	"broadcast.6" -> "multiply.115";
	"p4.16" -> "add.116";
	"multiply.115" -> "add.116";
	"all-reduce.105" -> "get-tuple-element.106";
	"p0.1" -> "multiply.2";
	"constant.107" -> "multiply.2";
	"multiply.2" -> "broadcast.7";
	"get-tuple-element.106" -> "multiply.121";
	"broadcast.7" -> "multiply.121";
	"p3.8" -> "add.122";
	"multiply.121" -> "add.122";
	"p5.25" -> "reshape.26";
	"p4.16" -> "custom-call.6";
	"custom-call.6" -> "transpose.24";
	"reshape.26" -> "dot.27";
	"transpose.24" -> "dot.27";
	"p3.8" -> "custom-call.7";
	"custom-call.7" -> "broadcast.31";
	"dot.27" -> "add.32";
	"broadcast.31" -> "add.32";
	"p2.7" -> "broadcast.126";
	"broadcast.126" -> "compare.129";
	"iota.3" -> "compare.129";
	"constant.124" -> "broadcast.131";
	"constant.123" -> "broadcast.130";
	"compare.129" -> "select.132";
	"broadcast.131" -> "select.132";
	"broadcast.130" -> "select.132";
	"constant.124" -> "broadcast.135";
	"select.132" -> "compare.136";
	"broadcast.135" -> "compare.136";
	"constant.123" -> "broadcast.137";
	"select.132" -> "negate.133";
	"negate.133" -> "multiply.134";
	"add.32" -> "multiply.134";
	"compare.136" -> "select.138";
	"broadcast.137" -> "select.138";
	"multiply.134" -> "select.138";
	"constant.139" -> "broadcast.140";
	"p2.7" -> "compare.141";
	"broadcast.140" -> "compare.141";
	"constant.142" -> "broadcast.8";
	"constant.144" -> "broadcast.9";
	"compare.141" -> "select.1";
	"broadcast.8" -> "select.1";
	"broadcast.9" -> "select.1";
	"select.1" -> "broadcast.10";
	"broadcast.10" -> "multiply.148";
	"select.132" -> "multiply.148";
	"select.138" -> "multiply.155";
	"multiply.148" -> "multiply.155";
	"multiply.155" -> "reduce.160";
	"constant.123" -> "reduce.160";
	"AddComputation.156" -> "reduce.160";
	"multiply.148" -> "reduce.154";
	"constant.149" -> "reduce.154";
	"AddComputation.150" -> "reduce.154";
	"reduce.160" -> "divide.161";
	"reduce.154" -> "divide.161";
	"constant.107" -> "broadcast.108";
	"get-tuple-element.106" -> "multiply.109";
	"broadcast.108" -> "multiply.109";
	"constant.111" -> "broadcast.112";
	"get-tuple-element.110" -> "multiply.113";
	"broadcast.112" -> "multiply.113";
	"add.116" -> "tuple.162";
	"add.122" -> "tuple.162";
	"reshape.26" -> "tuple.162";
	"add.32" -> "tuple.162";
	"divide.161" -> "tuple.162";
	"multiply.109" -> "tuple.162";
	"multiply.113" -> "tuple.162";
}