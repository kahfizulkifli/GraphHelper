digraph HloModule {
	"p3.15" [label="p3.15 \n f32[10,784]"];
	"p1.6" [label="p1.6 \n s64[32]"];
	"broadcast.36" [label="broadcast.36 \n s64[32,10]"];
	"iota.1" [label="iota.1 \n s64[32,10]"];
	"compare.39" [label="compare.39 \n pred[32,10]"];
	"constant.34" [label="constant.34 \n f32[] constant(1), metadata="];
	"broadcast.41" [label="broadcast.41 \n f32[32,10]"];
	"constant.33" [label="constant.33 \n f32[] constant(0), metadata="];
	"broadcast.40" [label="broadcast.40 \n f32[32,10]"];
	"select.42" [label="select.42 \n f32[32,10]"];
	"negate.43" [label="negate.43 \n f32[32,10]"];
	"constant.46" [label="constant.46 \n s64[] constant(-100), metadata="];
	"broadcast.47" [label="broadcast.47 \n s64[32]"];
	"compare.48" [label="compare.48 \n pred[32]"];
	"constant.49" [label="constant.49 \n f32[] constant(1), metadata="];
	"broadcast.1" [label="broadcast.1 \n f32[32]"];
	"constant.51" [label="constant.51 \n f32[] constant(0), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[32]"];
	"select.0" [label="select.0 \n f32[32]"];
	"broadcast.4" [label="broadcast.4 \n f32[32,10]"];
	"multiply.55" [label="multiply.55 \n f32[32,10]"];
	"multiply.65" [label="multiply.65 \n f32[32,10]"];
	"constant.56" [label="constant.56 \n f32[] constant(0), metadata="];
	"reduce.61" [label="reduce.61 \n f32[] reduce(f32[32,10]"];
	"compare.63" [label="compare.63 \n pred[] compare(f32[] %reduce.61, f32[] %constant.56), direction=NE, metadata="];
	"constant.62" [label="constant.62 \n f32[] constant(1), metadata="];
	"select.64" [label="select.64 \n f32[] select(pred[] %compare.63, f32[] %reduce.61, f32[] %constant.62), metadata="];
	"broadcast.66" [label="broadcast.66 \n f32[32,10]"];
	"divide.67" [label="divide.67 \n f32[32,10]"];
	"p4.24" [label="p4.24 \n f32[32,784]"];
	"transpose.68" [label="transpose.68 \n f32[784,32]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.5" [label="broadcast.5 \n f32[10,784]"];
	"multiply.78" [label="multiply.78 \n f32[10,784]"];
	"add.79" [label="add.79 \n f32[10,784]"];
	"p2.7" [label="p2.7 \n f32[10]"];
	"constant.84" [label="constant.84 \n f32[] constant(0), metadata="];
	"reduce.90" [label="reduce.90 \n f32[10]"];
	"broadcast.83" [label="broadcast.83 \n f32[10]"];
	"multiply.100" [label="multiply.100 \n f32[10]"];
	"add.101" [label="add.101 \n f32[10]"];
	"transpose.23" [label="transpose.23 \n f32[784,10]"];
	"dot.25" [label="dot.25 \n f32[32,10]"];
	"broadcast.29" [label="broadcast.29 \n f32[32,10]"];
	"add.30" [label="add.30 \n f32[32,10]"];
	"broadcast.105" [label="broadcast.105 \n s64[32,10]"];
	"iota.3" [label="iota.3 \n s64[32,10]"];
	"compare.108" [label="compare.108 \n pred[32,10]"];
	"constant.103" [label="constant.103 \n f32[] constant(1), metadata="];
	"broadcast.110" [label="broadcast.110 \n f32[32,10]"];
	"constant.102" [label="constant.102 \n f32[] constant(0), metadata="];
	"broadcast.109" [label="broadcast.109 \n f32[32,10]"];
	"select.111" [label="select.111 \n f32[32,10]"];
	"broadcast.114" [label="broadcast.114 \n f32[32,10]"];
	"compare.115" [label="compare.115 \n pred[32,10]"];
	"broadcast.116" [label="broadcast.116 \n f32[32,10]"];
	"negate.112" [label="negate.112 \n f32[32,10]"];
	"multiply.113" [label="multiply.113 \n f32[32,10]"];
	"select.117" [label="select.117 \n f32[32,10]"];
	"constant.118" [label="constant.118 \n s64[] constant(-100), metadata="];
	"broadcast.119" [label="broadcast.119 \n s64[32]"];
	"compare.120" [label="compare.120 \n pred[32]"];
	"constant.121" [label="constant.121 \n f32[] constant(1), metadata="];
	"broadcast.6" [label="broadcast.6 \n f32[32]"];
	"constant.123" [label="constant.123 \n f32[] constant(0), metadata="];
	"broadcast.7" [label="broadcast.7 \n f32[32]"];
	"select.1" [label="select.1 \n f32[32]"];
	"broadcast.8" [label="broadcast.8 \n f32[32,10]"];
	"multiply.127" [label="multiply.127 \n f32[32,10]"];
	"multiply.134" [label="multiply.134 \n f32[32,10]"];
	"reduce.139" [label="reduce.139 \n f32[] reduce(f32[32,10]"];
	"constant.128" [label="constant.128 \n f32[] constant(0), metadata="];
	"reduce.133" [label="reduce.133 \n f32[] reduce(f32[32,10]"];
	"divide.140" [label="divide.140 \n f32[] divide(f32[] %reduce.139, f32[] %reduce.133), metadata="];
	"tuple.141" [label="tuple.141 \n (f32[10,784]"]; 
 	"p1.6" -> "broadcast.36";
	"broadcast.36" -> "compare.39";
	"iota.1" -> "compare.39";
	"constant.34" -> "broadcast.41";
	"constant.33" -> "broadcast.40";
	"compare.39" -> "select.42";
	"broadcast.41" -> "select.42";
	"broadcast.40" -> "select.42";
	"select.42" -> "negate.43";
	"constant.46" -> "broadcast.47";
	"p1.6" -> "compare.48";
	"broadcast.47" -> "compare.48";
	"constant.49" -> "broadcast.1";
	"constant.51" -> "broadcast.2";
	"compare.48" -> "select.0";
	"broadcast.1" -> "select.0";
	"broadcast.2" -> "select.0";
	"select.0" -> "broadcast.4";
	"broadcast.4" -> "multiply.55";
	"select.42" -> "multiply.55";
	"negate.43" -> "multiply.65";
	"multiply.55" -> "multiply.65";
	"multiply.55" -> "reduce.61";
	"constant.56" -> "reduce.61";
	"AddComputation.57" -> "reduce.61";
	"reduce.61" -> "compare.63";
	"constant.56" -> "compare.63";
	"compare.63" -> "select.64";
	"reduce.61" -> "select.64";
	"constant.62" -> "select.64";
	"select.64" -> "broadcast.66";
	"multiply.65" -> "divide.67";
	"broadcast.66" -> "divide.67";
	"p4.24" -> "transpose.68";
	"divide.67" -> "dot";
	"transpose.68" -> "dot";
	"dot" -> "custom-call.4";
	"p0.1" -> "broadcast.5";
	"custom-call.4" -> "multiply.78";
	"broadcast.5" -> "multiply.78";
	"p3.15" -> "add.79";
	"multiply.78" -> "add.79";
	"divide.67" -> "reduce.90";
	"constant.84" -> "reduce.90";
	"AddComputation.86" -> "reduce.90";
	"reduce.90" -> "custom-call.5";
	"p0.1" -> "broadcast.83";
	"custom-call.5" -> "multiply.100";
	"broadcast.83" -> "multiply.100";
	"p2.7" -> "add.101";
	"multiply.100" -> "add.101";
	"p3.15" -> "custom-call.6";
	"custom-call.6" -> "transpose.23";
	"p4.24" -> "dot.25";
	"transpose.23" -> "dot.25";
	"p2.7" -> "custom-call.7";
	"custom-call.7" -> "broadcast.29";
	"dot.25" -> "add.30";
	"broadcast.29" -> "add.30";
	"p1.6" -> "broadcast.105";
	"broadcast.105" -> "compare.108";
	"iota.3" -> "compare.108";
	"constant.103" -> "broadcast.110";
	"constant.102" -> "broadcast.109";
	"compare.108" -> "select.111";
	"broadcast.110" -> "select.111";
	"broadcast.109" -> "select.111";
	"constant.103" -> "broadcast.114";
	"select.111" -> "compare.115";
	"broadcast.114" -> "compare.115";
	"constant.102" -> "broadcast.116";
	"select.111" -> "negate.112";
	"negate.112" -> "multiply.113";
	"add.30" -> "multiply.113";
	"compare.115" -> "select.117";
	"broadcast.116" -> "select.117";
	"multiply.113" -> "select.117";
	"constant.118" -> "broadcast.119";
	"p1.6" -> "compare.120";
	"broadcast.119" -> "compare.120";
	"constant.121" -> "broadcast.6";
	"constant.123" -> "broadcast.7";
	"compare.120" -> "select.1";
	"broadcast.6" -> "select.1";
	"broadcast.7" -> "select.1";
	"select.1" -> "broadcast.8";
	"broadcast.8" -> "multiply.127";
	"select.111" -> "multiply.127";
	"select.117" -> "multiply.134";
	"multiply.127" -> "multiply.134";
	"multiply.134" -> "reduce.139";
	"constant.102" -> "reduce.139";
	"AddComputation.135" -> "reduce.139";
	"multiply.127" -> "reduce.133";
	"constant.128" -> "reduce.133";
	"AddComputation.129" -> "reduce.133";
	"reduce.139" -> "divide.140";
	"reduce.133" -> "divide.140";
	"add.79" -> "tuple.141";
	"add.101" -> "tuple.141";
	"p4.24" -> "tuple.141";
	"p1.6" -> "tuple.141";
	"add.30" -> "tuple.141";
	"divide.140" -> "tuple.141";
	"custom-call.5" -> "tuple.141";
	"custom-call.4" -> "tuple.141";
}