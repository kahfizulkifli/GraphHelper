digraph HloModule {
	"p2.19" [label="p2.19 \n f32[120,784]"];
	"p9.197" [label="p9.197 \n f32[32,784]"];
	"transpose.196" [label="transpose.196 \n f32[784,120]"];
	"dot.198" [label="dot.198 \n f32[32,120]"];
	"p1.11" [label="p1.11 \n f32[120]"];
	"broadcast.202" [label="broadcast.202 \n f32[32,120]"];
	"add.203" [label="add.203 \n f32[32,120]"];
	"constant.204" [label="constant.204 \n f32[] constant(0), metadata="];
	"broadcast.205" [label="broadcast.205 \n f32[32,120]"];
	"maximum.206" [label="maximum.206 \n f32[32,120]"];
	"constant.330" [label="constant.330 \n f32[] constant(0), metadata="];
	"broadcast.333" [label="broadcast.333 \n f32[32,120]"];
	"compare.334" [label="compare.334 \n pred[32,120]"];
	"p4.38" [label="p4.38 \n f32[84,120]"];
	"transpose.223" [label="transpose.223 \n f32[120,84]"];
	"dot.224" [label="dot.224 \n f32[32,84]"];
	"p5.48" [label="p5.48 \n f32[84]"];
	"broadcast.228" [label="broadcast.228 \n f32[32,84]"];
	"add.229" [label="add.229 \n f32[32,84]"];
	"constant.230" [label="constant.230 \n f32[] constant(0), metadata="];
	"broadcast.231" [label="broadcast.231 \n f32[32,84]"];
	"maximum.232" [label="maximum.232 \n f32[32,84]"];
	"constant.323" [label="constant.323 \n f32[] constant(0), metadata="];
	"broadcast.326" [label="broadcast.326 \n f32[32,84]"];
	"compare.327" [label="compare.327 \n pred[32,84]"];
	"p10.274" [label="p10.274 \n s64[32]"];
	"broadcast.280" [label="broadcast.280 \n s64[32,10]"];
	"iota.1" [label="iota.1 \n s64[32,10]"];
	"compare.283" [label="compare.283 \n pred[32,10]"];
	"constant.278" [label="constant.278 \n f32[] constant(1), metadata="];
	"broadcast.285" [label="broadcast.285 \n f32[32,10]"];
	"constant.277" [label="constant.277 \n f32[] constant(0), metadata="];
	"broadcast.284" [label="broadcast.284 \n f32[32,10]"];
	"select.286" [label="select.286 \n f32[32,10]"];
	"negate.287" [label="negate.287 \n f32[32,10]"];
	"constant.290" [label="constant.290 \n s64[] constant(-100), metadata="];
	"broadcast.291" [label="broadcast.291 \n s64[32]"];
	"compare.292" [label="compare.292 \n pred[32]"];
	"constant.293" [label="constant.293 \n f32[] constant(1), metadata="];
	"broadcast.1" [label="broadcast.1 \n f32[32]"];
	"constant.295" [label="constant.295 \n f32[] constant(0), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[32]"];
	"select.0" [label="select.0 \n f32[32]"];
	"broadcast.4" [label="broadcast.4 \n f32[32,10]"];
	"multiply.299" [label="multiply.299 \n f32[32,10]"];
	"multiply.309" [label="multiply.309 \n f32[32,10]"];
	"constant.300" [label="constant.300 \n f32[] constant(0), metadata="];
	"reduce.305" [label="reduce.305 \n f32[] reduce(f32[32,10]"];
	"compare.307" [label="compare.307 \n pred[] compare(f32[] %reduce.305, f32[] %constant.300), direction=NE, metadata="];
	"constant.306" [label="constant.306 \n f32[] constant(1), metadata="];
	"select.308" [label="select.308 \n f32[] select(pred[] %compare.307, f32[] %reduce.305, f32[] %constant.306), metadata="];
	"broadcast.310" [label="broadcast.310 \n f32[32,10]"];
	"divide.311" [label="divide.311 \n f32[32,10]"];
	"p6.66" [label="p6.66 \n f32[10,84]"];
	"transpose.249" [label="transpose.249 \n f32[84,10]"];
	"dot.250" [label="dot.250 \n f32[32,10]"];
	"p7.76" [label="p7.76 \n f32[10]"];
	"broadcast.254" [label="broadcast.254 \n f32[32,10]"];
	"add.255" [label="add.255 \n f32[32,10]"];
	"constant.256" [label="constant.256 \n f32[] constant(-inf), metadata="];
	"reduce.261" [label="reduce.261 \n f32[32]"];
	"broadcast.262" [label="broadcast.262 \n f32[32,10]"];
	"subtract.263" [label="subtract.263 \n f32[32,10]"];
	"exponential.264" [label="exponential.264 \n f32[32,10]"];
	"constant.265" [label="constant.265 \n f32[] constant(0), metadata="];
	"reduce.270" [label="reduce.270 \n f32[32]"];
	"log.271" [label="log.271 \n f32[32]"];
	"broadcast.272" [label="broadcast.272 \n f32[32,10]"];
	"subtract.273" [label="subtract.273 \n f32[32,10]"];
	"exponential.318" [label="exponential.318 \n f32[32,10]"];
	"constant.312" [label="constant.312 \n f32[] constant(0), metadata="];
	"reduce.317" [label="reduce.317 \n f32[32]"];
	"broadcast.319" [label="broadcast.319 \n f32[32,10]"];
	"multiply.320" [label="multiply.320 \n f32[32,10]"];
	"subtract.321" [label="subtract.321 \n f32[32,10]"];
	"dot.322" [label="dot.322 \n f32[32,84]"];
	"constant.324" [label="constant.324 \n f32[] constant(0), metadata="];
	"broadcast.325" [label="broadcast.325 \n f32[32,84]"];
	"select.328" [label="select.328 \n f32[32,84]"];
	"dot.329" [label="dot.329 \n f32[32,120]"];
	"constant.331" [label="constant.331 \n f32[] constant(0), metadata="];
	"broadcast.332" [label="broadcast.332 \n f32[32,120]"];
	"select.335" [label="select.335 \n f32[32,120]"];
	"transpose.336" [label="transpose.336 \n f32[784,32]"];
	"p3.28" [label="p3.28 \n f32[32,784]"];
	"transpose.27" [label="transpose.27 \n f32[784,120]"];
	"dot.29" [label="dot.29 \n f32[32,120]"];
	"broadcast.33" [label="broadcast.33 \n f32[32,120]"];
	"add.34" [label="add.34 \n f32[32,120]"];
	"constant.35" [label="constant.35 \n f32[] constant(0), metadata="];
	"broadcast.36" [label="broadcast.36 \n f32[32,120]"];
	"maximum.37" [label="maximum.37 \n f32[32,120]"];
	"constant.165" [label="constant.165 \n f32[] constant(0), metadata="];
	"broadcast.168" [label="broadcast.168 \n f32[32,120]"];
	"compare.169" [label="compare.169 \n pred[32,120]"];
	"transpose.56" [label="transpose.56 \n f32[120,84]"];
	"dot.57" [label="dot.57 \n f32[32,84]"];
	"broadcast.61" [label="broadcast.61 \n f32[32,84]"];
	"add.62" [label="add.62 \n f32[32,84]"];
	"constant.63" [label="constant.63 \n f32[] constant(0), metadata="];
	"broadcast.64" [label="broadcast.64 \n f32[32,84]"];
	"maximum.65" [label="maximum.65 \n f32[32,84]"];
	"constant.158" [label="constant.158 \n f32[] constant(0), metadata="];
	"broadcast.161" [label="broadcast.161 \n f32[32,84]"];
	"compare.162" [label="compare.162 \n pred[32,84]"];
	"p8.109" [label="p8.109 \n s64[32]"];
	"broadcast.115" [label="broadcast.115 \n s64[32,10]"];
	"iota.3" [label="iota.3 \n s64[32,10]"];
	"compare.118" [label="compare.118 \n pred[32,10]"];
	"constant.113" [label="constant.113 \n f32[] constant(1), metadata="];
	"broadcast.120" [label="broadcast.120 \n f32[32,10]"];
	"constant.112" [label="constant.112 \n f32[] constant(0), metadata="];
	"broadcast.119" [label="broadcast.119 \n f32[32,10]"];
	"select.121" [label="select.121 \n f32[32,10]"];
	"negate.122" [label="negate.122 \n f32[32,10]"];
	"constant.125" [label="constant.125 \n s64[] constant(-100), metadata="];
	"broadcast.126" [label="broadcast.126 \n s64[32]"];
	"compare.127" [label="compare.127 \n pred[32]"];
	"constant.128" [label="constant.128 \n f32[] constant(1), metadata="];
	"broadcast.7" [label="broadcast.7 \n f32[32]"];
	"constant.130" [label="constant.130 \n f32[] constant(0), metadata="];
	"broadcast.9" [label="broadcast.9 \n f32[32]"];
	"select.1" [label="select.1 \n f32[32]"];
	"broadcast.11" [label="broadcast.11 \n f32[32,10]"];
	"multiply.134" [label="multiply.134 \n f32[32,10]"];
	"multiply.144" [label="multiply.144 \n f32[32,10]"];
	"constant.135" [label="constant.135 \n f32[] constant(0), metadata="];
	"reduce.140" [label="reduce.140 \n f32[] reduce(f32[32,10]"];
	"compare.142" [label="compare.142 \n pred[] compare(f32[] %reduce.140, f32[] %constant.135), direction=NE, metadata="];
	"constant.141" [label="constant.141 \n f32[] constant(1), metadata="];
	"select.143" [label="select.143 \n f32[] select(pred[] %compare.142, f32[] %reduce.140, f32[] %constant.141), metadata="];
	"broadcast.145" [label="broadcast.145 \n f32[32,10]"];
	"divide.146" [label="divide.146 \n f32[32,10]"];
	"transpose.84" [label="transpose.84 \n f32[84,10]"];
	"dot.85" [label="dot.85 \n f32[32,10]"];
	"broadcast.89" [label="broadcast.89 \n f32[32,10]"];
	"add.90" [label="add.90 \n f32[32,10]"];
	"constant.91" [label="constant.91 \n f32[] constant(-inf), metadata="];
	"reduce.96" [label="reduce.96 \n f32[32]"];
	"broadcast.97" [label="broadcast.97 \n f32[32,10]"];
	"subtract.98" [label="subtract.98 \n f32[32,10]"];
	"exponential.99" [label="exponential.99 \n f32[32,10]"];
	"constant.100" [label="constant.100 \n f32[] constant(0), metadata="];
	"reduce.105" [label="reduce.105 \n f32[32]"];
	"log.106" [label="log.106 \n f32[32]"];
	"broadcast.107" [label="broadcast.107 \n f32[32,10]"];
	"subtract.108" [label="subtract.108 \n f32[32,10]"];
	"exponential.153" [label="exponential.153 \n f32[32,10]"];
	"constant.147" [label="constant.147 \n f32[] constant(0), metadata="];
	"reduce.152" [label="reduce.152 \n f32[32]"];
	"broadcast.154" [label="broadcast.154 \n f32[32,10]"];
	"multiply.155" [label="multiply.155 \n f32[32,10]"];
	"subtract.156" [label="subtract.156 \n f32[32,10]"];
	"dot.157" [label="dot.157 \n f32[32,84]"];
	"constant.159" [label="constant.159 \n f32[] constant(0), metadata="];
	"broadcast.160" [label="broadcast.160 \n f32[32,84]"];
	"select.163" [label="select.163 \n f32[32,84]"];
	"dot.164" [label="dot.164 \n f32[32,120]"];
	"constant.166" [label="constant.166 \n f32[] constant(0), metadata="];
	"broadcast.167" [label="broadcast.167 \n f32[32,120]"];
	"select.170" [label="select.170 \n f32[32,120]"];
	"transpose.171" [label="transpose.171 \n f32[784,32]"];
	"dot.1" [label="dot.1 \n f32[120,784]"];
	"add.346" [label="add.346 \n f32[120,784]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.5" [label="broadcast.5 \n f32[120,784]"];
	"multiply.347" [label="multiply.347 \n f32[120,784]"];
	"add.348" [label="add.348 \n f32[120,784]"];
	"constant.375" [label="constant.375 \n f32[] constant(0), metadata="];
	"reduce.381" [label="reduce.381 \n f32[120]"];
	"constant.358" [label="constant.358 \n f32[] constant(0), metadata="];
	"reduce.364" [label="reduce.364 \n f32[120]"];
	"add.391" [label="add.391 \n f32[120]"];
	"broadcast.352" [label="broadcast.352 \n f32[120]"];
	"multiply.392" [label="multiply.392 \n f32[120]"];
	"add.393" [label="add.393 \n f32[120]"];
	"transpose.414" [label="transpose.414 \n f32[120,32]"];
	"dot.2" [label="dot.2 \n f32[84,120]"];
	"transpose.403" [label="transpose.403 \n f32[120,32]"];
	"dot.3" [label="dot.3 \n f32[84,120]"];
	"add.424" [label="add.424 \n f32[84,120]"];
	"broadcast.397" [label="broadcast.397 \n f32[84,120]"];
	"multiply.425" [label="multiply.425 \n f32[84,120]"];
	"add.426" [label="add.426 \n f32[84,120]"];
	"constant.453" [label="constant.453 \n f32[] constant(0), metadata="];
	"reduce.459" [label="reduce.459 \n f32[84]"];
	"constant.436" [label="constant.436 \n f32[] constant(0), metadata="];
	"reduce.442" [label="reduce.442 \n f32[84]"];
	"add.469" [label="add.469 \n f32[84]"];
	"broadcast.430" [label="broadcast.430 \n f32[84]"];
	"multiply.470" [label="multiply.470 \n f32[84]"];
	"add.471" [label="add.471 \n f32[84]"];
	"transpose.492" [label="transpose.492 \n f32[84,32]"];
	"dot.4" [label="dot.4 \n f32[10,84]"];
	"transpose.481" [label="transpose.481 \n f32[84,32]"];
	"dot.5" [label="dot.5 \n f32[10,84]"];
	"add.502" [label="add.502 \n f32[10,84]"];
	"broadcast.475" [label="broadcast.475 \n f32[10,84]"];
	"multiply.503" [label="multiply.503 \n f32[10,84]"];
	"add.504" [label="add.504 \n f32[10,84]"];
	"constant.531" [label="constant.531 \n f32[] constant(0), metadata="];
	"reduce.537" [label="reduce.537 \n f32[10]"];
	"constant.514" [label="constant.514 \n f32[] constant(0), metadata="];
	"reduce.520" [label="reduce.520 \n f32[10]"];
	"add.547" [label="add.547 \n f32[10]"];
	"broadcast.508" [label="broadcast.508 \n f32[10]"];
	"multiply.548" [label="multiply.548 \n f32[10]"];
	"add.549" [label="add.549 \n f32[10]"];
	"broadcast.553" [label="broadcast.553 \n s64[32,10]"];
	"iota.5" [label="iota.5 \n s64[32,10]"];
	"compare.556" [label="compare.556 \n pred[32,10]"];
	"constant.551" [label="constant.551 \n f32[] constant(1), metadata="];
	"broadcast.558" [label="broadcast.558 \n f32[32,10]"];
	"constant.550" [label="constant.550 \n f32[] constant(0), metadata="];
	"broadcast.557" [label="broadcast.557 \n f32[32,10]"];
	"select.559" [label="select.559 \n f32[32,10]"];
	"broadcast.562" [label="broadcast.562 \n f32[32,10]"];
	"compare.563" [label="compare.563 \n pred[32,10]"];
	"broadcast.564" [label="broadcast.564 \n f32[32,10]"];
	"negate.560" [label="negate.560 \n f32[32,10]"];
	"multiply.561" [label="multiply.561 \n f32[32,10]"];
	"select.565" [label="select.565 \n f32[32,10]"];
	"constant.566" [label="constant.566 \n s64[] constant(-100), metadata="];
	"broadcast.567" [label="broadcast.567 \n s64[32]"];
	"compare.568" [label="compare.568 \n pred[32]"];
	"constant.569" [label="constant.569 \n f32[] constant(1), metadata="];
	"broadcast.12" [label="broadcast.12 \n f32[32]"];
	"constant.571" [label="constant.571 \n f32[] constant(0), metadata="];
	"broadcast.13" [label="broadcast.13 \n f32[32]"];
	"select.2" [label="select.2 \n f32[32]"];
	"broadcast.14" [label="broadcast.14 \n f32[32,10]"];
	"multiply.575" [label="multiply.575 \n f32[32,10]"];
	"multiply.582" [label="multiply.582 \n f32[32,10]"];
	"reduce.587" [label="reduce.587 \n f32[] reduce(f32[32,10]"];
	"constant.576" [label="constant.576 \n f32[] constant(0), metadata="];
	"reduce.581" [label="reduce.581 \n f32[] reduce(f32[32,10]"];
	"divide.588" [label="divide.588 \n f32[] divide(f32[] %reduce.587, f32[] %reduce.581), metadata="];
	"tuple.589" [label="tuple.589 \n (f32[120,784]"]; 
 	"p2.19" -> "custom-call.26";
	"custom-call.26" -> "transpose.196";
	"p9.197" -> "dot.198";
	"transpose.196" -> "dot.198";
	"p1.11" -> "custom-call.27";
	"custom-call.27" -> "broadcast.202";
	"dot.198" -> "add.203";
	"broadcast.202" -> "add.203";
	"constant.204" -> "broadcast.205";
	"add.203" -> "maximum.206";
	"broadcast.205" -> "maximum.206";
	"constant.330" -> "broadcast.333";
	"maximum.206" -> "compare.334";
	"broadcast.333" -> "compare.334";
	"p4.38" -> "custom-call.28";
	"custom-call.28" -> "transpose.223";
	"maximum.206" -> "dot.224";
	"transpose.223" -> "dot.224";
	"p5.48" -> "custom-call.29";
	"custom-call.29" -> "broadcast.228";
	"dot.224" -> "add.229";
	"broadcast.228" -> "add.229";
	"constant.230" -> "broadcast.231";
	"add.229" -> "maximum.232";
	"broadcast.231" -> "maximum.232";
	"constant.323" -> "broadcast.326";
	"maximum.232" -> "compare.327";
	"broadcast.326" -> "compare.327";
	"p10.274" -> "broadcast.280";
	"broadcast.280" -> "compare.283";
	"iota.1" -> "compare.283";
	"constant.278" -> "broadcast.285";
	"constant.277" -> "broadcast.284";
	"compare.283" -> "select.286";
	"broadcast.285" -> "select.286";
	"broadcast.284" -> "select.286";
	"select.286" -> "negate.287";
	"constant.290" -> "broadcast.291";
	"p10.274" -> "compare.292";
	"broadcast.291" -> "compare.292";
	"constant.293" -> "broadcast.1";
	"constant.295" -> "broadcast.2";
	"compare.292" -> "select.0";
	"broadcast.1" -> "select.0";
	"broadcast.2" -> "select.0";
	"select.0" -> "broadcast.4";
	"broadcast.4" -> "multiply.299";
	"select.286" -> "multiply.299";
	"negate.287" -> "multiply.309";
	"multiply.299" -> "multiply.309";
	"multiply.299" -> "reduce.305";
	"constant.300" -> "reduce.305";
	"AddComputation.301" -> "reduce.305";
	"reduce.305" -> "compare.307";
	"constant.300" -> "compare.307";
	"compare.307" -> "select.308";
	"reduce.305" -> "select.308";
	"constant.306" -> "select.308";
	"select.308" -> "broadcast.310";
	"multiply.309" -> "divide.311";
	"broadcast.310" -> "divide.311";
	"p6.66" -> "custom-call.30";
	"custom-call.30" -> "transpose.249";
	"maximum.232" -> "dot.250";
	"transpose.249" -> "dot.250";
	"p7.76" -> "custom-call.31";
	"custom-call.31" -> "broadcast.254";
	"dot.250" -> "add.255";
	"broadcast.254" -> "add.255";
	"add.255" -> "reduce.261";
	"constant.256" -> "reduce.261";
	"MaxComputation.257" -> "reduce.261";
	"reduce.261" -> "broadcast.262";
	"add.255" -> "subtract.263";
	"broadcast.262" -> "subtract.263";
	"subtract.263" -> "exponential.264";
	"exponential.264" -> "reduce.270";
	"constant.265" -> "reduce.270";
	"AddComputation.266" -> "reduce.270";
	"reduce.270" -> "log.271";
	"log.271" -> "broadcast.272";
	"subtract.263" -> "subtract.273";
	"broadcast.272" -> "subtract.273";
	"subtract.273" -> "exponential.318";
	"divide.311" -> "reduce.317";
	"constant.312" -> "reduce.317";
	"AddComputation.313" -> "reduce.317";
	"reduce.317" -> "broadcast.319";
	"exponential.318" -> "multiply.320";
	"broadcast.319" -> "multiply.320";
	"divide.311" -> "subtract.321";
	"multiply.320" -> "subtract.321";
	"subtract.321" -> "dot.322";
	"custom-call.30" -> "dot.322";
	"constant.324" -> "broadcast.325";
	"compare.327" -> "select.328";
	"dot.322" -> "select.328";
	"broadcast.325" -> "select.328";
	"select.328" -> "dot.329";
	"custom-call.28" -> "dot.329";
	"constant.331" -> "broadcast.332";
	"compare.334" -> "select.335";
	"dot.329" -> "select.335";
	"broadcast.332" -> "select.335";
	"p9.197" -> "transpose.336";
	"select.335" -> "dot";
	"transpose.336" -> "dot";
	"dot" -> "custom-call.32";
	"p2.19" -> "custom-call.33";
	"custom-call.33" -> "transpose.27";
	"p3.28" -> "dot.29";
	"transpose.27" -> "dot.29";
	"p1.11" -> "custom-call.34";
	"custom-call.34" -> "broadcast.33";
	"dot.29" -> "add.34";
	"broadcast.33" -> "add.34";
	"constant.35" -> "broadcast.36";
	"add.34" -> "maximum.37";
	"broadcast.36" -> "maximum.37";
	"constant.165" -> "broadcast.168";
	"maximum.37" -> "compare.169";
	"broadcast.168" -> "compare.169";
	"p4.38" -> "custom-call.35";
	"custom-call.35" -> "transpose.56";
	"maximum.37" -> "dot.57";
	"transpose.56" -> "dot.57";
	"p5.48" -> "custom-call.36";
	"custom-call.36" -> "broadcast.61";
	"dot.57" -> "add.62";
	"broadcast.61" -> "add.62";
	"constant.63" -> "broadcast.64";
	"add.62" -> "maximum.65";
	"broadcast.64" -> "maximum.65";
	"constant.158" -> "broadcast.161";
	"maximum.65" -> "compare.162";
	"broadcast.161" -> "compare.162";
	"p8.109" -> "broadcast.115";
	"broadcast.115" -> "compare.118";
	"iota.3" -> "compare.118";
	"constant.113" -> "broadcast.120";
	"constant.112" -> "broadcast.119";
	"compare.118" -> "select.121";
	"broadcast.120" -> "select.121";
	"broadcast.119" -> "select.121";
	"select.121" -> "negate.122";
	"constant.125" -> "broadcast.126";
	"p8.109" -> "compare.127";
	"broadcast.126" -> "compare.127";
	"constant.128" -> "broadcast.7";
	"constant.130" -> "broadcast.9";
	"compare.127" -> "select.1";
	"broadcast.7" -> "select.1";
	"broadcast.9" -> "select.1";
	"select.1" -> "broadcast.11";
	"broadcast.11" -> "multiply.134";
	"select.121" -> "multiply.134";
	"negate.122" -> "multiply.144";
	"multiply.134" -> "multiply.144";
	"multiply.134" -> "reduce.140";
	"constant.135" -> "reduce.140";
	"AddComputation.136" -> "reduce.140";
	"reduce.140" -> "compare.142";
	"constant.135" -> "compare.142";
	"compare.142" -> "select.143";
	"reduce.140" -> "select.143";
	"constant.141" -> "select.143";
	"select.143" -> "broadcast.145";
	"multiply.144" -> "divide.146";
	"broadcast.145" -> "divide.146";
	"p6.66" -> "custom-call.37";
	"custom-call.37" -> "transpose.84";
	"maximum.65" -> "dot.85";
	"transpose.84" -> "dot.85";
	"p7.76" -> "custom-call.38";
	"custom-call.38" -> "broadcast.89";
	"dot.85" -> "add.90";
	"broadcast.89" -> "add.90";
	"add.90" -> "reduce.96";
	"constant.91" -> "reduce.96";
	"MaxComputation.92" -> "reduce.96";
	"reduce.96" -> "broadcast.97";
	"add.90" -> "subtract.98";
	"broadcast.97" -> "subtract.98";
	"subtract.98" -> "exponential.99";
	"exponential.99" -> "reduce.105";
	"constant.100" -> "reduce.105";
	"AddComputation.101" -> "reduce.105";
	"reduce.105" -> "log.106";
	"log.106" -> "broadcast.107";
	"subtract.98" -> "subtract.108";
	"broadcast.107" -> "subtract.108";
	"subtract.108" -> "exponential.153";
	"divide.146" -> "reduce.152";
	"constant.147" -> "reduce.152";
	"AddComputation.148" -> "reduce.152";
	"reduce.152" -> "broadcast.154";
	"exponential.153" -> "multiply.155";
	"broadcast.154" -> "multiply.155";
	"divide.146" -> "subtract.156";
	"multiply.155" -> "subtract.156";
	"subtract.156" -> "dot.157";
	"custom-call.37" -> "dot.157";
	"constant.159" -> "broadcast.160";
	"compare.162" -> "select.163";
	"dot.157" -> "select.163";
	"broadcast.160" -> "select.163";
	"select.163" -> "dot.164";
	"custom-call.35" -> "dot.164";
	"constant.166" -> "broadcast.167";
	"compare.169" -> "select.170";
	"dot.164" -> "select.170";
	"broadcast.167" -> "select.170";
	"p3.28" -> "transpose.171";
	"select.170" -> "dot.1";
	"transpose.171" -> "dot.1";
	"dot.1" -> "custom-call.39";
	"custom-call.32" -> "add.346";
	"custom-call.39" -> "add.346";
	"p0.1" -> "broadcast.5";
	"add.346" -> "multiply.347";
	"broadcast.5" -> "multiply.347";
	"p2.19" -> "add.348";
	"multiply.347" -> "add.348";
	"select.335" -> "reduce.381";
	"constant.375" -> "reduce.381";
	"AddComputation.377" -> "reduce.381";
	"reduce.381" -> "custom-call.40";
	"select.170" -> "reduce.364";
	"constant.358" -> "reduce.364";
	"AddComputation.360" -> "reduce.364";
	"reduce.364" -> "custom-call.42";
	"custom-call.40" -> "add.391";
	"custom-call.42" -> "add.391";
	"p0.1" -> "broadcast.352";
	"add.391" -> "multiply.392";
	"broadcast.352" -> "multiply.392";
	"p1.11" -> "add.393";
	"multiply.392" -> "add.393";
	"maximum.206" -> "transpose.414";
	"select.328" -> "dot.2";
	"transpose.414" -> "dot.2";
	"dot.2" -> "custom-call.43";
	"maximum.37" -> "transpose.403";
	"select.163" -> "dot.3";
	"transpose.403" -> "dot.3";
	"dot.3" -> "custom-call.44";
	"custom-call.43" -> "add.424";
	"custom-call.44" -> "add.424";
	"p0.1" -> "broadcast.397";
	"add.424" -> "multiply.425";
	"broadcast.397" -> "multiply.425";
	"p4.38" -> "add.426";
	"multiply.425" -> "add.426";
	"select.328" -> "reduce.459";
	"constant.453" -> "reduce.459";
	"AddComputation.455" -> "reduce.459";
	"reduce.459" -> "custom-call.45";
	"select.163" -> "reduce.442";
	"constant.436" -> "reduce.442";
	"AddComputation.438" -> "reduce.442";
	"reduce.442" -> "custom-call.46";
	"custom-call.45" -> "add.469";
	"custom-call.46" -> "add.469";
	"p0.1" -> "broadcast.430";
	"add.469" -> "multiply.470";
	"broadcast.430" -> "multiply.470";
	"p5.48" -> "add.471";
	"multiply.470" -> "add.471";
	"maximum.232" -> "transpose.492";
	"subtract.321" -> "dot.4";
	"transpose.492" -> "dot.4";
	"dot.4" -> "custom-call.47";
	"maximum.65" -> "transpose.481";
	"subtract.156" -> "dot.5";
	"transpose.481" -> "dot.5";
	"dot.5" -> "custom-call.48";
	"custom-call.47" -> "add.502";
	"custom-call.48" -> "add.502";
	"p0.1" -> "broadcast.475";
	"add.502" -> "multiply.503";
	"broadcast.475" -> "multiply.503";
	"p6.66" -> "add.504";
	"multiply.503" -> "add.504";
	"subtract.321" -> "reduce.537";
	"constant.531" -> "reduce.537";
	"AddComputation.533" -> "reduce.537";
	"reduce.537" -> "custom-call.49";
	"subtract.156" -> "reduce.520";
	"constant.514" -> "reduce.520";
	"AddComputation.516" -> "reduce.520";
	"reduce.520" -> "custom-call.50";
	"custom-call.49" -> "add.547";
	"custom-call.50" -> "add.547";
	"p0.1" -> "broadcast.508";
	"add.547" -> "multiply.548";
	"broadcast.508" -> "multiply.548";
	"p7.76" -> "add.549";
	"multiply.548" -> "add.549";
	"p8.109" -> "broadcast.553";
	"broadcast.553" -> "compare.556";
	"iota.5" -> "compare.556";
	"constant.551" -> "broadcast.558";
	"constant.550" -> "broadcast.557";
	"compare.556" -> "select.559";
	"broadcast.558" -> "select.559";
	"broadcast.557" -> "select.559";
	"constant.551" -> "broadcast.562";
	"select.559" -> "compare.563";
	"broadcast.562" -> "compare.563";
	"constant.550" -> "broadcast.564";
	"select.559" -> "negate.560";
	"negate.560" -> "multiply.561";
	"subtract.108" -> "multiply.561";
	"compare.563" -> "select.565";
	"broadcast.564" -> "select.565";
	"multiply.561" -> "select.565";
	"constant.566" -> "broadcast.567";
	"p8.109" -> "compare.568";
	"broadcast.567" -> "compare.568";
	"constant.569" -> "broadcast.12";
	"constant.571" -> "broadcast.13";
	"compare.568" -> "select.2";
	"broadcast.12" -> "select.2";
	"broadcast.13" -> "select.2";
	"select.2" -> "broadcast.14";
	"broadcast.14" -> "multiply.575";
	"select.559" -> "multiply.575";
	"select.565" -> "multiply.582";
	"multiply.575" -> "multiply.582";
	"multiply.582" -> "reduce.587";
	"constant.550" -> "reduce.587";
	"AddComputation.583" -> "reduce.587";
	"multiply.575" -> "reduce.581";
	"constant.576" -> "reduce.581";
	"AddComputation.577" -> "reduce.581";
	"reduce.587" -> "divide.588";
	"reduce.581" -> "divide.588";
	"add.348" -> "tuple.589";
	"add.393" -> "tuple.589";
	"add.426" -> "tuple.589";
	"add.471" -> "tuple.589";
	"add.504" -> "tuple.589";
	"add.549" -> "tuple.589";
	"p3.28" -> "tuple.589";
	"p8.109" -> "tuple.589";
	"subtract.108" -> "tuple.589";
	"divide.588" -> "tuple.589";
}