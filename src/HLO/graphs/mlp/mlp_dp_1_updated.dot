digraph HloModule {
	"p2.14" [label="p2.14 \n f32[120,784]"];
	"p3.23" [label="p3.23 \n f32[32,1,28,28]"];
	"reshape.24" [label="reshape.24 \n f32[32,784]"];
	"transpose.22" [label="transpose.22 \n f32[784,120]"];
	"dot.25" [label="dot.25 \n f32[32,120]"];
	"p1.6" [label="p1.6 \n f32[120]"];
	"broadcast.29" [label="broadcast.29 \n f32[32,120]"];
	"add.30" [label="add.30 \n f32[32,120]"];
	"constant.31" [label="constant.31 \n f32[] constant(0), metadata="];
	"broadcast.32" [label="broadcast.32 \n f32[32,120]"];
	"maximum.33" [label="maximum.33 \n f32[32,120]"];
	"constant.161" [label="constant.161 \n f32[] constant(0), metadata="];
	"broadcast.164" [label="broadcast.164 \n f32[32,120]"];
	"compare.165" [label="compare.165 \n pred[32,120]"];
	"p4.34" [label="p4.34 \n f32[84,120]"];
	"transpose.52" [label="transpose.52 \n f32[120,84]"];
	"dot.53" [label="dot.53 \n f32[32,84]"];
	"p5.44" [label="p5.44 \n f32[84]"];
	"broadcast.57" [label="broadcast.57 \n f32[32,84]"];
	"add.58" [label="add.58 \n f32[32,84]"];
	"constant.59" [label="constant.59 \n f32[] constant(0), metadata="];
	"broadcast.60" [label="broadcast.60 \n f32[32,84]"];
	"maximum.61" [label="maximum.61 \n f32[32,84]"];
	"constant.154" [label="constant.154 \n f32[] constant(0), metadata="];
	"broadcast.157" [label="broadcast.157 \n f32[32,84]"];
	"compare.158" [label="compare.158 \n pred[32,84]"];
	"p8.105" [label="p8.105 \n s64[32]"];
	"broadcast.111" [label="broadcast.111 \n s64[32,10]"];
	"iota.1" [label="iota.1 \n s64[32,10]"];
	"compare.114" [label="compare.114 \n pred[32,10]"];
	"constant.109" [label="constant.109 \n f32[] constant(1), metadata="];
	"broadcast.116" [label="broadcast.116 \n f32[32,10]"];
	"constant.108" [label="constant.108 \n f32[] constant(0), metadata="];
	"broadcast.115" [label="broadcast.115 \n f32[32,10]"];
	"select.117" [label="select.117 \n f32[32,10]"];
	"negate.118" [label="negate.118 \n f32[32,10]"];
	"constant.121" [label="constant.121 \n s64[] constant(-100), metadata="];
	"broadcast.122" [label="broadcast.122 \n s64[32]"];
	"compare.123" [label="compare.123 \n pred[32]"];
	"constant.124" [label="constant.124 \n f32[] constant(1), metadata="];
	"broadcast.1" [label="broadcast.1 \n f32[32]"];
	"constant.126" [label="constant.126 \n f32[] constant(0), metadata="];
	"broadcast.2" [label="broadcast.2 \n f32[32]"];
	"select.0" [label="select.0 \n f32[32]"];
	"broadcast.4" [label="broadcast.4 \n f32[32,10]"];
	"multiply.130" [label="multiply.130 \n f32[32,10]"];
	"multiply.140" [label="multiply.140 \n f32[32,10]"];
	"constant.131" [label="constant.131 \n f32[] constant(0), metadata="];
	"reduce.136" [label="reduce.136 \n f32[] reduce(f32[32,10]"];
	"compare.138" [label="compare.138 \n pred[] compare(f32[] %reduce.136, f32[] %constant.131), direction=NE, metadata="];
	"constant.137" [label="constant.137 \n f32[] constant(1), metadata="];
	"select.139" [label="select.139 \n f32[] select(pred[] %compare.138, f32[] %reduce.136, f32[] %constant.137), metadata="];
	"broadcast.141" [label="broadcast.141 \n f32[32,10]"];
	"divide.142" [label="divide.142 \n f32[32,10]"];
	"p6.62" [label="p6.62 \n f32[10,84]"];
	"transpose.80" [label="transpose.80 \n f32[84,10]"];
	"dot.81" [label="dot.81 \n f32[32,10]"];
	"p7.72" [label="p7.72 \n f32[10]"];
	"broadcast.85" [label="broadcast.85 \n f32[32,10]"];
	"add.86" [label="add.86 \n f32[32,10]"];
	"constant.87" [label="constant.87 \n f32[] constant(-inf), metadata="];
	"reduce.92" [label="reduce.92 \n f32[32]"];
	"broadcast.93" [label="broadcast.93 \n f32[32,10]"];
	"subtract.94" [label="subtract.94 \n f32[32,10]"];
	"exponential.95" [label="exponential.95 \n f32[32,10]"];
	"constant.96" [label="constant.96 \n f32[] constant(0), metadata="];
	"reduce.101" [label="reduce.101 \n f32[32]"];
	"log.102" [label="log.102 \n f32[32]"];
	"broadcast.103" [label="broadcast.103 \n f32[32,10]"];
	"subtract.104" [label="subtract.104 \n f32[32,10]"];
	"exponential.149" [label="exponential.149 \n f32[32,10]"];
	"constant.143" [label="constant.143 \n f32[] constant(0), metadata="];
	"reduce.148" [label="reduce.148 \n f32[32]"];
	"broadcast.150" [label="broadcast.150 \n f32[32,10]"];
	"multiply.151" [label="multiply.151 \n f32[32,10]"];
	"subtract.152" [label="subtract.152 \n f32[32,10]"];
	"dot.153" [label="dot.153 \n f32[32,84]"];
	"constant.155" [label="constant.155 \n f32[] constant(0), metadata="];
	"broadcast.156" [label="broadcast.156 \n f32[32,84]"];
	"select.159" [label="select.159 \n f32[32,84]"];
	"dot.160" [label="dot.160 \n f32[32,120]"];
	"constant.162" [label="constant.162 \n f32[] constant(0), metadata="];
	"broadcast.163" [label="broadcast.163 \n f32[32,120]"];
	"select.166" [label="select.166 \n f32[32,120]"];
	"reshape.167" [label="reshape.167 \n f32[32,784]"];
	"transpose.168" [label="transpose.168 \n f32[784,32]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"broadcast.5" [label="broadcast.5 \n f32[120,784]"];
	"multiply.178" [label="multiply.178 \n f32[120,784]"];
	"add.179" [label="add.179 \n f32[120,784]"];
	"constant.184" [label="constant.184 \n f32[] constant(0), metadata="];
	"reduce.190" [label="reduce.190 \n f32[120]"];
	"broadcast.183" [label="broadcast.183 \n f32[120]"];
	"multiply.200" [label="multiply.200 \n f32[120]"];
	"add.201" [label="add.201 \n f32[120]"];
	"transpose.206" [label="transpose.206 \n f32[120,32]"];
	"dot.1" [label="dot.1 \n f32[84,120]"];
	"broadcast.205" [label="broadcast.205 \n f32[84,120]"];
	"multiply.216" [label="multiply.216 \n f32[84,120]"];
	"add.217" [label="add.217 \n f32[84,120]"];
	"constant.222" [label="constant.222 \n f32[] constant(0), metadata="];
	"reduce.228" [label="reduce.228 \n f32[84]"];
	"broadcast.221" [label="broadcast.221 \n f32[84]"];
	"multiply.238" [label="multiply.238 \n f32[84]"];
	"add.239" [label="add.239 \n f32[84]"];
	"transpose.244" [label="transpose.244 \n f32[84,32]"];
	"dot.2" [label="dot.2 \n f32[10,84]"];
	"broadcast.243" [label="broadcast.243 \n f32[10,84]"];
	"multiply.254" [label="multiply.254 \n f32[10,84]"];
	"add.255" [label="add.255 \n f32[10,84]"];
	"constant.260" [label="constant.260 \n f32[] constant(0), metadata="];
	"reduce.266" [label="reduce.266 \n f32[10]"];
	"broadcast.259" [label="broadcast.259 \n f32[10]"];
	"multiply.276" [label="multiply.276 \n f32[10]"];
	"add.277" [label="add.277 \n f32[10]"];
	"broadcast.281" [label="broadcast.281 \n s64[32,10]"];
	"iota.3" [label="iota.3 \n s64[32,10]"];
	"compare.284" [label="compare.284 \n pred[32,10]"];
	"constant.279" [label="constant.279 \n f32[] constant(1), metadata="];
	"broadcast.286" [label="broadcast.286 \n f32[32,10]"];
	"constant.278" [label="constant.278 \n f32[] constant(0), metadata="];
	"broadcast.285" [label="broadcast.285 \n f32[32,10]"];
	"select.287" [label="select.287 \n f32[32,10]"];
	"broadcast.290" [label="broadcast.290 \n f32[32,10]"];
	"compare.291" [label="compare.291 \n pred[32,10]"];
	"broadcast.292" [label="broadcast.292 \n f32[32,10]"];
	"negate.288" [label="negate.288 \n f32[32,10]"];
	"multiply.289" [label="multiply.289 \n f32[32,10]"];
	"select.293" [label="select.293 \n f32[32,10]"];
	"constant.294" [label="constant.294 \n s64[] constant(-100), metadata="];
	"broadcast.295" [label="broadcast.295 \n s64[32]"];
	"compare.296" [label="compare.296 \n pred[32]"];
	"constant.297" [label="constant.297 \n f32[] constant(1), metadata="];
	"broadcast.6" [label="broadcast.6 \n f32[32]"];
	"constant.299" [label="constant.299 \n f32[] constant(0), metadata="];
	"broadcast.7" [label="broadcast.7 \n f32[32]"];
	"select.1" [label="select.1 \n f32[32]"];
	"broadcast.8" [label="broadcast.8 \n f32[32,10]"];
	"multiply.303" [label="multiply.303 \n f32[32,10]"];
	"multiply.310" [label="multiply.310 \n f32[32,10]"];
	"reduce.315" [label="reduce.315 \n f32[] reduce(f32[32,10]"];
	"constant.304" [label="constant.304 \n f32[] constant(0), metadata="];
	"reduce.309" [label="reduce.309 \n f32[] reduce(f32[32,10]"];
	"divide.316" [label="divide.316 \n f32[] divide(f32[] %reduce.315, f32[] %reduce.309), metadata="];
	"tuple.317" [label="tuple.317 \n (f32[120,784]"]; 
 	"p3.23" -> "reshape.24";
	"p2.14" -> "custom-call.13";
	"custom-call.13" -> "transpose.22";
	"reshape.24" -> "dot.25";
	"transpose.22" -> "dot.25";
	"p1.6" -> "custom-call.14";
	"custom-call.14" -> "broadcast.29";
	"dot.25" -> "add.30";
	"broadcast.29" -> "add.30";
	"constant.31" -> "broadcast.32";
	"add.30" -> "maximum.33";
	"broadcast.32" -> "maximum.33";
	"constant.161" -> "broadcast.164";
	"maximum.33" -> "compare.165";
	"broadcast.164" -> "compare.165";
	"p4.34" -> "custom-call.15";
	"custom-call.15" -> "transpose.52";
	"maximum.33" -> "dot.53";
	"transpose.52" -> "dot.53";
	"p5.44" -> "custom-call.16";
	"custom-call.16" -> "broadcast.57";
	"dot.53" -> "add.58";
	"broadcast.57" -> "add.58";
	"constant.59" -> "broadcast.60";
	"add.58" -> "maximum.61";
	"broadcast.60" -> "maximum.61";
	"constant.154" -> "broadcast.157";
	"maximum.61" -> "compare.158";
	"broadcast.157" -> "compare.158";
	"p8.105" -> "broadcast.111";
	"broadcast.111" -> "compare.114";
	"iota.1" -> "compare.114";
	"constant.109" -> "broadcast.116";
	"constant.108" -> "broadcast.115";
	"compare.114" -> "select.117";
	"broadcast.116" -> "select.117";
	"broadcast.115" -> "select.117";
	"select.117" -> "negate.118";
	"constant.121" -> "broadcast.122";
	"p8.105" -> "compare.123";
	"broadcast.122" -> "compare.123";
	"constant.124" -> "broadcast.1";
	"constant.126" -> "broadcast.2";
	"compare.123" -> "select.0";
	"broadcast.1" -> "select.0";
	"broadcast.2" -> "select.0";
	"select.0" -> "broadcast.4";
	"broadcast.4" -> "multiply.130";
	"select.117" -> "multiply.130";
	"negate.118" -> "multiply.140";
	"multiply.130" -> "multiply.140";
	"multiply.130" -> "reduce.136";
	"constant.131" -> "reduce.136";
	"AddComputation.132" -> "reduce.136";
	"reduce.136" -> "compare.138";
	"constant.131" -> "compare.138";
	"compare.138" -> "select.139";
	"reduce.136" -> "select.139";
	"constant.137" -> "select.139";
	"select.139" -> "broadcast.141";
	"multiply.140" -> "divide.142";
	"broadcast.141" -> "divide.142";
	"p6.62" -> "custom-call.18";
	"custom-call.18" -> "transpose.80";
	"maximum.61" -> "dot.81";
	"transpose.80" -> "dot.81";
	"p7.72" -> "custom-call.19";
	"custom-call.19" -> "broadcast.85";
	"dot.81" -> "add.86";
	"broadcast.85" -> "add.86";
	"add.86" -> "reduce.92";
	"constant.87" -> "reduce.92";
	"MaxComputation.88" -> "reduce.92";
	"reduce.92" -> "broadcast.93";
	"add.86" -> "subtract.94";
	"broadcast.93" -> "subtract.94";
	"subtract.94" -> "exponential.95";
	"exponential.95" -> "reduce.101";
	"constant.96" -> "reduce.101";
	"AddComputation.97" -> "reduce.101";
	"reduce.101" -> "log.102";
	"log.102" -> "broadcast.103";
	"subtract.94" -> "subtract.104";
	"broadcast.103" -> "subtract.104";
	"subtract.104" -> "exponential.149";
	"divide.142" -> "reduce.148";
	"constant.143" -> "reduce.148";
	"AddComputation.144" -> "reduce.148";
	"reduce.148" -> "broadcast.150";
	"exponential.149" -> "multiply.151";
	"broadcast.150" -> "multiply.151";
	"divide.142" -> "subtract.152";
	"multiply.151" -> "subtract.152";
	"subtract.152" -> "dot.153";
	"custom-call.18" -> "dot.153";
	"constant.155" -> "broadcast.156";
	"compare.158" -> "select.159";
	"dot.153" -> "select.159";
	"broadcast.156" -> "select.159";
	"select.159" -> "dot.160";
	"custom-call.15" -> "dot.160";
	"constant.162" -> "broadcast.163";
	"compare.165" -> "select.166";
	"dot.160" -> "select.166";
	"broadcast.163" -> "select.166";
	"p3.23" -> "reshape.167";
	"reshape.167" -> "transpose.168";
	"select.166" -> "dot";
	"transpose.168" -> "dot";
	"dot" -> "custom-call.20";
	"p0.1" -> "broadcast.5";
	"custom-call.20" -> "multiply.178";
	"broadcast.5" -> "multiply.178";
	"p2.14" -> "add.179";
	"multiply.178" -> "add.179";
	"select.166" -> "reduce.190";
	"constant.184" -> "reduce.190";
	"AddComputation.186" -> "reduce.190";
	"reduce.190" -> "custom-call.21";
	"p0.1" -> "broadcast.183";
	"custom-call.21" -> "multiply.200";
	"broadcast.183" -> "multiply.200";
	"p1.6" -> "add.201";
	"multiply.200" -> "add.201";
	"maximum.33" -> "transpose.206";
	"select.159" -> "dot.1";
	"transpose.206" -> "dot.1";
	"dot.1" -> "custom-call.22";
	"p0.1" -> "broadcast.205";
	"custom-call.22" -> "multiply.216";
	"broadcast.205" -> "multiply.216";
	"p4.34" -> "add.217";
	"multiply.216" -> "add.217";
	"select.159" -> "reduce.228";
	"constant.222" -> "reduce.228";
	"AddComputation.224" -> "reduce.228";
	"reduce.228" -> "custom-call.23";
	"p0.1" -> "broadcast.221";
	"custom-call.23" -> "multiply.238";
	"broadcast.221" -> "multiply.238";
	"p5.44" -> "add.239";
	"multiply.238" -> "add.239";
	"maximum.61" -> "transpose.244";
	"subtract.152" -> "dot.2";
	"transpose.244" -> "dot.2";
	"dot.2" -> "custom-call.24";
	"p0.1" -> "broadcast.243";
	"custom-call.24" -> "multiply.254";
	"broadcast.243" -> "multiply.254";
	"p6.62" -> "add.255";
	"multiply.254" -> "add.255";
	"subtract.152" -> "reduce.266";
	"constant.260" -> "reduce.266";
	"AddComputation.262" -> "reduce.266";
	"reduce.266" -> "custom-call.25";
	"p0.1" -> "broadcast.259";
	"custom-call.25" -> "multiply.276";
	"broadcast.259" -> "multiply.276";
	"p7.72" -> "add.277";
	"multiply.276" -> "add.277";
	"p8.105" -> "broadcast.281";
	"broadcast.281" -> "compare.284";
	"iota.3" -> "compare.284";
	"constant.279" -> "broadcast.286";
	"constant.278" -> "broadcast.285";
	"compare.284" -> "select.287";
	"broadcast.286" -> "select.287";
	"broadcast.285" -> "select.287";
	"constant.279" -> "broadcast.290";
	"select.287" -> "compare.291";
	"broadcast.290" -> "compare.291";
	"constant.278" -> "broadcast.292";
	"select.287" -> "negate.288";
	"negate.288" -> "multiply.289";
	"subtract.104" -> "multiply.289";
	"compare.291" -> "select.293";
	"broadcast.292" -> "select.293";
	"multiply.289" -> "select.293";
	"constant.294" -> "broadcast.295";
	"p8.105" -> "compare.296";
	"broadcast.295" -> "compare.296";
	"constant.297" -> "broadcast.6";
	"constant.299" -> "broadcast.7";
	"compare.296" -> "select.1";
	"broadcast.6" -> "select.1";
	"broadcast.7" -> "select.1";
	"select.1" -> "broadcast.8";
	"broadcast.8" -> "multiply.303";
	"select.287" -> "multiply.303";
	"select.293" -> "multiply.310";
	"multiply.303" -> "multiply.310";
	"multiply.310" -> "reduce.315";
	"constant.278" -> "reduce.315";
	"AddComputation.311" -> "reduce.315";
	"multiply.303" -> "reduce.309";
	"constant.304" -> "reduce.309";
	"AddComputation.305" -> "reduce.309";
	"reduce.315" -> "divide.316";
	"reduce.309" -> "divide.316";
	"add.179" -> "tuple.317";
	"add.201" -> "tuple.317";
	"add.217" -> "tuple.317";
	"add.239" -> "tuple.317";
	"add.255" -> "tuple.317";
	"add.277" -> "tuple.317";
	"reshape.24" -> "tuple.317";
	"subtract.104" -> "tuple.317";
	"divide.316" -> "tuple.317";
}