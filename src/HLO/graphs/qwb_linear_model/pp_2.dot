digraph HloModule {
	"p18.180" [label="p18.180 \n bf16[4,4]"];
	"p17.179" [label="p17.179 \n bf16[] parameter(17), frontend_attributes="];
	"broadcast.181" [label="broadcast.181 \n bf16[4,4]"];
	"multiply.182" [label="multiply.182 \n bf16[4,4]"];
	"p16.178" [label="p16.178 \n bf16[] parameter(16), frontend_attributes="];
	"broadcast.183" [label="broadcast.183 \n bf16[4,4]"];
	"multiply.185" [label="multiply.185 \n bf16[4,4]"];
	"subtract.186" [label="subtract.186 \n bf16[4,4]"];
	"p15.169" [label="p15.169 \n bf16[4,4]"];
	"p14.168" [label="p14.168 \n bf16[] parameter(14), frontend_attributes="];
	"broadcast.170" [label="broadcast.170 \n bf16[4,4]"];
	"multiply.171" [label="multiply.171 \n bf16[4,4]"];
	"p9.31" [label="p9.31 \n bf16[4]"];
	"p8.27" [label="p8.27 \n bf16[4]"];
	"p7.23" [label="p7.23 \n bf16[4,4]"];
	"p6.19" [label="p6.19 \n bf16[4,4]"];
	"p5.17" [label="p5.17 \n f32[] parameter(5), frontend_attributes="];
	"convert.34" [label="convert.34 \n bf16[] convert(f32[] %p5.17), metadata="];
	"constant.1" [label="constant.1 \n bf16[1]"];
	"p10.105" [label="p10.105 \n bf16[1]"];
	"multiply.94" [label="multiply.94 \n bf16[4,4]"];
	"constant.95" [label="constant.95 \n bf16[] constant(0), metadata="];
	"reduce.101" [label="reduce.101 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.102" [label="sqrt.102 \n bf16[] sqrt(bf16[] %reduce.101), metadata="];
	"multiply.104" [label="multiply.104 \n bf16[] multiply(bf16[] %sqrt.102, bf16[] %sqrt.102), metadata="];
	"add.107" [label="add.107 \n bf16[1]"];
	"multiply.81" [label="multiply.81 \n bf16[4,4]"];
	"constant.82" [label="constant.82 \n bf16[] constant(0), metadata="];
	"reduce.88" [label="reduce.88 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.89" [label="sqrt.89 \n bf16[] sqrt(bf16[] %reduce.88), metadata="];
	"multiply.91" [label="multiply.91 \n bf16[] multiply(bf16[] %sqrt.89, bf16[] %sqrt.89), metadata="];
	"reshape.1" [label="reshape.1 \n bf16[1]"];
	"add.109" [label="add.109 \n bf16[1]"];
	"multiply.68" [label="multiply.68 \n bf16[4]"];
	"constant.69" [label="constant.69 \n bf16[] constant(0), metadata="];
	"reduce.75" [label="reduce.75 \n bf16[] reduce(bf16[4]"];
	"sqrt.76" [label="sqrt.76 \n bf16[] sqrt(bf16[] %reduce.75), metadata="];
	"multiply.78" [label="multiply.78 \n bf16[] multiply(bf16[] %sqrt.76, bf16[] %sqrt.76), metadata="];
	"reshape.2" [label="reshape.2 \n bf16[1]"];
	"add.111" [label="add.111 \n bf16[1]"];
	"multiply.55" [label="multiply.55 \n bf16[4]"];
	"constant.56" [label="constant.56 \n bf16[] constant(0), metadata="];
	"reduce.62" [label="reduce.62 \n bf16[] reduce(bf16[4]"];
	"sqrt.63" [label="sqrt.63 \n bf16[] sqrt(bf16[] %reduce.62), metadata="];
	"multiply.65" [label="multiply.65 \n bf16[] multiply(bf16[] %sqrt.63, bf16[] %sqrt.63), metadata="];
	"reshape.3" [label="reshape.3 \n bf16[1]"];
	"add.113" [label="add.113 \n bf16[1]"];
	"constant.3" [label="constant.3 \n bf16[1]"];
	"power.128" [label="power.128 \n bf16[1]"];
	"p4.12" [label="p4.12 \n bf16[] parameter(4), frontend_attributes="];
	"reshape.10" [label="reshape.10 \n bf16[1]"];
	"add.130" [label="add.130 \n bf16[1]"];
	"divide.133" [label="divide.133 \n bf16[1]"];
	"constant.6" [label="constant.6 \n bf16[1]"];
	"compare.140" [label="compare.140 \n pred[1]"];
	"constant.8" [label="constant.8 \n bf16[1]"];
	"select.142" [label="select.142 \n bf16[1]"];
	"reshape.144" [label="reshape.144 \n bf16[] reshape(bf16[1]"];
	"broadcast.146" [label="broadcast.146 \n bf16[4,4]"];
	"multiply.147" [label="multiply.147 \n bf16[4,4]"];
	"p13.162" [label="p13.162 \n bf16[] parameter(13), frontend_attributes="];
	"broadcast.166" [label="broadcast.166 \n bf16[4,4]"];
	"multiply.167" [label="multiply.167 \n bf16[4,4]"];
	"add.172" [label="add.172 \n bf16[4,4]"];
	"p12.149" [label="p12.149 \n bf16[4,4]"];
	"p11.148" [label="p11.148 \n bf16[] parameter(11), frontend_attributes="];
	"broadcast.150" [label="broadcast.150 \n bf16[4,4]"];
	"multiply.151" [label="multiply.151 \n bf16[4,4]"];
	"multiply.153" [label="multiply.153 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"convert.152" [label="convert.152 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.154" [label="broadcast.154 \n bf16[4,4]"];
	"multiply.155" [label="multiply.155 \n bf16[4,4]"];
	"add.156" [label="add.156 \n bf16[4,4]"];
	"sqrt.157" [label="sqrt.157 \n bf16[4,4]"];
	"p2.5" [label="p2.5 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.158" [label="broadcast.158 \n bf16[4,4]"];
	"divide.159" [label="divide.159 \n bf16[4,4]"];
	"p1.3" [label="p1.3 \n bf16[] parameter(1), frontend_attributes="];
	"broadcast.160" [label="broadcast.160 \n bf16[4,4]"];
	"add.161" [label="add.161 \n bf16[4,4]"];
	"divide.188" [label="divide.188 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.187" [label="convert.187 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.189" [label="broadcast.189 \n bf16[4,4]"];
	"multiply.190" [label="multiply.190 \n bf16[4,4]"];
	"add.191" [label="add.191 \n bf16[4,4]"];
	"p21.236" [label="p21.236 \n bf16[4]"];
	"broadcast.237" [label="broadcast.237 \n bf16[4]"];
	"multiply.238" [label="multiply.238 \n bf16[4]"];
	"broadcast.1" [label="broadcast.1 \n bf16[4]"];
	"multiply.241" [label="multiply.241 \n bf16[4]"];
	"subtract.242" [label="subtract.242 \n bf16[4]"];
	"p20.226" [label="p20.226 \n bf16[4]"];
	"broadcast.227" [label="broadcast.227 \n bf16[4]"];
	"multiply.228" [label="multiply.228 \n bf16[4]"];
	"constant.15" [label="constant.15 \n bf16[1]"];
	"compare.201" [label="compare.201 \n pred[1]"];
	"constant.16" [label="constant.16 \n bf16[1]"];
	"select.203" [label="select.203 \n bf16[1]"];
	"reshape.205" [label="reshape.205 \n bf16[] reshape(bf16[1]"];
	"broadcast.206" [label="broadcast.206 \n bf16[4]"];
	"multiply.207" [label="multiply.207 \n bf16[4]"];
	"broadcast.224" [label="broadcast.224 \n bf16[4]"];
	"multiply.225" [label="multiply.225 \n bf16[4]"];
	"add.229" [label="add.229 \n bf16[4]"];
	"p19.208" [label="p19.208 \n bf16[4]"];
	"broadcast.209" [label="broadcast.209 \n bf16[4]"];
	"multiply.210" [label="multiply.210 \n bf16[4]"];
	"multiply.212" [label="multiply.212 \n bf16[4]"];
	"convert.211" [label="convert.211 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.213" [label="broadcast.213 \n bf16[4]"];
	"multiply.214" [label="multiply.214 \n bf16[4]"];
	"add.215" [label="add.215 \n bf16[4]"];
	"sqrt.216" [label="sqrt.216 \n bf16[4]"];
	"broadcast.217" [label="broadcast.217 \n bf16[4]"];
	"divide.218" [label="divide.218 \n bf16[4]"];
	"broadcast.219" [label="broadcast.219 \n bf16[4]"];
	"add.220" [label="add.220 \n bf16[4]"];
	"divide.244" [label="divide.244 \n bf16[4]"];
	"convert.243" [label="convert.243 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.245" [label="broadcast.245 \n bf16[4]"];
	"multiply.246" [label="multiply.246 \n bf16[4]"];
	"add.247" [label="add.247 \n bf16[4]"];
	"p24.292" [label="p24.292 \n bf16[4,4]"];
	"broadcast.293" [label="broadcast.293 \n bf16[4,4]"];
	"multiply.294" [label="multiply.294 \n bf16[4,4]"];
	"broadcast.295" [label="broadcast.295 \n bf16[4,4]"];
	"multiply.297" [label="multiply.297 \n bf16[4,4]"];
	"subtract.298" [label="subtract.298 \n bf16[4,4]"];
	"p23.283" [label="p23.283 \n bf16[4,4]"];
	"broadcast.284" [label="broadcast.284 \n bf16[4,4]"];
	"multiply.285" [label="multiply.285 \n bf16[4,4]"];
	"constant.19" [label="constant.19 \n bf16[1]"];
	"compare.257" [label="compare.257 \n pred[1]"];
	"constant.20" [label="constant.20 \n bf16[1]"];
	"select.259" [label="select.259 \n bf16[1]"];
	"reshape.261" [label="reshape.261 \n bf16[] reshape(bf16[1]"];
	"broadcast.263" [label="broadcast.263 \n bf16[4,4]"];
	"multiply.264" [label="multiply.264 \n bf16[4,4]"];
	"broadcast.281" [label="broadcast.281 \n bf16[4,4]"];
	"multiply.282" [label="multiply.282 \n bf16[4,4]"];
	"add.286" [label="add.286 \n bf16[4,4]"];
	"p22.265" [label="p22.265 \n bf16[4,4]"];
	"broadcast.266" [label="broadcast.266 \n bf16[4,4]"];
	"multiply.267" [label="multiply.267 \n bf16[4,4]"];
	"multiply.269" [label="multiply.269 \n bf16[4,4]"];
	"convert.268" [label="convert.268 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.270" [label="broadcast.270 \n bf16[4,4]"];
	"multiply.271" [label="multiply.271 \n bf16[4,4]"];
	"add.272" [label="add.272 \n bf16[4,4]"];
	"sqrt.273" [label="sqrt.273 \n bf16[4,4]"];
	"broadcast.274" [label="broadcast.274 \n bf16[4,4]"];
	"divide.275" [label="divide.275 \n bf16[4,4]"];
	"broadcast.276" [label="broadcast.276 \n bf16[4,4]"];
	"add.277" [label="add.277 \n bf16[4,4]"];
	"divide.300" [label="divide.300 \n bf16[4,4]"];
	"convert.299" [label="convert.299 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.301" [label="broadcast.301 \n bf16[4,4]"];
	"multiply.302" [label="multiply.302 \n bf16[4,4]"];
	"add.303" [label="add.303 \n bf16[4,4]"];
	"p27.348" [label="p27.348 \n bf16[4]"];
	"broadcast.349" [label="broadcast.349 \n bf16[4]"];
	"multiply.350" [label="multiply.350 \n bf16[4]"];
	"broadcast.3" [label="broadcast.3 \n bf16[4]"];
	"multiply.353" [label="multiply.353 \n bf16[4]"];
	"subtract.354" [label="subtract.354 \n bf16[4]"];
	"p26.338" [label="p26.338 \n bf16[4]"];
	"broadcast.339" [label="broadcast.339 \n bf16[4]"];
	"multiply.340" [label="multiply.340 \n bf16[4]"];
	"constant.25" [label="constant.25 \n bf16[1]"];
	"compare.313" [label="compare.313 \n pred[1]"];
	"constant.27" [label="constant.27 \n bf16[1]"];
	"select.315" [label="select.315 \n bf16[1]"];
	"reshape.317" [label="reshape.317 \n bf16[] reshape(bf16[1]"];
	"broadcast.318" [label="broadcast.318 \n bf16[4]"];
	"multiply.319" [label="multiply.319 \n bf16[4]"];
	"broadcast.336" [label="broadcast.336 \n bf16[4]"];
	"multiply.337" [label="multiply.337 \n bf16[4]"];
	"add.341" [label="add.341 \n bf16[4]"];
	"p25.320" [label="p25.320 \n bf16[4]"];
	"broadcast.321" [label="broadcast.321 \n bf16[4]"];
	"multiply.322" [label="multiply.322 \n bf16[4]"];
	"multiply.324" [label="multiply.324 \n bf16[4]"];
	"convert.323" [label="convert.323 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.325" [label="broadcast.325 \n bf16[4]"];
	"multiply.326" [label="multiply.326 \n bf16[4]"];
	"add.327" [label="add.327 \n bf16[4]"];
	"sqrt.328" [label="sqrt.328 \n bf16[4]"];
	"broadcast.329" [label="broadcast.329 \n bf16[4]"];
	"divide.330" [label="divide.330 \n bf16[4]"];
	"broadcast.331" [label="broadcast.331 \n bf16[4]"];
	"add.332" [label="add.332 \n bf16[4]"];
	"divide.356" [label="divide.356 \n bf16[4]"];
	"convert.355" [label="convert.355 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.357" [label="broadcast.357 \n bf16[4]"];
	"multiply.358" [label="multiply.358 \n bf16[4]"];
	"add.359" [label="add.359 \n bf16[4]"];
	"tuple.360" [label="tuple.360 \n (bf16[4,4]"]; 
 	"p17.179" -> "broadcast.181";
	"p18.180" -> "multiply.182";
	"broadcast.181" -> "multiply.182";
	"p16.178" -> "broadcast.183";
	"multiply.182" -> "multiply.185";
	"broadcast.183" -> "multiply.185";
	"p18.180" -> "subtract.186";
	"multiply.185" -> "subtract.186";
	"p14.168" -> "broadcast.170";
	"p15.169" -> "multiply.171";
	"broadcast.170" -> "multiply.171";
	"p5.17" -> "convert.34";
	"p9.31" -> "all-reduce.45";
	"p8.27" -> "all-reduce.45";
	"p7.23" -> "all-reduce.45";
	"p6.19" -> "all-reduce.45";
	"convert.34" -> "all-reduce.45";
	"AddComputation.41" -> "all-reduce.45";
	"all-reduce.45" -> "get-tuple-element.49";
	"get-tuple-element.49" -> "multiply.94";
	"get-tuple-element.49" -> "multiply.94";
	"multiply.94" -> "reduce.101";
	"constant.95" -> "reduce.101";
	"AddComputation.97" -> "reduce.101";
	"reduce.101" -> "sqrt.102";
	"sqrt.102" -> "multiply.104";
	"sqrt.102" -> "multiply.104";
	"multiply.104" -> "reshape";
	"p10.105" -> "add.107";
	"reshape" -> "add.107";
	"all-reduce.45" -> "get-tuple-element.48";
	"get-tuple-element.48" -> "multiply.81";
	"get-tuple-element.48" -> "multiply.81";
	"multiply.81" -> "reduce.88";
	"constant.82" -> "reduce.88";
	"AddComputation.84" -> "reduce.88";
	"reduce.88" -> "sqrt.89";
	"sqrt.89" -> "multiply.91";
	"sqrt.89" -> "multiply.91";
	"multiply.91" -> "reshape.1";
	"add.107" -> "add.109";
	"reshape.1" -> "add.109";
	"all-reduce.45" -> "get-tuple-element.47";
	"get-tuple-element.47" -> "multiply.68";
	"get-tuple-element.47" -> "multiply.68";
	"multiply.68" -> "reduce.75";
	"constant.69" -> "reduce.75";
	"AddComputation.71" -> "reduce.75";
	"reduce.75" -> "sqrt.76";
	"sqrt.76" -> "multiply.78";
	"sqrt.76" -> "multiply.78";
	"multiply.78" -> "reshape.2";
	"add.109" -> "add.111";
	"reshape.2" -> "add.111";
	"all-reduce.45" -> "get-tuple-element.46";
	"get-tuple-element.46" -> "multiply.55";
	"get-tuple-element.46" -> "multiply.55";
	"multiply.55" -> "reduce.62";
	"constant.56" -> "reduce.62";
	"AddComputation.58" -> "reduce.62";
	"reduce.62" -> "sqrt.63";
	"sqrt.63" -> "multiply.65";
	"sqrt.63" -> "multiply.65";
	"multiply.65" -> "reshape.3";
	"add.111" -> "add.113";
	"reshape.3" -> "add.113";
	"all-reduce.45" -> "get-tuple-element.119";
	"add.113" -> "all-reduce.124";
	"get-tuple-element.119" -> "all-reduce.124";
	"AddComputation.120" -> "all-reduce.124";
	"all-reduce.124" -> "get-tuple-element.125";
	"get-tuple-element.125" -> "power.128";
	"constant.3" -> "power.128";
	"p4.12" -> "reshape.10";
	"power.128" -> "add.130";
	"reshape.10" -> "add.130";
	"constant.1" -> "divide.133";
	"add.130" -> "divide.133";
	"divide.133" -> "compare.140";
	"constant.6" -> "compare.140";
	"compare.140" -> "select.142";
	"divide.133" -> "select.142";
	"constant.8" -> "select.142";
	"select.142" -> "reshape.144";
	"reshape.144" -> "broadcast.146";
	"get-tuple-element.49" -> "multiply.147";
	"broadcast.146" -> "multiply.147";
	"p13.162" -> "broadcast.166";
	"multiply.147" -> "multiply.167";
	"broadcast.166" -> "multiply.167";
	"multiply.171" -> "add.172";
	"multiply.167" -> "add.172";
	"p11.148" -> "broadcast.150";
	"p12.149" -> "multiply.151";
	"broadcast.150" -> "multiply.151";
	"multiply.147" -> "multiply.153";
	"multiply.147" -> "multiply.153";
	"p3.6" -> "convert.152";
	"convert.152" -> "broadcast.154";
	"multiply.153" -> "multiply.155";
	"broadcast.154" -> "multiply.155";
	"multiply.151" -> "add.156";
	"multiply.155" -> "add.156";
	"add.156" -> "sqrt.157";
	"p2.5" -> "broadcast.158";
	"sqrt.157" -> "divide.159";
	"broadcast.158" -> "divide.159";
	"p1.3" -> "broadcast.160";
	"divide.159" -> "add.161";
	"broadcast.160" -> "add.161";
	"add.172" -> "divide.188";
	"add.161" -> "divide.188";
	"p0.1" -> "convert.187";
	"convert.187" -> "broadcast.189";
	"divide.188" -> "multiply.190";
	"broadcast.189" -> "multiply.190";
	"subtract.186" -> "add.191";
	"multiply.190" -> "add.191";
	"p17.179" -> "broadcast.237";
	"p21.236" -> "multiply.238";
	"broadcast.237" -> "multiply.238";
	"constant.12" -> "broadcast.1";
	"multiply.238" -> "multiply.241";
	"broadcast.1" -> "multiply.241";
	"p21.236" -> "subtract.242";
	"multiply.241" -> "subtract.242";
	"p14.168" -> "broadcast.227";
	"p20.226" -> "multiply.228";
	"broadcast.227" -> "multiply.228";
	"divide.133" -> "compare.201";
	"constant.15" -> "compare.201";
	"compare.201" -> "select.203";
	"divide.133" -> "select.203";
	"constant.16" -> "select.203";
	"select.203" -> "reshape.205";
	"reshape.205" -> "broadcast.206";
	"get-tuple-element.47" -> "multiply.207";
	"broadcast.206" -> "multiply.207";
	"p13.162" -> "broadcast.224";
	"multiply.207" -> "multiply.225";
	"broadcast.224" -> "multiply.225";
	"multiply.228" -> "add.229";
	"multiply.225" -> "add.229";
	"p11.148" -> "broadcast.209";
	"p19.208" -> "multiply.210";
	"broadcast.209" -> "multiply.210";
	"multiply.207" -> "multiply.212";
	"multiply.207" -> "multiply.212";
	"p3.6" -> "convert.211";
	"convert.211" -> "broadcast.213";
	"multiply.212" -> "multiply.214";
	"broadcast.213" -> "multiply.214";
	"multiply.210" -> "add.215";
	"multiply.214" -> "add.215";
	"add.215" -> "sqrt.216";
	"p2.5" -> "broadcast.217";
	"sqrt.216" -> "divide.218";
	"broadcast.217" -> "divide.218";
	"p1.3" -> "broadcast.219";
	"divide.218" -> "add.220";
	"broadcast.219" -> "add.220";
	"add.229" -> "divide.244";
	"add.220" -> "divide.244";
	"p0.1" -> "convert.243";
	"convert.243" -> "broadcast.245";
	"divide.244" -> "multiply.246";
	"broadcast.245" -> "multiply.246";
	"subtract.242" -> "add.247";
	"multiply.246" -> "add.247";
	"p17.179" -> "broadcast.293";
	"p24.292" -> "multiply.294";
	"broadcast.293" -> "multiply.294";
	"p16.178" -> "broadcast.295";
	"multiply.294" -> "multiply.297";
	"broadcast.295" -> "multiply.297";
	"p24.292" -> "subtract.298";
	"multiply.297" -> "subtract.298";
	"p14.168" -> "broadcast.284";
	"p23.283" -> "multiply.285";
	"broadcast.284" -> "multiply.285";
	"divide.133" -> "compare.257";
	"constant.19" -> "compare.257";
	"compare.257" -> "select.259";
	"divide.133" -> "select.259";
	"constant.20" -> "select.259";
	"select.259" -> "reshape.261";
	"reshape.261" -> "broadcast.263";
	"get-tuple-element.48" -> "multiply.264";
	"broadcast.263" -> "multiply.264";
	"p13.162" -> "broadcast.281";
	"multiply.264" -> "multiply.282";
	"broadcast.281" -> "multiply.282";
	"multiply.285" -> "add.286";
	"multiply.282" -> "add.286";
	"p11.148" -> "broadcast.266";
	"p22.265" -> "multiply.267";
	"broadcast.266" -> "multiply.267";
	"multiply.264" -> "multiply.269";
	"multiply.264" -> "multiply.269";
	"p3.6" -> "convert.268";
	"convert.268" -> "broadcast.270";
	"multiply.269" -> "multiply.271";
	"broadcast.270" -> "multiply.271";
	"multiply.267" -> "add.272";
	"multiply.271" -> "add.272";
	"add.272" -> "sqrt.273";
	"p2.5" -> "broadcast.274";
	"sqrt.273" -> "divide.275";
	"broadcast.274" -> "divide.275";
	"p1.3" -> "broadcast.276";
	"divide.275" -> "add.277";
	"broadcast.276" -> "add.277";
	"add.286" -> "divide.300";
	"add.277" -> "divide.300";
	"p0.1" -> "convert.299";
	"convert.299" -> "broadcast.301";
	"divide.300" -> "multiply.302";
	"broadcast.301" -> "multiply.302";
	"subtract.298" -> "add.303";
	"multiply.302" -> "add.303";
	"p17.179" -> "broadcast.349";
	"p27.348" -> "multiply.350";
	"broadcast.349" -> "multiply.350";
	"constant.23" -> "broadcast.3";
	"multiply.350" -> "multiply.353";
	"broadcast.3" -> "multiply.353";
	"p27.348" -> "subtract.354";
	"multiply.353" -> "subtract.354";
	"p14.168" -> "broadcast.339";
	"p26.338" -> "multiply.340";
	"broadcast.339" -> "multiply.340";
	"divide.133" -> "compare.313";
	"constant.25" -> "compare.313";
	"compare.313" -> "select.315";
	"divide.133" -> "select.315";
	"constant.27" -> "select.315";
	"select.315" -> "reshape.317";
	"reshape.317" -> "broadcast.318";
	"get-tuple-element.46" -> "multiply.319";
	"broadcast.318" -> "multiply.319";
	"p13.162" -> "broadcast.336";
	"multiply.319" -> "multiply.337";
	"broadcast.336" -> "multiply.337";
	"multiply.340" -> "add.341";
	"multiply.337" -> "add.341";
	"p11.148" -> "broadcast.321";
	"p25.320" -> "multiply.322";
	"broadcast.321" -> "multiply.322";
	"multiply.319" -> "multiply.324";
	"multiply.319" -> "multiply.324";
	"p3.6" -> "convert.323";
	"convert.323" -> "broadcast.325";
	"multiply.324" -> "multiply.326";
	"broadcast.325" -> "multiply.326";
	"multiply.322" -> "add.327";
	"multiply.326" -> "add.327";
	"add.327" -> "sqrt.328";
	"p2.5" -> "broadcast.329";
	"sqrt.328" -> "divide.330";
	"broadcast.329" -> "divide.330";
	"p1.3" -> "broadcast.331";
	"divide.330" -> "add.332";
	"broadcast.331" -> "add.332";
	"add.341" -> "divide.356";
	"add.332" -> "divide.356";
	"p0.1" -> "convert.355";
	"convert.355" -> "broadcast.357";
	"divide.356" -> "multiply.358";
	"broadcast.357" -> "multiply.358";
	"subtract.354" -> "add.359";
	"multiply.358" -> "add.359";
	"add.191" -> "tuple.360";
	"add.247" -> "tuple.360";
	"add.303" -> "tuple.360";
	"add.359" -> "tuple.360";
	"multiply.319" -> "tuple.360";
	"multiply.264" -> "tuple.360";
	"multiply.207" -> "tuple.360";
	"multiply.147" -> "tuple.360";
	"add.172" -> "tuple.360";
	"add.156" -> "tuple.360";
	"add.286" -> "tuple.360";
	"add.272" -> "tuple.360";
	"add.229" -> "tuple.360";
	"add.215" -> "tuple.360";
	"add.341" -> "tuple.360";
	"add.327" -> "tuple.360";
	"power.128" -> "tuple.360";
}