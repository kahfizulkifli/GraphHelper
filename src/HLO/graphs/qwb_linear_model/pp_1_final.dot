digraph HloModule {
	"p15.271" [label="p15.271 \n bf16[4,4]"];
	"p22.514" [label="p22.514 \n bf16[] parameter(22), frontend_attributes="];
	"broadcast.515" [label="broadcast.515 \n bf16[4,4]"];
	"multiply.516" [label="multiply.516 \n bf16[4,4]"];
	"p21.513" [label="p21.513 \n bf16[] parameter(21), frontend_attributes="];
	"broadcast.517" [label="broadcast.517 \n bf16[4,4]"];
	"multiply.519" [label="multiply.519 \n bf16[4,4]"];
	"subtract.520" [label="subtract.520 \n bf16[4,4]"];
	"p20.499" [label="p20.499 \n bf16[] parameter(20), frontend_attributes="];
	"multiply.0" [label="multiply.0 \n bf16[] multiply(bf16[] %constant.1, bf16[] %p20.499), metadata="];
	"broadcast.2" [label="broadcast.2 \n bf16[4,4]"];
	"p6.22" [label="p6.22 \n bf16[] parameter(6), frontend_attributes="];
	"p5.21" [label="p5.21 \n bf16[] parameter(5), frontend_attributes="];
	"divide.1" [label="divide.1 \n bf16[] divide(bf16[] %p6.22, bf16[] %p5.21), metadata="];
	"broadcast.124" [label="broadcast.124 \n bf16[1,4]"];
	"p7.64" [label="p7.64 \n bf16[1,4]"];
	"multiply.44" [label="multiply.44 \n bf16[1,4]"];
	"reshape.304" [label="reshape.304 \n bf16[4]"];
	"broadcast.12" [label="broadcast.12 \n bf16[4,4]"];
	"p8.107" [label="p8.107 \n bf16[4,4]"];
	"dot.117" [label="dot.117 \n bf16[4,4]"];
	"p9.150" [label="p9.150 \n bf16[4,4]"];
	"dot.160" [label="dot.160 \n bf16[4,4]"];
	"p10.193" [label="p10.193 \n bf16[4,4]"];
	"dot.203" [label="dot.203 \n bf16[4,4]"];
	"p16.280" [label="p16.280 \n bf16[4,4]"];
	"transpose.409" [label="transpose.409 \n bf16[4,4]"];
	"dot.1" [label="dot.1 \n bf16[4,4]"];
	"constant.3" [label="constant.3 \n bf16[1]"];
	"p17.432" [label="p17.432 \n bf16[1]"];
	"multiply.421" [label="multiply.421 \n bf16[4,4]"];
	"constant.422" [label="constant.422 \n bf16[] constant(0), metadata="];
	"reduce.428" [label="reduce.428 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.429" [label="sqrt.429 \n bf16[] sqrt(bf16[] %reduce.428), metadata="];
	"multiply.431" [label="multiply.431 \n bf16[] multiply(bf16[] %sqrt.429, bf16[] %sqrt.429), metadata="];
	"reshape.13" [label="reshape.13 \n bf16[1]"];
	"add.434" [label="add.434 \n bf16[1]"];
	"transpose.279" [label="transpose.279 \n bf16[4,4]"];
	"dot.281" [label="dot.281 \n bf16[4,4]"];
	"p14.263" [label="p14.263 \n bf16[4]"];
	"broadcast.285" [label="broadcast.285 \n bf16[4,4]"];
	"add.286" [label="add.286 \n bf16[4,4]"];
	"transpose.383" [label="transpose.383 \n bf16[4,4]"];
	"dot.2" [label="dot.2 \n bf16[4,4]"];
	"multiply.395" [label="multiply.395 \n bf16[4,4]"];
	"constant.396" [label="constant.396 \n bf16[] constant(0), metadata="];
	"reduce.402" [label="reduce.402 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.403" [label="sqrt.403 \n bf16[] sqrt(bf16[] %reduce.402), metadata="];
	"multiply.405" [label="multiply.405 \n bf16[] multiply(bf16[] %sqrt.403, bf16[] %sqrt.403), metadata="];
	"reshape.17" [label="reshape.17 \n bf16[1]"];
	"add.436" [label="add.436 \n bf16[1]"];
	"transpose.262" [label="transpose.262 \n bf16[4,4]"];
	"dot.287" [label="dot.287 \n bf16[4,4]"];
	"p13.254" [label="p13.254 \n bf16[4]"];
	"broadcast.291" [label="broadcast.291 \n bf16[4,4]"];
	"add.292" [label="add.292 \n bf16[4,4]"];
	"transpose.357" [label="transpose.357 \n bf16[4,4]"];
	"dot.3" [label="dot.3 \n bf16[4,4]"];
	"multiply.369" [label="multiply.369 \n bf16[4,4]"];
	"constant.370" [label="constant.370 \n bf16[] constant(0), metadata="];
	"reduce.376" [label="reduce.376 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.377" [label="sqrt.377 \n bf16[] sqrt(bf16[] %reduce.376), metadata="];
	"multiply.379" [label="multiply.379 \n bf16[] multiply(bf16[] %sqrt.377, bf16[] %sqrt.377), metadata="];
	"reshape.20" [label="reshape.20 \n bf16[1]"];
	"add.438" [label="add.438 \n bf16[1]"];
	"transpose.253" [label="transpose.253 \n bf16[4,4]"];
	"dot.293" [label="dot.293 \n bf16[4,4]"];
	"p12.245" [label="p12.245 \n bf16[4]"];
	"broadcast.297" [label="broadcast.297 \n bf16[4,4]"];
	"add.298" [label="add.298 \n bf16[4,4]"];
	"transpose.331" [label="transpose.331 \n bf16[4,4]"];
	"dot.4" [label="dot.4 \n bf16[4,4]"];
	"multiply.343" [label="multiply.343 \n bf16[4,4]"];
	"constant.344" [label="constant.344 \n bf16[] constant(0), metadata="];
	"reduce.350" [label="reduce.350 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.351" [label="sqrt.351 \n bf16[] sqrt(bf16[] %reduce.350), metadata="];
	"multiply.353" [label="multiply.353 \n bf16[] multiply(bf16[] %sqrt.351, bf16[] %sqrt.351), metadata="];
	"reshape.30" [label="reshape.30 \n bf16[1]"];
	"add.440" [label="add.440 \n bf16[1]"];
	"transpose.244" [label="transpose.244 \n bf16[4,4]"];
	"dot.299" [label="dot.299 \n bf16[4,4]"];
	"p11.236" [label="p11.236 \n bf16[4]"];
	"broadcast.303" [label="broadcast.303 \n bf16[4,4]"];
	"add.304" [label="add.304 \n bf16[4,4]"];
	"broadcast.126" [label="broadcast.126 \n bf16[4,4]"];
	"multiply.47" [label="multiply.47 \n bf16[4,4]"];
	"convert.2" [label="convert.2 \n f32[4,4]"];
	"convert.1" [label="convert.1 \n bf16[4]"];
	"reshape.35" [label="reshape.35 \n bf16[1,4]"];
	"multiply.317" [label="multiply.317 \n bf16[1,4]"];
	"constant.318" [label="constant.318 \n bf16[] constant(0), metadata="];
	"reduce.324" [label="reduce.324 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.325" [label="sqrt.325 \n bf16[] sqrt(bf16[] %reduce.324), metadata="];
	"multiply.327" [label="multiply.327 \n bf16[] multiply(bf16[] %sqrt.325, bf16[] %sqrt.325), metadata="];
	"reshape.36" [label="reshape.36 \n bf16[1]"];
	"add.442" [label="add.442 \n bf16[1]"];
	"constant.204" [label="constant.204 \n bf16[] constant(0), metadata="];
	"reduce.210" [label="reduce.210 \n bf16[4]"];
	"multiply.222" [label="multiply.222 \n bf16[4]"];
	"constant.223" [label="constant.223 \n bf16[] constant(0), metadata="];
	"reduce.229" [label="reduce.229 \n bf16[] reduce(bf16[4]"];
	"sqrt.230" [label="sqrt.230 \n bf16[] sqrt(bf16[] %reduce.229), metadata="];
	"multiply.232" [label="multiply.232 \n bf16[] multiply(bf16[] %sqrt.230, bf16[] %sqrt.230), metadata="];
	"reshape.38" [label="reshape.38 \n bf16[1]"];
	"add.444" [label="add.444 \n bf16[1]"];
	"constant.161" [label="constant.161 \n bf16[] constant(0), metadata="];
	"reduce.167" [label="reduce.167 \n bf16[4]"];
	"multiply.179" [label="multiply.179 \n bf16[4]"];
	"constant.180" [label="constant.180 \n bf16[] constant(0), metadata="];
	"reduce.186" [label="reduce.186 \n bf16[] reduce(bf16[4]"];
	"sqrt.187" [label="sqrt.187 \n bf16[] sqrt(bf16[] %reduce.186), metadata="];
	"multiply.189" [label="multiply.189 \n bf16[] multiply(bf16[] %sqrt.187, bf16[] %sqrt.187), metadata="];
	"reshape.42" [label="reshape.42 \n bf16[1]"];
	"add.446" [label="add.446 \n bf16[1]"];
	"constant.118" [label="constant.118 \n bf16[] constant(0), metadata="];
	"reduce.124" [label="reduce.124 \n bf16[4]"];
	"multiply.136" [label="multiply.136 \n bf16[4]"];
	"constant.137" [label="constant.137 \n bf16[] constant(0), metadata="];
	"reduce.143" [label="reduce.143 \n bf16[] reduce(bf16[4]"];
	"sqrt.144" [label="sqrt.144 \n bf16[] sqrt(bf16[] %reduce.143), metadata="];
	"multiply.146" [label="multiply.146 \n bf16[] multiply(bf16[] %sqrt.144, bf16[] %sqrt.144), metadata="];
	"reshape.44" [label="reshape.44 \n bf16[1]"];
	"add.448" [label="add.448 \n bf16[1]"];
	"constant.75" [label="constant.75 \n bf16[] constant(0), metadata="];
	"reduce.81" [label="reduce.81 \n bf16[4]"];
	"multiply.93" [label="multiply.93 \n bf16[4]"];
	"constant.94" [label="constant.94 \n bf16[] constant(0), metadata="];
	"reduce.100" [label="reduce.100 \n bf16[] reduce(bf16[4]"];
	"sqrt.101" [label="sqrt.101 \n bf16[] sqrt(bf16[] %reduce.100), metadata="];
	"multiply.103" [label="multiply.103 \n bf16[] multiply(bf16[] %sqrt.101, bf16[] %sqrt.101), metadata="];
	"reshape.46" [label="reshape.46 \n bf16[1]"];
	"add.450" [label="add.450 \n bf16[1]"];
	"broadcast.4" [label="broadcast.4 \n bf16[4,1]"];
	"constant.32" [label="constant.32 \n bf16[] constant(0), metadata="];
	"reduce.38" [label="reduce.38 \n bf16[1]"];
	"multiply.48" [label="multiply.48 \n bf16[1]"];
	"add.452" [label="add.452 \n bf16[1]"];
	"constant.6" [label="constant.6 \n bf16[1]"];
	"power.455" [label="power.455 \n bf16[1]"];
	"p4.12" [label="p4.12 \n bf16[] parameter(4), frontend_attributes="];
	"reshape.53" [label="reshape.53 \n bf16[1]"];
	"add.457" [label="add.457 \n bf16[1]"];
	"divide.460" [label="divide.460 \n bf16[1]"];
	"constant.12" [label="constant.12 \n bf16[1]"];
	"compare.467" [label="compare.467 \n pred[1]"];
	"constant.13" [label="constant.13 \n bf16[1]"];
	"select.469" [label="select.469 \n bf16[1]"];
	"reshape.471" [label="reshape.471 \n bf16[] reshape(bf16[1]"];
	"broadcast.473" [label="broadcast.473 \n bf16[4,4]"];
	"multiply.474" [label="multiply.474 \n bf16[4,4]"];
	"p19.493" [label="p19.493 \n bf16[] parameter(19), frontend_attributes="];
	"broadcast.497" [label="broadcast.497 \n bf16[4,4]"];
	"multiply.498" [label="multiply.498 \n bf16[4,4]"];
	"add.507" [label="add.507 \n bf16[4,4]"];
	"p18.475" [label="p18.475 \n bf16[] parameter(18), frontend_attributes="];
	"multiply.15" [label="multiply.15 \n bf16[] multiply(bf16[] %constant.15, bf16[] %p18.475), metadata="];
	"broadcast.17" [label="broadcast.17 \n bf16[4,4]"];
	"multiply.484" [label="multiply.484 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"convert.483" [label="convert.483 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.485" [label="broadcast.485 \n bf16[4,4]"];
	"multiply.486" [label="multiply.486 \n bf16[4,4]"];
	"add.487" [label="add.487 \n bf16[4,4]"];
	"sqrt.488" [label="sqrt.488 \n bf16[4,4]"];
	"p2.5" [label="p2.5 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.489" [label="broadcast.489 \n bf16[4,4]"];
	"divide.490" [label="divide.490 \n bf16[4,4]"];
	"p1.3" [label="p1.3 \n bf16[] parameter(1), frontend_attributes="];
	"broadcast.491" [label="broadcast.491 \n bf16[4,4]"];
	"add.492" [label="add.492 \n bf16[4,4]"];
	"divide.522" [label="divide.522 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.521" [label="convert.521 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.523" [label="broadcast.523 \n bf16[4,4]"];
	"multiply.524" [label="multiply.524 \n bf16[4,4]"];
	"add.525" [label="add.525 \n bf16[4,4]"];
	"broadcast.578" [label="broadcast.578 \n bf16[4]"];
	"multiply.579" [label="multiply.579 \n bf16[4]"];
	"broadcast.18" [label="broadcast.18 \n bf16[4]"];
	"multiply.582" [label="multiply.582 \n bf16[4]"];
	"subtract.583" [label="subtract.583 \n bf16[4]"];
	"multiply.18" [label="multiply.18 \n bf16[] multiply(bf16[] %constant.22, bf16[] %p20.499), metadata="];
	"broadcast.21" [label="broadcast.21 \n bf16[4]"];
	"constant.25" [label="constant.25 \n bf16[1]"];
	"compare.535" [label="compare.535 \n pred[1]"];
	"constant.26" [label="constant.26 \n bf16[1]"];
	"select.537" [label="select.537 \n bf16[1]"];
	"reshape.539" [label="reshape.539 \n bf16[] reshape(bf16[1]"];
	"broadcast.540" [label="broadcast.540 \n bf16[4]"];
	"multiply.541" [label="multiply.541 \n bf16[4]"];
	"broadcast.562" [label="broadcast.562 \n bf16[4]"];
	"multiply.563" [label="multiply.563 \n bf16[4]"];
	"add.571" [label="add.571 \n bf16[4]"];
	"multiply.19" [label="multiply.19 \n bf16[] multiply(bf16[] %constant.27, bf16[] %p18.475), metadata="];
	"broadcast.25" [label="broadcast.25 \n bf16[4]"];
	"multiply.550" [label="multiply.550 \n bf16[4]"];
	"convert.549" [label="convert.549 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.551" [label="broadcast.551 \n bf16[4]"];
	"multiply.552" [label="multiply.552 \n bf16[4]"];
	"add.553" [label="add.553 \n bf16[4]"];
	"sqrt.554" [label="sqrt.554 \n bf16[4]"];
	"broadcast.555" [label="broadcast.555 \n bf16[4]"];
	"divide.556" [label="divide.556 \n bf16[4]"];
	"broadcast.557" [label="broadcast.557 \n bf16[4]"];
	"add.558" [label="add.558 \n bf16[4]"];
	"divide.585" [label="divide.585 \n bf16[4]"];
	"convert.584" [label="convert.584 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.586" [label="broadcast.586 \n bf16[4]"];
	"multiply.587" [label="multiply.587 \n bf16[4]"];
	"add.588" [label="add.588 \n bf16[4]"];
	"broadcast.641" [label="broadcast.641 \n bf16[4,4]"];
	"multiply.642" [label="multiply.642 \n bf16[4,4]"];
	"broadcast.643" [label="broadcast.643 \n bf16[4,4]"];
	"multiply.645" [label="multiply.645 \n bf16[4,4]"];
	"subtract.646" [label="subtract.646 \n bf16[4,4]"];
	"multiply.20" [label="multiply.20 \n bf16[] multiply(bf16[] %constant.28, bf16[] %p20.499), metadata="];
	"broadcast.31" [label="broadcast.31 \n bf16[4,4]"];
	"constant.30" [label="constant.30 \n bf16[1]"];
	"compare.598" [label="compare.598 \n pred[1]"];
	"constant.31" [label="constant.31 \n bf16[1]"];
	"select.600" [label="select.600 \n bf16[1]"];
	"reshape.602" [label="reshape.602 \n bf16[] reshape(bf16[1]"];
	"broadcast.604" [label="broadcast.604 \n bf16[4,4]"];
	"multiply.605" [label="multiply.605 \n bf16[4,4]"];
	"broadcast.626" [label="broadcast.626 \n bf16[4,4]"];
	"multiply.627" [label="multiply.627 \n bf16[4,4]"];
	"add.635" [label="add.635 \n bf16[4,4]"];
	"multiply.21" [label="multiply.21 \n bf16[] multiply(bf16[] %constant.34, bf16[] %p18.475), metadata="];
	"broadcast.35" [label="broadcast.35 \n bf16[4,4]"];
	"multiply.614" [label="multiply.614 \n bf16[4,4]"];
	"convert.613" [label="convert.613 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.615" [label="broadcast.615 \n bf16[4,4]"];
	"multiply.616" [label="multiply.616 \n bf16[4,4]"];
	"add.617" [label="add.617 \n bf16[4,4]"];
	"sqrt.618" [label="sqrt.618 \n bf16[4,4]"];
	"broadcast.619" [label="broadcast.619 \n bf16[4,4]"];
	"divide.620" [label="divide.620 \n bf16[4,4]"];
	"broadcast.621" [label="broadcast.621 \n bf16[4,4]"];
	"add.622" [label="add.622 \n bf16[4,4]"];
	"divide.648" [label="divide.648 \n bf16[4,4]"];
	"convert.647" [label="convert.647 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.649" [label="broadcast.649 \n bf16[4,4]"];
	"multiply.650" [label="multiply.650 \n bf16[4,4]"];
	"add.651" [label="add.651 \n bf16[4,4]"];
	"broadcast.704" [label="broadcast.704 \n bf16[4]"];
	"multiply.705" [label="multiply.705 \n bf16[4]"];
	"broadcast.36" [label="broadcast.36 \n bf16[4]"];
	"multiply.708" [label="multiply.708 \n bf16[4]"];
	"subtract.709" [label="subtract.709 \n bf16[4]"];
	"multiply.24" [label="multiply.24 \n bf16[] multiply(bf16[] %constant.37, bf16[] %p20.499), metadata="];
	"broadcast.39" [label="broadcast.39 \n bf16[4]"];
	"constant.39" [label="constant.39 \n bf16[1]"];
	"compare.661" [label="compare.661 \n pred[1]"];
	"constant.40" [label="constant.40 \n bf16[1]"];
	"select.663" [label="select.663 \n bf16[1]"];
	"reshape.665" [label="reshape.665 \n bf16[] reshape(bf16[1]"];
	"broadcast.666" [label="broadcast.666 \n bf16[4]"];
	"multiply.667" [label="multiply.667 \n bf16[4]"];
	"broadcast.688" [label="broadcast.688 \n bf16[4]"];
	"multiply.689" [label="multiply.689 \n bf16[4]"];
	"add.697" [label="add.697 \n bf16[4]"];
	"multiply.26" [label="multiply.26 \n bf16[] multiply(bf16[] %constant.41, bf16[] %p18.475), metadata="];
	"broadcast.42" [label="broadcast.42 \n bf16[4]"];
	"multiply.676" [label="multiply.676 \n bf16[4]"];
	"convert.675" [label="convert.675 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.677" [label="broadcast.677 \n bf16[4]"];
	"multiply.678" [label="multiply.678 \n bf16[4]"];
	"add.679" [label="add.679 \n bf16[4]"];
	"sqrt.680" [label="sqrt.680 \n bf16[4]"];
	"broadcast.681" [label="broadcast.681 \n bf16[4]"];
	"divide.682" [label="divide.682 \n bf16[4]"];
	"broadcast.683" [label="broadcast.683 \n bf16[4]"];
	"add.684" [label="add.684 \n bf16[4]"];
	"divide.711" [label="divide.711 \n bf16[4]"];
	"convert.710" [label="convert.710 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.712" [label="broadcast.712 \n bf16[4]"];
	"multiply.713" [label="multiply.713 \n bf16[4]"];
	"add.714" [label="add.714 \n bf16[4]"];
	"broadcast.767" [label="broadcast.767 \n bf16[4,4]"];
	"multiply.768" [label="multiply.768 \n bf16[4,4]"];
	"broadcast.769" [label="broadcast.769 \n bf16[4,4]"];
	"multiply.771" [label="multiply.771 \n bf16[4,4]"];
	"subtract.772" [label="subtract.772 \n bf16[4,4]"];
	"multiply.27" [label="multiply.27 \n bf16[] multiply(bf16[] %constant.42, bf16[] %p20.499), metadata="];
	"broadcast.45" [label="broadcast.45 \n bf16[4,4]"];
	"constant.44" [label="constant.44 \n bf16[1]"];
	"compare.724" [label="compare.724 \n pred[1]"];
	"constant.45" [label="constant.45 \n bf16[1]"];
	"select.726" [label="select.726 \n bf16[1]"];
	"reshape.728" [label="reshape.728 \n bf16[] reshape(bf16[1]"];
	"broadcast.730" [label="broadcast.730 \n bf16[4,4]"];
	"multiply.731" [label="multiply.731 \n bf16[4,4]"];
	"broadcast.752" [label="broadcast.752 \n bf16[4,4]"];
	"multiply.753" [label="multiply.753 \n bf16[4,4]"];
	"add.761" [label="add.761 \n bf16[4,4]"];
	"multiply.28" [label="multiply.28 \n bf16[] multiply(bf16[] %constant.46, bf16[] %p18.475), metadata="];
	"broadcast.50" [label="broadcast.50 \n bf16[4,4]"];
	"multiply.740" [label="multiply.740 \n bf16[4,4]"];
	"convert.739" [label="convert.739 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.741" [label="broadcast.741 \n bf16[4,4]"];
	"multiply.742" [label="multiply.742 \n bf16[4,4]"];
	"add.743" [label="add.743 \n bf16[4,4]"];
	"sqrt.744" [label="sqrt.744 \n bf16[4,4]"];
	"broadcast.745" [label="broadcast.745 \n bf16[4,4]"];
	"divide.746" [label="divide.746 \n bf16[4,4]"];
	"broadcast.747" [label="broadcast.747 \n bf16[4,4]"];
	"add.748" [label="add.748 \n bf16[4,4]"];
	"divide.774" [label="divide.774 \n bf16[4,4]"];
	"convert.773" [label="convert.773 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.775" [label="broadcast.775 \n bf16[4,4]"];
	"multiply.776" [label="multiply.776 \n bf16[4,4]"];
	"add.777" [label="add.777 \n bf16[4,4]"];
	"broadcast.830" [label="broadcast.830 \n bf16[4]"];
	"multiply.831" [label="multiply.831 \n bf16[4]"];
	"broadcast.51" [label="broadcast.51 \n bf16[4]"];
	"multiply.834" [label="multiply.834 \n bf16[4]"];
	"subtract.835" [label="subtract.835 \n bf16[4]"];
	"multiply.31" [label="multiply.31 \n bf16[] multiply(bf16[] %constant.49, bf16[] %p20.499), metadata="];
	"broadcast.54" [label="broadcast.54 \n bf16[4]"];
	"constant.53" [label="constant.53 \n bf16[1]"];
	"compare.787" [label="compare.787 \n pred[1]"];
	"constant.54" [label="constant.54 \n bf16[1]"];
	"select.789" [label="select.789 \n bf16[1]"];
	"reshape.791" [label="reshape.791 \n bf16[] reshape(bf16[1]"];
	"broadcast.792" [label="broadcast.792 \n bf16[4]"];
	"multiply.793" [label="multiply.793 \n bf16[4]"];
	"broadcast.814" [label="broadcast.814 \n bf16[4]"];
	"multiply.815" [label="multiply.815 \n bf16[4]"];
	"add.823" [label="add.823 \n bf16[4]"];
	"multiply.32" [label="multiply.32 \n bf16[] multiply(bf16[] %constant.55, bf16[] %p18.475), metadata="];
	"broadcast.57" [label="broadcast.57 \n bf16[4]"];
	"multiply.802" [label="multiply.802 \n bf16[4]"];
	"convert.801" [label="convert.801 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.803" [label="broadcast.803 \n bf16[4]"];
	"multiply.804" [label="multiply.804 \n bf16[4]"];
	"add.805" [label="add.805 \n bf16[4]"];
	"sqrt.806" [label="sqrt.806 \n bf16[4]"];
	"broadcast.807" [label="broadcast.807 \n bf16[4]"];
	"divide.808" [label="divide.808 \n bf16[4]"];
	"broadcast.809" [label="broadcast.809 \n bf16[4]"];
	"add.810" [label="add.810 \n bf16[4]"];
	"divide.837" [label="divide.837 \n bf16[4]"];
	"convert.836" [label="convert.836 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.838" [label="broadcast.838 \n bf16[4]"];
	"multiply.839" [label="multiply.839 \n bf16[4]"];
	"add.840" [label="add.840 \n bf16[4]"];
	"broadcast.893" [label="broadcast.893 \n bf16[4,4]"];
	"multiply.894" [label="multiply.894 \n bf16[4,4]"];
	"broadcast.895" [label="broadcast.895 \n bf16[4,4]"];
	"multiply.897" [label="multiply.897 \n bf16[4,4]"];
	"subtract.898" [label="subtract.898 \n bf16[4,4]"];
	"multiply.33" [label="multiply.33 \n bf16[] multiply(bf16[] %constant.56, bf16[] %p20.499), metadata="];
	"broadcast.60" [label="broadcast.60 \n bf16[4,4]"];
	"constant.58" [label="constant.58 \n bf16[1]"];
	"compare.850" [label="compare.850 \n pred[1]"];
	"constant.59" [label="constant.59 \n bf16[1]"];
	"select.852" [label="select.852 \n bf16[1]"];
	"reshape.854" [label="reshape.854 \n bf16[] reshape(bf16[1]"];
	"broadcast.856" [label="broadcast.856 \n bf16[4,4]"];
	"multiply.857" [label="multiply.857 \n bf16[4,4]"];
	"broadcast.878" [label="broadcast.878 \n bf16[4,4]"];
	"multiply.879" [label="multiply.879 \n bf16[4,4]"];
	"add.887" [label="add.887 \n bf16[4,4]"];
	"multiply.34" [label="multiply.34 \n bf16[] multiply(bf16[] %constant.60, bf16[] %p18.475), metadata="];
	"broadcast.64" [label="broadcast.64 \n bf16[4,4]"];
	"multiply.866" [label="multiply.866 \n bf16[4,4]"];
	"convert.865" [label="convert.865 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.867" [label="broadcast.867 \n bf16[4,4]"];
	"multiply.868" [label="multiply.868 \n bf16[4,4]"];
	"add.869" [label="add.869 \n bf16[4,4]"];
	"sqrt.870" [label="sqrt.870 \n bf16[4,4]"];
	"broadcast.871" [label="broadcast.871 \n bf16[4,4]"];
	"divide.872" [label="divide.872 \n bf16[4,4]"];
	"broadcast.873" [label="broadcast.873 \n bf16[4,4]"];
	"add.874" [label="add.874 \n bf16[4,4]"];
	"divide.900" [label="divide.900 \n bf16[4,4]"];
	"convert.899" [label="convert.899 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.901" [label="broadcast.901 \n bf16[4,4]"];
	"multiply.902" [label="multiply.902 \n bf16[4,4]"];
	"add.903" [label="add.903 \n bf16[4,4]"];
	"broadcast.956" [label="broadcast.956 \n bf16[4]"];
	"multiply.957" [label="multiply.957 \n bf16[4]"];
	"broadcast.65" [label="broadcast.65 \n bf16[4]"];
	"multiply.960" [label="multiply.960 \n bf16[4]"];
	"subtract.961" [label="subtract.961 \n bf16[4]"];
	"multiply.37" [label="multiply.37 \n bf16[] multiply(bf16[] %constant.66, bf16[] %p20.499), metadata="];
	"broadcast.68" [label="broadcast.68 \n bf16[4]"];
	"constant.68" [label="constant.68 \n bf16[1]"];
	"compare.913" [label="compare.913 \n pred[1]"];
	"constant.69" [label="constant.69 \n bf16[1]"];
	"select.915" [label="select.915 \n bf16[1]"];
	"reshape.917" [label="reshape.917 \n bf16[] reshape(bf16[1]"];
	"broadcast.918" [label="broadcast.918 \n bf16[4]"];
	"multiply.919" [label="multiply.919 \n bf16[4]"];
	"broadcast.940" [label="broadcast.940 \n bf16[4]"];
	"multiply.941" [label="multiply.941 \n bf16[4]"];
	"add.949" [label="add.949 \n bf16[4]"];
	"multiply.38" [label="multiply.38 \n bf16[] multiply(bf16[] %constant.70, bf16[] %p18.475), metadata="];
	"broadcast.71" [label="broadcast.71 \n bf16[4]"];
	"multiply.928" [label="multiply.928 \n bf16[4]"];
	"convert.927" [label="convert.927 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.929" [label="broadcast.929 \n bf16[4]"];
	"multiply.930" [label="multiply.930 \n bf16[4]"];
	"add.931" [label="add.931 \n bf16[4]"];
	"sqrt.932" [label="sqrt.932 \n bf16[4]"];
	"broadcast.933" [label="broadcast.933 \n bf16[4]"];
	"divide.934" [label="divide.934 \n bf16[4]"];
	"broadcast.935" [label="broadcast.935 \n bf16[4]"];
	"add.936" [label="add.936 \n bf16[4]"];
	"divide.963" [label="divide.963 \n bf16[4]"];
	"convert.962" [label="convert.962 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.964" [label="broadcast.964 \n bf16[4]"];
	"multiply.965" [label="multiply.965 \n bf16[4]"];
	"add.966" [label="add.966 \n bf16[4]"];
	"broadcast.1019" [label="broadcast.1019 \n bf16[1,4]"];
	"multiply.1020" [label="multiply.1020 \n bf16[1,4]"];
	"broadcast.1021" [label="broadcast.1021 \n bf16[1,4]"];
	"multiply.1023" [label="multiply.1023 \n bf16[1,4]"];
	"subtract.1024" [label="subtract.1024 \n bf16[1,4]"];
	"multiply.45" [label="multiply.45 \n bf16[] multiply(bf16[] %constant.85, bf16[] %p20.499), metadata="];
	"broadcast.74" [label="broadcast.74 \n bf16[1,4]"];
	"constant.73" [label="constant.73 \n bf16[1]"];
	"compare.976" [label="compare.976 \n pred[1]"];
	"constant.74" [label="constant.74 \n bf16[1]"];
	"select.978" [label="select.978 \n bf16[1]"];
	"reshape.980" [label="reshape.980 \n bf16[] reshape(bf16[1]"];
	"broadcast.119" [label="broadcast.119 \n bf16[1,4]"];
	"multiply.983" [label="multiply.983 \n bf16[1,4]"];
	"broadcast.1004" [label="broadcast.1004 \n bf16[1,4]"];
	"multiply.1005" [label="multiply.1005 \n bf16[1,4]"];
	"add.1013" [label="add.1013 \n bf16[1,4]"];
	"multiply.46" [label="multiply.46 \n bf16[] multiply(bf16[] %constant.86, bf16[] %p18.475), metadata="];
	"broadcast.77" [label="broadcast.77 \n bf16[1,4]"];
	"multiply.992" [label="multiply.992 \n bf16[1,4]"];
	"convert.991" [label="convert.991 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.993" [label="broadcast.993 \n bf16[1,4]"];
	"multiply.994" [label="multiply.994 \n bf16[1,4]"];
	"add.995" [label="add.995 \n bf16[1,4]"];
	"sqrt.996" [label="sqrt.996 \n bf16[1,4]"];
	"broadcast.997" [label="broadcast.997 \n bf16[1,4]"];
	"divide.998" [label="divide.998 \n bf16[1,4]"];
	"broadcast.999" [label="broadcast.999 \n bf16[1,4]"];
	"add.1000" [label="add.1000 \n bf16[1,4]"];
	"divide.1026" [label="divide.1026 \n bf16[1,4]"];
	"convert.1025" [label="convert.1025 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1027" [label="broadcast.1027 \n bf16[1,4]"];
	"multiply.1028" [label="multiply.1028 \n bf16[1,4]"];
	"add.1029" [label="add.1029 \n bf16[1,4]"];
	"p23.1071" [label="p23.1071 \n bf16[1]"];
	"reshape.186" [label="reshape.186 \n bf16[1]"];
	"multiply.1073" [label="multiply.1073 \n bf16[1]"];
	"constant.78" [label="constant.78 \n bf16[1]"];
	"multiply.1076" [label="multiply.1076 \n bf16[1]"];
	"subtract.1077" [label="subtract.1077 \n bf16[1]"];
	"multiply.43" [label="multiply.43 \n bf16[] multiply(bf16[] %constant.87, bf16[] %p20.499), metadata="];
	"reshape.295" [label="reshape.295 \n bf16[1]"];
	"constant.82" [label="constant.82 \n bf16[1]"];
	"compare.1039" [label="compare.1039 \n pred[1]"];
	"constant.83" [label="constant.83 \n bf16[1]"];
	"select.1041" [label="select.1041 \n bf16[1]"];
	"multiply.1042" [label="multiply.1042 \n bf16[1]"];
	"reshape.195" [label="reshape.195 \n bf16[1]"];
	"multiply.1060" [label="multiply.1060 \n bf16[1]"];
	"add.1066" [label="add.1066 \n bf16[1]"];
	"multiply.42" [label="multiply.42 \n bf16[] multiply(bf16[] %constant.88, bf16[] %p18.475), metadata="];
	"reshape.291" [label="reshape.291 \n bf16[1]"];
	"multiply.1049" [label="multiply.1049 \n bf16[1]"];
	"convert.1048" [label="convert.1048 \n bf16[] convert(f32[] %p3.6), metadata="];
	"reshape.198" [label="reshape.198 \n bf16[1]"];
	"multiply.1051" [label="multiply.1051 \n bf16[1]"];
	"add.1052" [label="add.1052 \n bf16[1]"];
	"sqrt.1053" [label="sqrt.1053 \n bf16[1]"];
	"reshape.199" [label="reshape.199 \n bf16[1]"];
	"divide.1055" [label="divide.1055 \n bf16[1]"];
	"reshape.200" [label="reshape.200 \n bf16[1]"];
	"add.1057" [label="add.1057 \n bf16[1]"];
	"divide.1079" [label="divide.1079 \n bf16[1]"];
	"convert.1078" [label="convert.1078 \n bf16[] convert(f32[] %p0.1), metadata="];
	"reshape.201" [label="reshape.201 \n bf16[1]"];
	"multiply.1081" [label="multiply.1081 \n bf16[1]"];
	"add.1082" [label="add.1082 \n bf16[1]"];
	"tuple.1083" [label="tuple.1083 \n (bf16[4,4]"]; 
 	"p22.514" -> "broadcast.515";
	"p15.271" -> "multiply.516";
	"broadcast.515" -> "multiply.516";
	"p21.513" -> "broadcast.517";
	"multiply.516" -> "multiply.519";
	"broadcast.517" -> "multiply.519";
	"p15.271" -> "subtract.520";
	"multiply.519" -> "subtract.520";
	"constant.1" -> "multiply.0";
	"p20.499" -> "multiply.0";
	"multiply.0" -> "broadcast.2";
	"p6.22" -> "divide.1";
	"p5.21" -> "divide.1";
	"divide.1" -> "broadcast.124";
	"p7.64" -> "custom-call.19";
	"broadcast.124" -> "multiply.44";
	"custom-call.19" -> "multiply.44";
	"multiply.44" -> "reshape.304";
	"reshape.304" -> "broadcast.12";
	"p8.107" -> "custom-call.20";
	"broadcast.12" -> "dot.117";
	"custom-call.20" -> "dot.117";
	"p9.150" -> "custom-call.21";
	"dot.117" -> "dot.160";
	"custom-call.21" -> "dot.160";
	"p10.193" -> "custom-call.22";
	"dot.160" -> "dot.203";
	"custom-call.22" -> "dot.203";
	"p16.280" -> "transpose.409";
	"dot.203" -> "dot.1";
	"transpose.409" -> "dot.1";
	"dot.1" -> "custom-call.23";
	"custom-call.23" -> "multiply.421";
	"custom-call.23" -> "multiply.421";
	"multiply.421" -> "reduce.428";
	"constant.422" -> "reduce.428";
	"AddComputation.424" -> "reduce.428";
	"reduce.428" -> "sqrt.429";
	"sqrt.429" -> "multiply.431";
	"sqrt.429" -> "multiply.431";
	"multiply.431" -> "reshape.13";
	"p17.432" -> "add.434";
	"reshape.13" -> "add.434";
	"p15.271" -> "custom-call.24";
	"custom-call.24" -> "transpose.279";
	"p16.280" -> "dot.281";
	"transpose.279" -> "dot.281";
	"p14.263" -> "custom-call.25";
	"custom-call.25" -> "broadcast.285";
	"dot.281" -> "add.286";
	"broadcast.285" -> "add.286";
	"add.286" -> "transpose.383";
	"dot.160" -> "dot.2";
	"transpose.383" -> "dot.2";
	"dot.2" -> "custom-call.26";
	"custom-call.26" -> "multiply.395";
	"custom-call.26" -> "multiply.395";
	"multiply.395" -> "reduce.402";
	"constant.396" -> "reduce.402";
	"AddComputation.398" -> "reduce.402";
	"reduce.402" -> "sqrt.403";
	"sqrt.403" -> "multiply.405";
	"sqrt.403" -> "multiply.405";
	"multiply.405" -> "reshape.17";
	"add.434" -> "add.436";
	"reshape.17" -> "add.436";
	"custom-call.22" -> "transpose.262";
	"add.286" -> "dot.287";
	"transpose.262" -> "dot.287";
	"p13.254" -> "custom-call.27";
	"custom-call.27" -> "broadcast.291";
	"dot.287" -> "add.292";
	"broadcast.291" -> "add.292";
	"add.292" -> "transpose.357";
	"dot.117" -> "dot.3";
	"transpose.357" -> "dot.3";
	"dot.3" -> "custom-call.28";
	"custom-call.28" -> "multiply.369";
	"custom-call.28" -> "multiply.369";
	"multiply.369" -> "reduce.376";
	"constant.370" -> "reduce.376";
	"AddComputation.372" -> "reduce.376";
	"reduce.376" -> "sqrt.377";
	"sqrt.377" -> "multiply.379";
	"sqrt.377" -> "multiply.379";
	"multiply.379" -> "reshape.20";
	"add.436" -> "add.438";
	"reshape.20" -> "add.438";
	"custom-call.21" -> "transpose.253";
	"add.292" -> "dot.293";
	"transpose.253" -> "dot.293";
	"p12.245" -> "custom-call.29";
	"custom-call.29" -> "broadcast.297";
	"dot.293" -> "add.298";
	"broadcast.297" -> "add.298";
	"add.298" -> "transpose.331";
	"broadcast.12" -> "dot.4";
	"transpose.331" -> "dot.4";
	"dot.4" -> "custom-call.30";
	"custom-call.30" -> "multiply.343";
	"custom-call.30" -> "multiply.343";
	"multiply.343" -> "reduce.350";
	"constant.344" -> "reduce.350";
	"AddComputation.346" -> "reduce.350";
	"reduce.350" -> "sqrt.351";
	"sqrt.351" -> "multiply.353";
	"sqrt.351" -> "multiply.353";
	"multiply.353" -> "reshape.30";
	"add.438" -> "add.440";
	"reshape.30" -> "add.440";
	"custom-call.20" -> "transpose.244";
	"add.298" -> "dot.299";
	"transpose.244" -> "dot.299";
	"p11.236" -> "custom-call.31";
	"custom-call.31" -> "broadcast.303";
	"dot.299" -> "add.304";
	"broadcast.303" -> "add.304";
	"divide.1" -> "broadcast.126";
	"add.304" -> "multiply.47";
	"broadcast.126" -> "multiply.47";
	"multiply.47" -> "convert.2";
	"convert.2" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"convert.1" -> "reshape.35";
	"reshape.35" -> "custom-call.32";
	"custom-call.32" -> "multiply.317";
	"custom-call.32" -> "multiply.317";
	"multiply.317" -> "reduce.324";
	"constant.318" -> "reduce.324";
	"AddComputation.320" -> "reduce.324";
	"reduce.324" -> "sqrt.325";
	"sqrt.325" -> "multiply.327";
	"sqrt.325" -> "multiply.327";
	"multiply.327" -> "reshape.36";
	"add.440" -> "add.442";
	"reshape.36" -> "add.442";
	"dot.203" -> "reduce.210";
	"constant.204" -> "reduce.210";
	"AddComputation.206" -> "reduce.210";
	"reduce.210" -> "custom-call.33";
	"custom-call.33" -> "multiply.222";
	"custom-call.33" -> "multiply.222";
	"multiply.222" -> "reduce.229";
	"constant.223" -> "reduce.229";
	"AddComputation.225" -> "reduce.229";
	"reduce.229" -> "sqrt.230";
	"sqrt.230" -> "multiply.232";
	"sqrt.230" -> "multiply.232";
	"multiply.232" -> "reshape.38";
	"add.442" -> "add.444";
	"reshape.38" -> "add.444";
	"dot.160" -> "reduce.167";
	"constant.161" -> "reduce.167";
	"AddComputation.163" -> "reduce.167";
	"reduce.167" -> "custom-call.34";
	"custom-call.34" -> "multiply.179";
	"custom-call.34" -> "multiply.179";
	"multiply.179" -> "reduce.186";
	"constant.180" -> "reduce.186";
	"AddComputation.182" -> "reduce.186";
	"reduce.186" -> "sqrt.187";
	"sqrt.187" -> "multiply.189";
	"sqrt.187" -> "multiply.189";
	"multiply.189" -> "reshape.42";
	"add.444" -> "add.446";
	"reshape.42" -> "add.446";
	"dot.117" -> "reduce.124";
	"constant.118" -> "reduce.124";
	"AddComputation.120" -> "reduce.124";
	"reduce.124" -> "custom-call.35";
	"custom-call.35" -> "multiply.136";
	"custom-call.35" -> "multiply.136";
	"multiply.136" -> "reduce.143";
	"constant.137" -> "reduce.143";
	"AddComputation.139" -> "reduce.143";
	"reduce.143" -> "sqrt.144";
	"sqrt.144" -> "multiply.146";
	"sqrt.144" -> "multiply.146";
	"multiply.146" -> "reshape.44";
	"add.446" -> "add.448";
	"reshape.44" -> "add.448";
	"broadcast.12" -> "reduce.81";
	"constant.75" -> "reduce.81";
	"AddComputation.77" -> "reduce.81";
	"reduce.81" -> "custom-call.36";
	"custom-call.36" -> "multiply.93";
	"custom-call.36" -> "multiply.93";
	"multiply.93" -> "reduce.100";
	"constant.94" -> "reduce.100";
	"AddComputation.96" -> "reduce.100";
	"reduce.100" -> "sqrt.101";
	"sqrt.101" -> "multiply.103";
	"sqrt.101" -> "multiply.103";
	"multiply.103" -> "reshape.46";
	"add.448" -> "add.450";
	"reshape.46" -> "add.450";
	"divide.1" -> "broadcast.4";
	"broadcast.4" -> "reduce.38";
	"constant.32" -> "reduce.38";
	"AddComputation.34" -> "reduce.38";
	"reduce.38" -> "custom-call.37";
	"custom-call.37" -> "multiply.48";
	"custom-call.37" -> "multiply.48";
	"add.450" -> "add.452";
	"multiply.48" -> "add.452";
	"add.452" -> "power.455";
	"constant.6" -> "power.455";
	"p4.12" -> "reshape.53";
	"power.455" -> "add.457";
	"reshape.53" -> "add.457";
	"constant.3" -> "divide.460";
	"add.457" -> "divide.460";
	"divide.460" -> "compare.467";
	"constant.12" -> "compare.467";
	"compare.467" -> "select.469";
	"divide.460" -> "select.469";
	"constant.13" -> "select.469";
	"select.469" -> "reshape.471";
	"reshape.471" -> "broadcast.473";
	"custom-call.23" -> "multiply.474";
	"broadcast.473" -> "multiply.474";
	"p19.493" -> "broadcast.497";
	"multiply.474" -> "multiply.498";
	"broadcast.497" -> "multiply.498";
	"broadcast.2" -> "add.507";
	"multiply.498" -> "add.507";
	"constant.15" -> "multiply.15";
	"p18.475" -> "multiply.15";
	"multiply.15" -> "broadcast.17";
	"multiply.474" -> "multiply.484";
	"multiply.474" -> "multiply.484";
	"p3.6" -> "convert.483";
	"convert.483" -> "broadcast.485";
	"multiply.484" -> "multiply.486";
	"broadcast.485" -> "multiply.486";
	"broadcast.17" -> "add.487";
	"multiply.486" -> "add.487";
	"add.487" -> "sqrt.488";
	"p2.5" -> "broadcast.489";
	"sqrt.488" -> "divide.490";
	"broadcast.489" -> "divide.490";
	"p1.3" -> "broadcast.491";
	"divide.490" -> "add.492";
	"broadcast.491" -> "add.492";
	"add.507" -> "divide.522";
	"add.492" -> "divide.522";
	"p0.1" -> "convert.521";
	"convert.521" -> "broadcast.523";
	"divide.522" -> "multiply.524";
	"broadcast.523" -> "multiply.524";
	"subtract.520" -> "add.525";
	"multiply.524" -> "add.525";
	"p22.514" -> "broadcast.578";
	"p14.263" -> "multiply.579";
	"broadcast.578" -> "multiply.579";
	"constant.21" -> "broadcast.18";
	"multiply.579" -> "multiply.582";
	"broadcast.18" -> "multiply.582";
	"p14.263" -> "subtract.583";
	"multiply.582" -> "subtract.583";
	"constant.22" -> "multiply.18";
	"p20.499" -> "multiply.18";
	"multiply.18" -> "broadcast.21";
	"divide.460" -> "compare.535";
	"constant.25" -> "compare.535";
	"compare.535" -> "select.537";
	"divide.460" -> "select.537";
	"constant.26" -> "select.537";
	"select.537" -> "reshape.539";
	"reshape.539" -> "broadcast.540";
	"custom-call.33" -> "multiply.541";
	"broadcast.540" -> "multiply.541";
	"p19.493" -> "broadcast.562";
	"multiply.541" -> "multiply.563";
	"broadcast.562" -> "multiply.563";
	"broadcast.21" -> "add.571";
	"multiply.563" -> "add.571";
	"constant.27" -> "multiply.19";
	"p18.475" -> "multiply.19";
	"multiply.19" -> "broadcast.25";
	"multiply.541" -> "multiply.550";
	"multiply.541" -> "multiply.550";
	"p3.6" -> "convert.549";
	"convert.549" -> "broadcast.551";
	"multiply.550" -> "multiply.552";
	"broadcast.551" -> "multiply.552";
	"broadcast.25" -> "add.553";
	"multiply.552" -> "add.553";
	"add.553" -> "sqrt.554";
	"p2.5" -> "broadcast.555";
	"sqrt.554" -> "divide.556";
	"broadcast.555" -> "divide.556";
	"p1.3" -> "broadcast.557";
	"divide.556" -> "add.558";
	"broadcast.557" -> "add.558";
	"add.571" -> "divide.585";
	"add.558" -> "divide.585";
	"p0.1" -> "convert.584";
	"convert.584" -> "broadcast.586";
	"divide.585" -> "multiply.587";
	"broadcast.586" -> "multiply.587";
	"subtract.583" -> "add.588";
	"multiply.587" -> "add.588";
	"p22.514" -> "broadcast.641";
	"p10.193" -> "multiply.642";
	"broadcast.641" -> "multiply.642";
	"p21.513" -> "broadcast.643";
	"multiply.642" -> "multiply.645";
	"broadcast.643" -> "multiply.645";
	"p10.193" -> "subtract.646";
	"multiply.645" -> "subtract.646";
	"constant.28" -> "multiply.20";
	"p20.499" -> "multiply.20";
	"multiply.20" -> "broadcast.31";
	"divide.460" -> "compare.598";
	"constant.30" -> "compare.598";
	"compare.598" -> "select.600";
	"divide.460" -> "select.600";
	"constant.31" -> "select.600";
	"select.600" -> "reshape.602";
	"reshape.602" -> "broadcast.604";
	"custom-call.26" -> "multiply.605";
	"broadcast.604" -> "multiply.605";
	"p19.493" -> "broadcast.626";
	"multiply.605" -> "multiply.627";
	"broadcast.626" -> "multiply.627";
	"broadcast.31" -> "add.635";
	"multiply.627" -> "add.635";
	"constant.34" -> "multiply.21";
	"p18.475" -> "multiply.21";
	"multiply.21" -> "broadcast.35";
	"multiply.605" -> "multiply.614";
	"multiply.605" -> "multiply.614";
	"p3.6" -> "convert.613";
	"convert.613" -> "broadcast.615";
	"multiply.614" -> "multiply.616";
	"broadcast.615" -> "multiply.616";
	"broadcast.35" -> "add.617";
	"multiply.616" -> "add.617";
	"add.617" -> "sqrt.618";
	"p2.5" -> "broadcast.619";
	"sqrt.618" -> "divide.620";
	"broadcast.619" -> "divide.620";
	"p1.3" -> "broadcast.621";
	"divide.620" -> "add.622";
	"broadcast.621" -> "add.622";
	"add.635" -> "divide.648";
	"add.622" -> "divide.648";
	"p0.1" -> "convert.647";
	"convert.647" -> "broadcast.649";
	"divide.648" -> "multiply.650";
	"broadcast.649" -> "multiply.650";
	"subtract.646" -> "add.651";
	"multiply.650" -> "add.651";
	"p22.514" -> "broadcast.704";
	"p13.254" -> "multiply.705";
	"broadcast.704" -> "multiply.705";
	"constant.36" -> "broadcast.36";
	"multiply.705" -> "multiply.708";
	"broadcast.36" -> "multiply.708";
	"p13.254" -> "subtract.709";
	"multiply.708" -> "subtract.709";
	"constant.37" -> "multiply.24";
	"p20.499" -> "multiply.24";
	"multiply.24" -> "broadcast.39";
	"divide.460" -> "compare.661";
	"constant.39" -> "compare.661";
	"compare.661" -> "select.663";
	"divide.460" -> "select.663";
	"constant.40" -> "select.663";
	"select.663" -> "reshape.665";
	"reshape.665" -> "broadcast.666";
	"custom-call.34" -> "multiply.667";
	"broadcast.666" -> "multiply.667";
	"p19.493" -> "broadcast.688";
	"multiply.667" -> "multiply.689";
	"broadcast.688" -> "multiply.689";
	"broadcast.39" -> "add.697";
	"multiply.689" -> "add.697";
	"constant.41" -> "multiply.26";
	"p18.475" -> "multiply.26";
	"multiply.26" -> "broadcast.42";
	"multiply.667" -> "multiply.676";
	"multiply.667" -> "multiply.676";
	"p3.6" -> "convert.675";
	"convert.675" -> "broadcast.677";
	"multiply.676" -> "multiply.678";
	"broadcast.677" -> "multiply.678";
	"broadcast.42" -> "add.679";
	"multiply.678" -> "add.679";
	"add.679" -> "sqrt.680";
	"p2.5" -> "broadcast.681";
	"sqrt.680" -> "divide.682";
	"broadcast.681" -> "divide.682";
	"p1.3" -> "broadcast.683";
	"divide.682" -> "add.684";
	"broadcast.683" -> "add.684";
	"add.697" -> "divide.711";
	"add.684" -> "divide.711";
	"p0.1" -> "convert.710";
	"convert.710" -> "broadcast.712";
	"divide.711" -> "multiply.713";
	"broadcast.712" -> "multiply.713";
	"subtract.709" -> "add.714";
	"multiply.713" -> "add.714";
	"p22.514" -> "broadcast.767";
	"p9.150" -> "multiply.768";
	"broadcast.767" -> "multiply.768";
	"p21.513" -> "broadcast.769";
	"multiply.768" -> "multiply.771";
	"broadcast.769" -> "multiply.771";
	"p9.150" -> "subtract.772";
	"multiply.771" -> "subtract.772";
	"constant.42" -> "multiply.27";
	"p20.499" -> "multiply.27";
	"multiply.27" -> "broadcast.45";
	"divide.460" -> "compare.724";
	"constant.44" -> "compare.724";
	"compare.724" -> "select.726";
	"divide.460" -> "select.726";
	"constant.45" -> "select.726";
	"select.726" -> "reshape.728";
	"reshape.728" -> "broadcast.730";
	"custom-call.28" -> "multiply.731";
	"broadcast.730" -> "multiply.731";
	"p19.493" -> "broadcast.752";
	"multiply.731" -> "multiply.753";
	"broadcast.752" -> "multiply.753";
	"broadcast.45" -> "add.761";
	"multiply.753" -> "add.761";
	"constant.46" -> "multiply.28";
	"p18.475" -> "multiply.28";
	"multiply.28" -> "broadcast.50";
	"multiply.731" -> "multiply.740";
	"multiply.731" -> "multiply.740";
	"p3.6" -> "convert.739";
	"convert.739" -> "broadcast.741";
	"multiply.740" -> "multiply.742";
	"broadcast.741" -> "multiply.742";
	"broadcast.50" -> "add.743";
	"multiply.742" -> "add.743";
	"add.743" -> "sqrt.744";
	"p2.5" -> "broadcast.745";
	"sqrt.744" -> "divide.746";
	"broadcast.745" -> "divide.746";
	"p1.3" -> "broadcast.747";
	"divide.746" -> "add.748";
	"broadcast.747" -> "add.748";
	"add.761" -> "divide.774";
	"add.748" -> "divide.774";
	"p0.1" -> "convert.773";
	"convert.773" -> "broadcast.775";
	"divide.774" -> "multiply.776";
	"broadcast.775" -> "multiply.776";
	"subtract.772" -> "add.777";
	"multiply.776" -> "add.777";
	"p22.514" -> "broadcast.830";
	"p12.245" -> "multiply.831";
	"broadcast.830" -> "multiply.831";
	"constant.48" -> "broadcast.51";
	"multiply.831" -> "multiply.834";
	"broadcast.51" -> "multiply.834";
	"p12.245" -> "subtract.835";
	"multiply.834" -> "subtract.835";
	"constant.49" -> "multiply.31";
	"p20.499" -> "multiply.31";
	"multiply.31" -> "broadcast.54";
	"divide.460" -> "compare.787";
	"constant.53" -> "compare.787";
	"compare.787" -> "select.789";
	"divide.460" -> "select.789";
	"constant.54" -> "select.789";
	"select.789" -> "reshape.791";
	"reshape.791" -> "broadcast.792";
	"custom-call.35" -> "multiply.793";
	"broadcast.792" -> "multiply.793";
	"p19.493" -> "broadcast.814";
	"multiply.793" -> "multiply.815";
	"broadcast.814" -> "multiply.815";
	"broadcast.54" -> "add.823";
	"multiply.815" -> "add.823";
	"constant.55" -> "multiply.32";
	"p18.475" -> "multiply.32";
	"multiply.32" -> "broadcast.57";
	"multiply.793" -> "multiply.802";
	"multiply.793" -> "multiply.802";
	"p3.6" -> "convert.801";
	"convert.801" -> "broadcast.803";
	"multiply.802" -> "multiply.804";
	"broadcast.803" -> "multiply.804";
	"broadcast.57" -> "add.805";
	"multiply.804" -> "add.805";
	"add.805" -> "sqrt.806";
	"p2.5" -> "broadcast.807";
	"sqrt.806" -> "divide.808";
	"broadcast.807" -> "divide.808";
	"p1.3" -> "broadcast.809";
	"divide.808" -> "add.810";
	"broadcast.809" -> "add.810";
	"add.823" -> "divide.837";
	"add.810" -> "divide.837";
	"p0.1" -> "convert.836";
	"convert.836" -> "broadcast.838";
	"divide.837" -> "multiply.839";
	"broadcast.838" -> "multiply.839";
	"subtract.835" -> "add.840";
	"multiply.839" -> "add.840";
	"p22.514" -> "broadcast.893";
	"p8.107" -> "multiply.894";
	"broadcast.893" -> "multiply.894";
	"p21.513" -> "broadcast.895";
	"multiply.894" -> "multiply.897";
	"broadcast.895" -> "multiply.897";
	"p8.107" -> "subtract.898";
	"multiply.897" -> "subtract.898";
	"constant.56" -> "multiply.33";
	"p20.499" -> "multiply.33";
	"multiply.33" -> "broadcast.60";
	"divide.460" -> "compare.850";
	"constant.58" -> "compare.850";
	"compare.850" -> "select.852";
	"divide.460" -> "select.852";
	"constant.59" -> "select.852";
	"select.852" -> "reshape.854";
	"reshape.854" -> "broadcast.856";
	"custom-call.30" -> "multiply.857";
	"broadcast.856" -> "multiply.857";
	"p19.493" -> "broadcast.878";
	"multiply.857" -> "multiply.879";
	"broadcast.878" -> "multiply.879";
	"broadcast.60" -> "add.887";
	"multiply.879" -> "add.887";
	"constant.60" -> "multiply.34";
	"p18.475" -> "multiply.34";
	"multiply.34" -> "broadcast.64";
	"multiply.857" -> "multiply.866";
	"multiply.857" -> "multiply.866";
	"p3.6" -> "convert.865";
	"convert.865" -> "broadcast.867";
	"multiply.866" -> "multiply.868";
	"broadcast.867" -> "multiply.868";
	"broadcast.64" -> "add.869";
	"multiply.868" -> "add.869";
	"add.869" -> "sqrt.870";
	"p2.5" -> "broadcast.871";
	"sqrt.870" -> "divide.872";
	"broadcast.871" -> "divide.872";
	"p1.3" -> "broadcast.873";
	"divide.872" -> "add.874";
	"broadcast.873" -> "add.874";
	"add.887" -> "divide.900";
	"add.874" -> "divide.900";
	"p0.1" -> "convert.899";
	"convert.899" -> "broadcast.901";
	"divide.900" -> "multiply.902";
	"broadcast.901" -> "multiply.902";
	"subtract.898" -> "add.903";
	"multiply.902" -> "add.903";
	"p22.514" -> "broadcast.956";
	"p11.236" -> "multiply.957";
	"broadcast.956" -> "multiply.957";
	"constant.65" -> "broadcast.65";
	"multiply.957" -> "multiply.960";
	"broadcast.65" -> "multiply.960";
	"p11.236" -> "subtract.961";
	"multiply.960" -> "subtract.961";
	"constant.66" -> "multiply.37";
	"p20.499" -> "multiply.37";
	"multiply.37" -> "broadcast.68";
	"divide.460" -> "compare.913";
	"constant.68" -> "compare.913";
	"compare.913" -> "select.915";
	"divide.460" -> "select.915";
	"constant.69" -> "select.915";
	"select.915" -> "reshape.917";
	"reshape.917" -> "broadcast.918";
	"custom-call.36" -> "multiply.919";
	"broadcast.918" -> "multiply.919";
	"p19.493" -> "broadcast.940";
	"multiply.919" -> "multiply.941";
	"broadcast.940" -> "multiply.941";
	"broadcast.68" -> "add.949";
	"multiply.941" -> "add.949";
	"constant.70" -> "multiply.38";
	"p18.475" -> "multiply.38";
	"multiply.38" -> "broadcast.71";
	"multiply.919" -> "multiply.928";
	"multiply.919" -> "multiply.928";
	"p3.6" -> "convert.927";
	"convert.927" -> "broadcast.929";
	"multiply.928" -> "multiply.930";
	"broadcast.929" -> "multiply.930";
	"broadcast.71" -> "add.931";
	"multiply.930" -> "add.931";
	"add.931" -> "sqrt.932";
	"p2.5" -> "broadcast.933";
	"sqrt.932" -> "divide.934";
	"broadcast.933" -> "divide.934";
	"p1.3" -> "broadcast.935";
	"divide.934" -> "add.936";
	"broadcast.935" -> "add.936";
	"add.949" -> "divide.963";
	"add.936" -> "divide.963";
	"p0.1" -> "convert.962";
	"convert.962" -> "broadcast.964";
	"divide.963" -> "multiply.965";
	"broadcast.964" -> "multiply.965";
	"subtract.961" -> "add.966";
	"multiply.965" -> "add.966";
	"p22.514" -> "broadcast.1019";
	"p7.64" -> "multiply.1020";
	"broadcast.1019" -> "multiply.1020";
	"p21.513" -> "broadcast.1021";
	"multiply.1020" -> "multiply.1023";
	"broadcast.1021" -> "multiply.1023";
	"p7.64" -> "subtract.1024";
	"multiply.1023" -> "subtract.1024";
	"constant.85" -> "multiply.45";
	"p20.499" -> "multiply.45";
	"multiply.45" -> "broadcast.74";
	"divide.460" -> "compare.976";
	"constant.73" -> "compare.976";
	"compare.976" -> "select.978";
	"divide.460" -> "select.978";
	"constant.74" -> "select.978";
	"select.978" -> "reshape.980";
	"reshape.980" -> "broadcast.119";
	"custom-call.32" -> "multiply.983";
	"broadcast.119" -> "multiply.983";
	"p19.493" -> "broadcast.1004";
	"multiply.983" -> "multiply.1005";
	"broadcast.1004" -> "multiply.1005";
	"broadcast.74" -> "add.1013";
	"multiply.1005" -> "add.1013";
	"constant.86" -> "multiply.46";
	"p18.475" -> "multiply.46";
	"multiply.46" -> "broadcast.77";
	"multiply.983" -> "multiply.992";
	"multiply.983" -> "multiply.992";
	"p3.6" -> "convert.991";
	"convert.991" -> "broadcast.993";
	"multiply.992" -> "multiply.994";
	"broadcast.993" -> "multiply.994";
	"broadcast.77" -> "add.995";
	"multiply.994" -> "add.995";
	"add.995" -> "sqrt.996";
	"p2.5" -> "broadcast.997";
	"sqrt.996" -> "divide.998";
	"broadcast.997" -> "divide.998";
	"p1.3" -> "broadcast.999";
	"divide.998" -> "add.1000";
	"broadcast.999" -> "add.1000";
	"add.1013" -> "divide.1026";
	"add.1000" -> "divide.1026";
	"p0.1" -> "convert.1025";
	"convert.1025" -> "broadcast.1027";
	"divide.1026" -> "multiply.1028";
	"broadcast.1027" -> "multiply.1028";
	"subtract.1024" -> "add.1029";
	"multiply.1028" -> "add.1029";
	"p22.514" -> "reshape.186";
	"p23.1071" -> "multiply.1073";
	"reshape.186" -> "multiply.1073";
	"multiply.1073" -> "multiply.1076";
	"constant.78" -> "multiply.1076";
	"p23.1071" -> "subtract.1077";
	"multiply.1076" -> "subtract.1077";
	"constant.87" -> "multiply.43";
	"p20.499" -> "multiply.43";
	"multiply.43" -> "reshape.295";
	"divide.460" -> "compare.1039";
	"constant.82" -> "compare.1039";
	"compare.1039" -> "select.1041";
	"divide.460" -> "select.1041";
	"constant.83" -> "select.1041";
	"custom-call.37" -> "multiply.1042";
	"select.1041" -> "multiply.1042";
	"p19.493" -> "reshape.195";
	"multiply.1042" -> "multiply.1060";
	"reshape.195" -> "multiply.1060";
	"reshape.295" -> "add.1066";
	"multiply.1060" -> "add.1066";
	"constant.88" -> "multiply.42";
	"p18.475" -> "multiply.42";
	"multiply.42" -> "reshape.291";
	"multiply.1042" -> "multiply.1049";
	"multiply.1042" -> "multiply.1049";
	"p3.6" -> "convert.1048";
	"convert.1048" -> "reshape.198";
	"multiply.1049" -> "multiply.1051";
	"reshape.198" -> "multiply.1051";
	"reshape.291" -> "add.1052";
	"multiply.1051" -> "add.1052";
	"add.1052" -> "sqrt.1053";
	"p2.5" -> "reshape.199";
	"sqrt.1053" -> "divide.1055";
	"reshape.199" -> "divide.1055";
	"p1.3" -> "reshape.200";
	"divide.1055" -> "add.1057";
	"reshape.200" -> "add.1057";
	"add.1066" -> "divide.1079";
	"add.1057" -> "divide.1079";
	"p0.1" -> "convert.1078";
	"convert.1078" -> "reshape.201";
	"divide.1079" -> "multiply.1081";
	"reshape.201" -> "multiply.1081";
	"subtract.1077" -> "add.1082";
	"multiply.1081" -> "add.1082";
	"add.525" -> "tuple.1083";
	"add.588" -> "tuple.1083";
	"add.651" -> "tuple.1083";
	"add.714" -> "tuple.1083";
	"add.777" -> "tuple.1083";
	"add.840" -> "tuple.1083";
	"add.903" -> "tuple.1083";
	"add.966" -> "tuple.1083";
	"add.1029" -> "tuple.1083";
	"add.1082" -> "tuple.1083";
	"p16.280" -> "tuple.1083";
	"multiply.1042" -> "tuple.1083";
	"multiply.983" -> "tuple.1083";
	"multiply.919" -> "tuple.1083";
	"multiply.857" -> "tuple.1083";
	"multiply.793" -> "tuple.1083";
	"multiply.731" -> "tuple.1083";
	"multiply.667" -> "tuple.1083";
	"multiply.605" -> "tuple.1083";
	"multiply.541" -> "tuple.1083";
	"multiply.474" -> "tuple.1083";
	"power.455" -> "tuple.1083";
	"add.507" -> "tuple.1083";
	"add.487" -> "tuple.1083";
	"add.635" -> "tuple.1083";
	"add.617" -> "tuple.1083";
	"add.761" -> "tuple.1083";
	"add.743" -> "tuple.1083";
	"add.887" -> "tuple.1083";
	"add.869" -> "tuple.1083";
	"add.1013" -> "tuple.1083";
	"add.995" -> "tuple.1083";
	"add.571" -> "tuple.1083";
	"add.553" -> "tuple.1083";
	"add.697" -> "tuple.1083";
	"add.679" -> "tuple.1083";
	"add.823" -> "tuple.1083";
	"add.805" -> "tuple.1083";
	"add.949" -> "tuple.1083";
	"add.931" -> "tuple.1083";
	"add.1066" -> "tuple.1083";
	"add.1052" -> "tuple.1083";
}