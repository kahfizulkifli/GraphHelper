digraph HloModule {
	"p17.254" [label="p17.254 \n bf16[4,4]"];
	"p30.480" [label="p30.480 \n bf16[] parameter(30), frontend_attributes="];
	"broadcast.481" [label="broadcast.481 \n bf16[4,4]"];
	"multiply.482" [label="multiply.482 \n bf16[4,4]"];
	"p29.479" [label="p29.479 \n bf16[] parameter(29), frontend_attributes="];
	"broadcast.483" [label="broadcast.483 \n bf16[4,4]"];
	"multiply.485" [label="multiply.485 \n bf16[4,4]"];
	"subtract.486" [label="subtract.486 \n bf16[4,4]"];
	"p28.470" [label="p28.470 \n bf16[4,4]"];
	"p27.469" [label="p27.469 \n bf16[] parameter(27), frontend_attributes="];
	"broadcast.471" [label="broadcast.471 \n bf16[4,4]"];
	"multiply.472" [label="multiply.472 \n bf16[4,4]"];
	"p22.395" [label="p22.395 \n bf16[4,4]"];
	"p6.25" [label="p6.25 \n bf16[] parameter(6), frontend_attributes="];
	"p5.24" [label="p5.24 \n bf16[] parameter(5), frontend_attributes="];
	"divide.1" [label="divide.1 \n bf16[] divide(bf16[] %p6.25, bf16[] %p5.24), metadata="];
	"broadcast.53" [label="broadcast.53 \n bf16[1,4]"];
	"p8.75" [label="p8.75 \n bf16[1,4]"];
	"multiply.19" [label="multiply.19 \n bf16[1,4]"];
	"reshape.197" [label="reshape.197 \n bf16[4]"];
	"broadcast.10" [label="broadcast.10 \n bf16[4,4]"];
	"p10.126" [label="p10.126 \n bf16[4,4]"];
	"dot.136" [label="dot.136 \n bf16[4,4]"];
	"p12.177" [label="p12.177 \n bf16[4,4]"];
	"dot.187" [label="dot.187 \n bf16[4,4]"];
	"p18.263" [label="p18.263 \n bf16[4,4]"];
	"transpose.384" [label="transpose.384 \n bf16[4,4]"];
	"dot.1" [label="dot.1 \n bf16[4,4]"];
	"add.396" [label="add.396 \n bf16[4,4]"];
	"constant.1" [label="constant.1 \n bf16[1]"];
	"p23.410" [label="p23.410 \n bf16[1]"];
	"multiply.399" [label="multiply.399 \n bf16[4,4]"];
	"constant.400" [label="constant.400 \n bf16[] constant(0), metadata="];
	"reduce.406" [label="reduce.406 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.407" [label="sqrt.407 \n bf16[] sqrt(bf16[] %reduce.406), metadata="];
	"multiply.409" [label="multiply.409 \n bf16[] multiply(bf16[] %sqrt.407, bf16[] %sqrt.407), metadata="];
	"reshape.13" [label="reshape.13 \n bf16[1]"];
	"add.412" [label="add.412 \n bf16[1]"];
	"p21.361" [label="p21.361 \n bf16[4,4]"];
	"transpose.262" [label="transpose.262 \n bf16[4,4]"];
	"dot.264" [label="dot.264 \n bf16[4,4]"];
	"p16.246" [label="p16.246 \n bf16[4]"];
	"broadcast.268" [label="broadcast.268 \n bf16[4,4]"];
	"add.269" [label="add.269 \n bf16[4,4]"];
	"transpose.350" [label="transpose.350 \n bf16[4,4]"];
	"dot.2" [label="dot.2 \n bf16[4,4]"];
	"add.362" [label="add.362 \n bf16[4,4]"];
	"multiply.365" [label="multiply.365 \n bf16[4,4]"];
	"constant.366" [label="constant.366 \n bf16[] constant(0), metadata="];
	"reduce.372" [label="reduce.372 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.373" [label="sqrt.373 \n bf16[] sqrt(bf16[] %reduce.372), metadata="];
	"multiply.375" [label="multiply.375 \n bf16[] multiply(bf16[] %sqrt.373, bf16[] %sqrt.373), metadata="];
	"reshape.19" [label="reshape.19 \n bf16[1]"];
	"add.414" [label="add.414 \n bf16[1]"];
	"p20.327" [label="p20.327 \n bf16[4,4]"];
	"transpose.245" [label="transpose.245 \n bf16[4,4]"];
	"dot.270" [label="dot.270 \n bf16[4,4]"];
	"p15.237" [label="p15.237 \n bf16[4]"];
	"broadcast.274" [label="broadcast.274 \n bf16[4,4]"];
	"add.275" [label="add.275 \n bf16[4,4]"];
	"transpose.316" [label="transpose.316 \n bf16[4,4]"];
	"dot.3" [label="dot.3 \n bf16[4,4]"];
	"add.328" [label="add.328 \n bf16[4,4]"];
	"multiply.331" [label="multiply.331 \n bf16[4,4]"];
	"constant.332" [label="constant.332 \n bf16[] constant(0), metadata="];
	"reduce.338" [label="reduce.338 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.339" [label="sqrt.339 \n bf16[] sqrt(bf16[] %reduce.338), metadata="];
	"multiply.341" [label="multiply.341 \n bf16[] multiply(bf16[] %sqrt.339, bf16[] %sqrt.339), metadata="];
	"reshape.32" [label="reshape.32 \n bf16[1]"];
	"add.416" [label="add.416 \n bf16[1]"];
	"p19.293" [label="p19.293 \n bf16[1,4]"];
	"transpose.236" [label="transpose.236 \n bf16[4,4]"];
	"dot.276" [label="dot.276 \n bf16[4,4]"];
	"p14.228" [label="p14.228 \n bf16[4]"];
	"broadcast.280" [label="broadcast.280 \n bf16[4,4]"];
	"add.281" [label="add.281 \n bf16[4,4]"];
	"broadcast.56" [label="broadcast.56 \n bf16[4,4]"];
	"multiply.20" [label="multiply.20 \n bf16[4,4]"];
	"convert.2" [label="convert.2 \n f32[4,4]"];
	"convert.1" [label="convert.1 \n bf16[4]"];
	"reshape.37" [label="reshape.37 \n bf16[1,4]"];
	"add.294" [label="add.294 \n bf16[1,4]"];
	"multiply.297" [label="multiply.297 \n bf16[1,4]"];
	"constant.298" [label="constant.298 \n bf16[] constant(0), metadata="];
	"reduce.304" [label="reduce.304 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.305" [label="sqrt.305 \n bf16[] sqrt(bf16[] %reduce.304), metadata="];
	"multiply.307" [label="multiply.307 \n bf16[] multiply(bf16[] %sqrt.305, bf16[] %sqrt.305), metadata="];
	"reshape.41" [label="reshape.41 \n bf16[1]"];
	"add.418" [label="add.418 \n bf16[1]"];
	"p13.205" [label="p13.205 \n bf16[4]"];
	"constant.188" [label="constant.188 \n bf16[] constant(0), metadata="];
	"reduce.194" [label="reduce.194 \n bf16[4]"];
	"add.206" [label="add.206 \n bf16[4]"];
	"multiply.209" [label="multiply.209 \n bf16[4]"];
	"constant.210" [label="constant.210 \n bf16[] constant(0), metadata="];
	"reduce.216" [label="reduce.216 \n bf16[] reduce(bf16[4]"];
	"sqrt.217" [label="sqrt.217 \n bf16[] sqrt(bf16[] %reduce.216), metadata="];
	"multiply.219" [label="multiply.219 \n bf16[] multiply(bf16[] %sqrt.217, bf16[] %sqrt.217), metadata="];
	"reshape.47" [label="reshape.47 \n bf16[1]"];
	"add.420" [label="add.420 \n bf16[1]"];
	"p11.154" [label="p11.154 \n bf16[4]"];
	"constant.137" [label="constant.137 \n bf16[] constant(0), metadata="];
	"reduce.143" [label="reduce.143 \n bf16[4]"];
	"add.155" [label="add.155 \n bf16[4]"];
	"multiply.158" [label="multiply.158 \n bf16[4]"];
	"constant.159" [label="constant.159 \n bf16[] constant(0), metadata="];
	"reduce.165" [label="reduce.165 \n bf16[] reduce(bf16[4]"];
	"sqrt.166" [label="sqrt.166 \n bf16[] sqrt(bf16[] %reduce.165), metadata="];
	"multiply.168" [label="multiply.168 \n bf16[] multiply(bf16[] %sqrt.166, bf16[] %sqrt.166), metadata="];
	"reshape.51" [label="reshape.51 \n bf16[1]"];
	"add.422" [label="add.422 \n bf16[1]"];
	"p9.103" [label="p9.103 \n bf16[4]"];
	"constant.86" [label="constant.86 \n bf16[] constant(0), metadata="];
	"reduce.92" [label="reduce.92 \n bf16[4]"];
	"add.104" [label="add.104 \n bf16[4]"];
	"multiply.107" [label="multiply.107 \n bf16[4]"];
	"constant.108" [label="constant.108 \n bf16[] constant(0), metadata="];
	"reduce.114" [label="reduce.114 \n bf16[] reduce(bf16[4]"];
	"sqrt.115" [label="sqrt.115 \n bf16[] sqrt(bf16[] %reduce.114), metadata="];
	"multiply.117" [label="multiply.117 \n bf16[] multiply(bf16[] %sqrt.115, bf16[] %sqrt.115), metadata="];
	"reshape.55" [label="reshape.55 \n bf16[1]"];
	"add.424" [label="add.424 \n bf16[1]"];
	"p7.52" [label="p7.52 \n bf16[1]"];
	"broadcast.1" [label="broadcast.1 \n bf16[4,1]"];
	"constant.35" [label="constant.35 \n bf16[] constant(0), metadata="];
	"reduce.41" [label="reduce.41 \n bf16[1]"];
	"add.53" [label="add.53 \n bf16[1]"];
	"multiply.21" [label="multiply.21 \n bf16[1]"];
	"add.426" [label="add.426 \n bf16[1]"];
	"constant.6" [label="constant.6 \n bf16[1]"];
	"power.429" [label="power.429 \n bf16[1]"];
	"p4.12" [label="p4.12 \n bf16[] parameter(4), frontend_attributes="];
	"reshape.63" [label="reshape.63 \n bf16[1]"];
	"add.431" [label="add.431 \n bf16[1]"];
	"divide.434" [label="divide.434 \n bf16[1]"];
	"constant.12" [label="constant.12 \n bf16[1]"];
	"compare.441" [label="compare.441 \n pred[1]"];
	"constant.13" [label="constant.13 \n bf16[1]"];
	"select.443" [label="select.443 \n bf16[1]"];
	"reshape.445" [label="reshape.445 \n bf16[] reshape(bf16[1]"];
	"broadcast.447" [label="broadcast.447 \n bf16[4,4]"];
	"multiply.448" [label="multiply.448 \n bf16[4,4]"];
	"p26.463" [label="p26.463 \n bf16[] parameter(26), frontend_attributes="];
	"broadcast.467" [label="broadcast.467 \n bf16[4,4]"];
	"multiply.468" [label="multiply.468 \n bf16[4,4]"];
	"add.473" [label="add.473 \n bf16[4,4]"];
	"p25.450" [label="p25.450 \n bf16[4,4]"];
	"p24.449" [label="p24.449 \n bf16[] parameter(24), frontend_attributes="];
	"broadcast.451" [label="broadcast.451 \n bf16[4,4]"];
	"multiply.452" [label="multiply.452 \n bf16[4,4]"];
	"multiply.454" [label="multiply.454 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"convert.453" [label="convert.453 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.455" [label="broadcast.455 \n bf16[4,4]"];
	"multiply.456" [label="multiply.456 \n bf16[4,4]"];
	"add.457" [label="add.457 \n bf16[4,4]"];
	"sqrt.458" [label="sqrt.458 \n bf16[4,4]"];
	"p2.5" [label="p2.5 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.459" [label="broadcast.459 \n bf16[4,4]"];
	"divide.460" [label="divide.460 \n bf16[4,4]"];
	"p1.3" [label="p1.3 \n bf16[] parameter(1), frontend_attributes="];
	"broadcast.461" [label="broadcast.461 \n bf16[4,4]"];
	"add.462" [label="add.462 \n bf16[4,4]"];
	"divide.488" [label="divide.488 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.487" [label="convert.487 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.489" [label="broadcast.489 \n bf16[4,4]"];
	"multiply.490" [label="multiply.490 \n bf16[4,4]"];
	"add.491" [label="add.491 \n bf16[4,4]"];
	"broadcast.536" [label="broadcast.536 \n bf16[4]"];
	"multiply.537" [label="multiply.537 \n bf16[4]"];
	"broadcast.12" [label="broadcast.12 \n bf16[4]"];
	"multiply.540" [label="multiply.540 \n bf16[4]"];
	"subtract.541" [label="subtract.541 \n bf16[4]"];
	"p32.526" [label="p32.526 \n bf16[4]"];
	"broadcast.527" [label="broadcast.527 \n bf16[4]"];
	"multiply.528" [label="multiply.528 \n bf16[4]"];
	"constant.23" [label="constant.23 \n bf16[1]"];
	"compare.501" [label="compare.501 \n pred[1]"];
	"constant.24" [label="constant.24 \n bf16[1]"];
	"select.503" [label="select.503 \n bf16[1]"];
	"reshape.505" [label="reshape.505 \n bf16[] reshape(bf16[1]"];
	"broadcast.506" [label="broadcast.506 \n bf16[4]"];
	"multiply.507" [label="multiply.507 \n bf16[4]"];
	"broadcast.524" [label="broadcast.524 \n bf16[4]"];
	"multiply.525" [label="multiply.525 \n bf16[4]"];
	"add.529" [label="add.529 \n bf16[4]"];
	"p31.508" [label="p31.508 \n bf16[4]"];
	"broadcast.509" [label="broadcast.509 \n bf16[4]"];
	"multiply.510" [label="multiply.510 \n bf16[4]"];
	"multiply.512" [label="multiply.512 \n bf16[4]"];
	"convert.511" [label="convert.511 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.513" [label="broadcast.513 \n bf16[4]"];
	"multiply.514" [label="multiply.514 \n bf16[4]"];
	"add.515" [label="add.515 \n bf16[4]"];
	"sqrt.516" [label="sqrt.516 \n bf16[4]"];
	"broadcast.517" [label="broadcast.517 \n bf16[4]"];
	"divide.518" [label="divide.518 \n bf16[4]"];
	"broadcast.519" [label="broadcast.519 \n bf16[4]"];
	"add.520" [label="add.520 \n bf16[4]"];
	"divide.543" [label="divide.543 \n bf16[4]"];
	"convert.542" [label="convert.542 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.544" [label="broadcast.544 \n bf16[4]"];
	"multiply.545" [label="multiply.545 \n bf16[4]"];
	"add.546" [label="add.546 \n bf16[4]"];
	"broadcast.591" [label="broadcast.591 \n bf16[4,4]"];
	"multiply.592" [label="multiply.592 \n bf16[4,4]"];
	"broadcast.593" [label="broadcast.593 \n bf16[4,4]"];
	"multiply.595" [label="multiply.595 \n bf16[4,4]"];
	"subtract.596" [label="subtract.596 \n bf16[4,4]"];
	"p34.582" [label="p34.582 \n bf16[4,4]"];
	"broadcast.583" [label="broadcast.583 \n bf16[4,4]"];
	"multiply.584" [label="multiply.584 \n bf16[4,4]"];
	"constant.27" [label="constant.27 \n bf16[1]"];
	"compare.556" [label="compare.556 \n pred[1]"];
	"constant.28" [label="constant.28 \n bf16[1]"];
	"select.558" [label="select.558 \n bf16[1]"];
	"reshape.560" [label="reshape.560 \n bf16[] reshape(bf16[1]"];
	"broadcast.562" [label="broadcast.562 \n bf16[4,4]"];
	"multiply.563" [label="multiply.563 \n bf16[4,4]"];
	"broadcast.580" [label="broadcast.580 \n bf16[4,4]"];
	"multiply.581" [label="multiply.581 \n bf16[4,4]"];
	"add.585" [label="add.585 \n bf16[4,4]"];
	"p33.564" [label="p33.564 \n bf16[4,4]"];
	"broadcast.565" [label="broadcast.565 \n bf16[4,4]"];
	"multiply.566" [label="multiply.566 \n bf16[4,4]"];
	"multiply.568" [label="multiply.568 \n bf16[4,4]"];
	"convert.567" [label="convert.567 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.569" [label="broadcast.569 \n bf16[4,4]"];
	"multiply.570" [label="multiply.570 \n bf16[4,4]"];
	"add.571" [label="add.571 \n bf16[4,4]"];
	"sqrt.572" [label="sqrt.572 \n bf16[4,4]"];
	"broadcast.573" [label="broadcast.573 \n bf16[4,4]"];
	"divide.574" [label="divide.574 \n bf16[4,4]"];
	"broadcast.575" [label="broadcast.575 \n bf16[4,4]"];
	"add.576" [label="add.576 \n bf16[4,4]"];
	"divide.598" [label="divide.598 \n bf16[4,4]"];
	"convert.597" [label="convert.597 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.599" [label="broadcast.599 \n bf16[4,4]"];
	"multiply.600" [label="multiply.600 \n bf16[4,4]"];
	"add.601" [label="add.601 \n bf16[4,4]"];
	"broadcast.646" [label="broadcast.646 \n bf16[4]"];
	"multiply.647" [label="multiply.647 \n bf16[4]"];
	"broadcast.14" [label="broadcast.14 \n bf16[4]"];
	"multiply.650" [label="multiply.650 \n bf16[4]"];
	"subtract.651" [label="subtract.651 \n bf16[4]"];
	"p36.636" [label="p36.636 \n bf16[4]"];
	"broadcast.637" [label="broadcast.637 \n bf16[4]"];
	"multiply.638" [label="multiply.638 \n bf16[4]"];
	"constant.32" [label="constant.32 \n bf16[1]"];
	"compare.611" [label="compare.611 \n pred[1]"];
	"constant.33" [label="constant.33 \n bf16[1]"];
	"select.613" [label="select.613 \n bf16[1]"];
	"reshape.615" [label="reshape.615 \n bf16[] reshape(bf16[1]"];
	"broadcast.616" [label="broadcast.616 \n bf16[4]"];
	"multiply.617" [label="multiply.617 \n bf16[4]"];
	"broadcast.634" [label="broadcast.634 \n bf16[4]"];
	"multiply.635" [label="multiply.635 \n bf16[4]"];
	"add.639" [label="add.639 \n bf16[4]"];
	"p35.618" [label="p35.618 \n bf16[4]"];
	"broadcast.619" [label="broadcast.619 \n bf16[4]"];
	"multiply.620" [label="multiply.620 \n bf16[4]"];
	"multiply.622" [label="multiply.622 \n bf16[4]"];
	"convert.621" [label="convert.621 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.623" [label="broadcast.623 \n bf16[4]"];
	"multiply.624" [label="multiply.624 \n bf16[4]"];
	"add.625" [label="add.625 \n bf16[4]"];
	"sqrt.626" [label="sqrt.626 \n bf16[4]"];
	"broadcast.627" [label="broadcast.627 \n bf16[4]"];
	"divide.628" [label="divide.628 \n bf16[4]"];
	"broadcast.629" [label="broadcast.629 \n bf16[4]"];
	"add.630" [label="add.630 \n bf16[4]"];
	"divide.653" [label="divide.653 \n bf16[4]"];
	"convert.652" [label="convert.652 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.654" [label="broadcast.654 \n bf16[4]"];
	"multiply.655" [label="multiply.655 \n bf16[4]"];
	"add.656" [label="add.656 \n bf16[4]"];
	"broadcast.701" [label="broadcast.701 \n bf16[4,4]"];
	"multiply.702" [label="multiply.702 \n bf16[4,4]"];
	"broadcast.703" [label="broadcast.703 \n bf16[4,4]"];
	"multiply.705" [label="multiply.705 \n bf16[4,4]"];
	"subtract.706" [label="subtract.706 \n bf16[4,4]"];
	"p38.692" [label="p38.692 \n bf16[4,4]"];
	"broadcast.693" [label="broadcast.693 \n bf16[4,4]"];
	"multiply.694" [label="multiply.694 \n bf16[4,4]"];
	"constant.37" [label="constant.37 \n bf16[1]"];
	"compare.666" [label="compare.666 \n pred[1]"];
	"constant.38" [label="constant.38 \n bf16[1]"];
	"select.668" [label="select.668 \n bf16[1]"];
	"reshape.670" [label="reshape.670 \n bf16[] reshape(bf16[1]"];
	"broadcast.672" [label="broadcast.672 \n bf16[4,4]"];
	"multiply.673" [label="multiply.673 \n bf16[4,4]"];
	"broadcast.690" [label="broadcast.690 \n bf16[4,4]"];
	"multiply.691" [label="multiply.691 \n bf16[4,4]"];
	"add.695" [label="add.695 \n bf16[4,4]"];
	"p37.674" [label="p37.674 \n bf16[4,4]"];
	"broadcast.675" [label="broadcast.675 \n bf16[4,4]"];
	"multiply.676" [label="multiply.676 \n bf16[4,4]"];
	"multiply.678" [label="multiply.678 \n bf16[4,4]"];
	"convert.677" [label="convert.677 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.679" [label="broadcast.679 \n bf16[4,4]"];
	"multiply.680" [label="multiply.680 \n bf16[4,4]"];
	"add.681" [label="add.681 \n bf16[4,4]"];
	"sqrt.682" [label="sqrt.682 \n bf16[4,4]"];
	"broadcast.683" [label="broadcast.683 \n bf16[4,4]"];
	"divide.684" [label="divide.684 \n bf16[4,4]"];
	"broadcast.685" [label="broadcast.685 \n bf16[4,4]"];
	"add.686" [label="add.686 \n bf16[4,4]"];
	"divide.708" [label="divide.708 \n bf16[4,4]"];
	"convert.707" [label="convert.707 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.709" [label="broadcast.709 \n bf16[4,4]"];
	"multiply.710" [label="multiply.710 \n bf16[4,4]"];
	"add.711" [label="add.711 \n bf16[4,4]"];
	"broadcast.756" [label="broadcast.756 \n bf16[4]"];
	"multiply.757" [label="multiply.757 \n bf16[4]"];
	"broadcast.17" [label="broadcast.17 \n bf16[4]"];
	"multiply.760" [label="multiply.760 \n bf16[4]"];
	"subtract.761" [label="subtract.761 \n bf16[4]"];
	"p40.746" [label="p40.746 \n bf16[4]"];
	"broadcast.747" [label="broadcast.747 \n bf16[4]"];
	"multiply.748" [label="multiply.748 \n bf16[4]"];
	"constant.42" [label="constant.42 \n bf16[1]"];
	"compare.721" [label="compare.721 \n pred[1]"];
	"constant.43" [label="constant.43 \n bf16[1]"];
	"select.723" [label="select.723 \n bf16[1]"];
	"reshape.725" [label="reshape.725 \n bf16[] reshape(bf16[1]"];
	"broadcast.726" [label="broadcast.726 \n bf16[4]"];
	"multiply.727" [label="multiply.727 \n bf16[4]"];
	"broadcast.744" [label="broadcast.744 \n bf16[4]"];
	"multiply.745" [label="multiply.745 \n bf16[4]"];
	"add.749" [label="add.749 \n bf16[4]"];
	"p39.728" [label="p39.728 \n bf16[4]"];
	"broadcast.729" [label="broadcast.729 \n bf16[4]"];
	"multiply.730" [label="multiply.730 \n bf16[4]"];
	"multiply.732" [label="multiply.732 \n bf16[4]"];
	"convert.731" [label="convert.731 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.733" [label="broadcast.733 \n bf16[4]"];
	"multiply.734" [label="multiply.734 \n bf16[4]"];
	"add.735" [label="add.735 \n bf16[4]"];
	"sqrt.736" [label="sqrt.736 \n bf16[4]"];
	"broadcast.737" [label="broadcast.737 \n bf16[4]"];
	"divide.738" [label="divide.738 \n bf16[4]"];
	"broadcast.739" [label="broadcast.739 \n bf16[4]"];
	"add.740" [label="add.740 \n bf16[4]"];
	"divide.763" [label="divide.763 \n bf16[4]"];
	"convert.762" [label="convert.762 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.764" [label="broadcast.764 \n bf16[4]"];
	"multiply.765" [label="multiply.765 \n bf16[4]"];
	"add.766" [label="add.766 \n bf16[4]"];
	"broadcast.811" [label="broadcast.811 \n bf16[1,4]"];
	"multiply.812" [label="multiply.812 \n bf16[1,4]"];
	"broadcast.813" [label="broadcast.813 \n bf16[1,4]"];
	"multiply.815" [label="multiply.815 \n bf16[1,4]"];
	"subtract.816" [label="subtract.816 \n bf16[1,4]"];
	"p42.802" [label="p42.802 \n bf16[1,4]"];
	"broadcast.803" [label="broadcast.803 \n bf16[1,4]"];
	"multiply.804" [label="multiply.804 \n bf16[1,4]"];
	"constant.45" [label="constant.45 \n bf16[1]"];
	"compare.776" [label="compare.776 \n pred[1]"];
	"constant.46" [label="constant.46 \n bf16[1]"];
	"select.778" [label="select.778 \n bf16[1]"];
	"reshape.780" [label="reshape.780 \n bf16[] reshape(bf16[1]"];
	"broadcast.49" [label="broadcast.49 \n bf16[1,4]"];
	"multiply.783" [label="multiply.783 \n bf16[1,4]"];
	"broadcast.800" [label="broadcast.800 \n bf16[1,4]"];
	"multiply.801" [label="multiply.801 \n bf16[1,4]"];
	"add.805" [label="add.805 \n bf16[1,4]"];
	"p41.784" [label="p41.784 \n bf16[1,4]"];
	"broadcast.785" [label="broadcast.785 \n bf16[1,4]"];
	"multiply.786" [label="multiply.786 \n bf16[1,4]"];
	"multiply.788" [label="multiply.788 \n bf16[1,4]"];
	"convert.787" [label="convert.787 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.789" [label="broadcast.789 \n bf16[1,4]"];
	"multiply.790" [label="multiply.790 \n bf16[1,4]"];
	"add.791" [label="add.791 \n bf16[1,4]"];
	"sqrt.792" [label="sqrt.792 \n bf16[1,4]"];
	"broadcast.793" [label="broadcast.793 \n bf16[1,4]"];
	"divide.794" [label="divide.794 \n bf16[1,4]"];
	"broadcast.795" [label="broadcast.795 \n bf16[1,4]"];
	"add.796" [label="add.796 \n bf16[1,4]"];
	"divide.818" [label="divide.818 \n bf16[1,4]"];
	"convert.817" [label="convert.817 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.819" [label="broadcast.819 \n bf16[1,4]"];
	"multiply.820" [label="multiply.820 \n bf16[1,4]"];
	"add.821" [label="add.821 \n bf16[1,4]"];
	"p45.859" [label="p45.859 \n bf16[1]"];
	"reshape.142" [label="reshape.142 \n bf16[1]"];
	"multiply.861" [label="multiply.861 \n bf16[1]"];
	"constant.47" [label="constant.47 \n bf16[1]"];
	"multiply.864" [label="multiply.864 \n bf16[1]"];
	"subtract.865" [label="subtract.865 \n bf16[1]"];
	"p44.851" [label="p44.851 \n bf16[1]"];
	"reshape.147" [label="reshape.147 \n bf16[1]"];
	"multiply.853" [label="multiply.853 \n bf16[1]"];
	"constant.50" [label="constant.50 \n bf16[1]"];
	"compare.831" [label="compare.831 \n pred[1]"];
	"constant.51" [label="constant.51 \n bf16[1]"];
	"select.833" [label="select.833 \n bf16[1]"];
	"multiply.834" [label="multiply.834 \n bf16[1]"];
	"reshape.152" [label="reshape.152 \n bf16[1]"];
	"multiply.850" [label="multiply.850 \n bf16[1]"];
	"add.854" [label="add.854 \n bf16[1]"];
	"p43.835" [label="p43.835 \n bf16[1]"];
	"reshape.153" [label="reshape.153 \n bf16[1]"];
	"multiply.837" [label="multiply.837 \n bf16[1]"];
	"multiply.839" [label="multiply.839 \n bf16[1]"];
	"convert.838" [label="convert.838 \n bf16[] convert(f32[] %p3.6), metadata="];
	"reshape.154" [label="reshape.154 \n bf16[1]"];
	"multiply.841" [label="multiply.841 \n bf16[1]"];
	"add.842" [label="add.842 \n bf16[1]"];
	"sqrt.843" [label="sqrt.843 \n bf16[1]"];
	"reshape.155" [label="reshape.155 \n bf16[1]"];
	"divide.845" [label="divide.845 \n bf16[1]"];
	"reshape.156" [label="reshape.156 \n bf16[1]"];
	"add.847" [label="add.847 \n bf16[1]"];
	"divide.867" [label="divide.867 \n bf16[1]"];
	"convert.866" [label="convert.866 \n bf16[] convert(f32[] %p0.1), metadata="];
	"reshape.157" [label="reshape.157 \n bf16[1]"];
	"multiply.869" [label="multiply.869 \n bf16[1]"];
	"add.870" [label="add.870 \n bf16[1]"];
	"tuple.871" [label="tuple.871 \n (bf16[4,4]"]; 
 	"p30.480" -> "broadcast.481";
	"p17.254" -> "multiply.482";
	"broadcast.481" -> "multiply.482";
	"p29.479" -> "broadcast.483";
	"multiply.482" -> "multiply.485";
	"broadcast.483" -> "multiply.485";
	"p17.254" -> "subtract.486";
	"multiply.485" -> "subtract.486";
	"p27.469" -> "broadcast.471";
	"p28.470" -> "multiply.472";
	"broadcast.471" -> "multiply.472";
	"p6.25" -> "divide.1";
	"p5.24" -> "divide.1";
	"divide.1" -> "broadcast.53";
	"p8.75" -> "custom-call.15";
	"broadcast.53" -> "multiply.19";
	"custom-call.15" -> "multiply.19";
	"multiply.19" -> "reshape.197";
	"reshape.197" -> "broadcast.10";
	"p10.126" -> "custom-call.16";
	"broadcast.10" -> "dot.136";
	"custom-call.16" -> "dot.136";
	"p12.177" -> "custom-call.17";
	"dot.136" -> "dot.187";
	"custom-call.17" -> "dot.187";
	"p18.263" -> "transpose.384";
	"dot.187" -> "dot.1";
	"transpose.384" -> "dot.1";
	"dot.1" -> "custom-call.18";
	"p22.395" -> "add.396";
	"custom-call.18" -> "add.396";
	"add.396" -> "multiply.399";
	"add.396" -> "multiply.399";
	"multiply.399" -> "reduce.406";
	"constant.400" -> "reduce.406";
	"AddComputation.402" -> "reduce.406";
	"reduce.406" -> "sqrt.407";
	"sqrt.407" -> "multiply.409";
	"sqrt.407" -> "multiply.409";
	"multiply.409" -> "reshape.13";
	"p23.410" -> "add.412";
	"reshape.13" -> "add.412";
	"p17.254" -> "custom-call.19";
	"custom-call.19" -> "transpose.262";
	"p18.263" -> "dot.264";
	"transpose.262" -> "dot.264";
	"p16.246" -> "custom-call.20";
	"custom-call.20" -> "broadcast.268";
	"dot.264" -> "add.269";
	"broadcast.268" -> "add.269";
	"add.269" -> "transpose.350";
	"dot.136" -> "dot.2";
	"transpose.350" -> "dot.2";
	"dot.2" -> "custom-call.21";
	"p21.361" -> "add.362";
	"custom-call.21" -> "add.362";
	"add.362" -> "multiply.365";
	"add.362" -> "multiply.365";
	"multiply.365" -> "reduce.372";
	"constant.366" -> "reduce.372";
	"AddComputation.368" -> "reduce.372";
	"reduce.372" -> "sqrt.373";
	"sqrt.373" -> "multiply.375";
	"sqrt.373" -> "multiply.375";
	"multiply.375" -> "reshape.19";
	"add.412" -> "add.414";
	"reshape.19" -> "add.414";
	"custom-call.17" -> "transpose.245";
	"add.269" -> "dot.270";
	"transpose.245" -> "dot.270";
	"p15.237" -> "custom-call.22";
	"custom-call.22" -> "broadcast.274";
	"dot.270" -> "add.275";
	"broadcast.274" -> "add.275";
	"add.275" -> "transpose.316";
	"broadcast.10" -> "dot.3";
	"transpose.316" -> "dot.3";
	"dot.3" -> "custom-call.23";
	"p20.327" -> "add.328";
	"custom-call.23" -> "add.328";
	"add.328" -> "multiply.331";
	"add.328" -> "multiply.331";
	"multiply.331" -> "reduce.338";
	"constant.332" -> "reduce.338";
	"AddComputation.334" -> "reduce.338";
	"reduce.338" -> "sqrt.339";
	"sqrt.339" -> "multiply.341";
	"sqrt.339" -> "multiply.341";
	"multiply.341" -> "reshape.32";
	"add.414" -> "add.416";
	"reshape.32" -> "add.416";
	"custom-call.16" -> "transpose.236";
	"add.275" -> "dot.276";
	"transpose.236" -> "dot.276";
	"p14.228" -> "custom-call.24";
	"custom-call.24" -> "broadcast.280";
	"dot.276" -> "add.281";
	"broadcast.280" -> "add.281";
	"divide.1" -> "broadcast.56";
	"add.281" -> "multiply.20";
	"broadcast.56" -> "multiply.20";
	"multiply.20" -> "convert.2";
	"convert.2" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"convert.1" -> "reshape.37";
	"reshape.37" -> "custom-call.25";
	"p19.293" -> "add.294";
	"custom-call.25" -> "add.294";
	"add.294" -> "multiply.297";
	"add.294" -> "multiply.297";
	"multiply.297" -> "reduce.304";
	"constant.298" -> "reduce.304";
	"AddComputation.300" -> "reduce.304";
	"reduce.304" -> "sqrt.305";
	"sqrt.305" -> "multiply.307";
	"sqrt.305" -> "multiply.307";
	"multiply.307" -> "reshape.41";
	"add.416" -> "add.418";
	"reshape.41" -> "add.418";
	"dot.187" -> "reduce.194";
	"constant.188" -> "reduce.194";
	"AddComputation.190" -> "reduce.194";
	"reduce.194" -> "custom-call.26";
	"p13.205" -> "add.206";
	"custom-call.26" -> "add.206";
	"add.206" -> "multiply.209";
	"add.206" -> "multiply.209";
	"multiply.209" -> "reduce.216";
	"constant.210" -> "reduce.216";
	"AddComputation.212" -> "reduce.216";
	"reduce.216" -> "sqrt.217";
	"sqrt.217" -> "multiply.219";
	"sqrt.217" -> "multiply.219";
	"multiply.219" -> "reshape.47";
	"add.418" -> "add.420";
	"reshape.47" -> "add.420";
	"dot.136" -> "reduce.143";
	"constant.137" -> "reduce.143";
	"AddComputation.139" -> "reduce.143";
	"reduce.143" -> "custom-call.27";
	"p11.154" -> "add.155";
	"custom-call.27" -> "add.155";
	"add.155" -> "multiply.158";
	"add.155" -> "multiply.158";
	"multiply.158" -> "reduce.165";
	"constant.159" -> "reduce.165";
	"AddComputation.161" -> "reduce.165";
	"reduce.165" -> "sqrt.166";
	"sqrt.166" -> "multiply.168";
	"sqrt.166" -> "multiply.168";
	"multiply.168" -> "reshape.51";
	"add.420" -> "add.422";
	"reshape.51" -> "add.422";
	"broadcast.10" -> "reduce.92";
	"constant.86" -> "reduce.92";
	"AddComputation.88" -> "reduce.92";
	"reduce.92" -> "custom-call.28";
	"p9.103" -> "add.104";
	"custom-call.28" -> "add.104";
	"add.104" -> "multiply.107";
	"add.104" -> "multiply.107";
	"multiply.107" -> "reduce.114";
	"constant.108" -> "reduce.114";
	"AddComputation.110" -> "reduce.114";
	"reduce.114" -> "sqrt.115";
	"sqrt.115" -> "multiply.117";
	"sqrt.115" -> "multiply.117";
	"multiply.117" -> "reshape.55";
	"add.422" -> "add.424";
	"reshape.55" -> "add.424";
	"divide.1" -> "broadcast.1";
	"broadcast.1" -> "reduce.41";
	"constant.35" -> "reduce.41";
	"AddComputation.37" -> "reduce.41";
	"reduce.41" -> "custom-call.29";
	"p7.52" -> "add.53";
	"custom-call.29" -> "add.53";
	"add.53" -> "multiply.21";
	"add.53" -> "multiply.21";
	"add.424" -> "add.426";
	"multiply.21" -> "add.426";
	"add.426" -> "power.429";
	"constant.6" -> "power.429";
	"p4.12" -> "reshape.63";
	"power.429" -> "add.431";
	"reshape.63" -> "add.431";
	"constant.1" -> "divide.434";
	"add.431" -> "divide.434";
	"divide.434" -> "compare.441";
	"constant.12" -> "compare.441";
	"compare.441" -> "select.443";
	"divide.434" -> "select.443";
	"constant.13" -> "select.443";
	"select.443" -> "reshape.445";
	"reshape.445" -> "broadcast.447";
	"add.396" -> "multiply.448";
	"broadcast.447" -> "multiply.448";
	"p26.463" -> "broadcast.467";
	"multiply.448" -> "multiply.468";
	"broadcast.467" -> "multiply.468";
	"multiply.472" -> "add.473";
	"multiply.468" -> "add.473";
	"p24.449" -> "broadcast.451";
	"p25.450" -> "multiply.452";
	"broadcast.451" -> "multiply.452";
	"multiply.448" -> "multiply.454";
	"multiply.448" -> "multiply.454";
	"p3.6" -> "convert.453";
	"convert.453" -> "broadcast.455";
	"multiply.454" -> "multiply.456";
	"broadcast.455" -> "multiply.456";
	"multiply.452" -> "add.457";
	"multiply.456" -> "add.457";
	"add.457" -> "sqrt.458";
	"p2.5" -> "broadcast.459";
	"sqrt.458" -> "divide.460";
	"broadcast.459" -> "divide.460";
	"p1.3" -> "broadcast.461";
	"divide.460" -> "add.462";
	"broadcast.461" -> "add.462";
	"add.473" -> "divide.488";
	"add.462" -> "divide.488";
	"p0.1" -> "convert.487";
	"convert.487" -> "broadcast.489";
	"divide.488" -> "multiply.490";
	"broadcast.489" -> "multiply.490";
	"subtract.486" -> "add.491";
	"multiply.490" -> "add.491";
	"p30.480" -> "broadcast.536";
	"p16.246" -> "multiply.537";
	"broadcast.536" -> "multiply.537";
	"constant.16" -> "broadcast.12";
	"multiply.537" -> "multiply.540";
	"broadcast.12" -> "multiply.540";
	"p16.246" -> "subtract.541";
	"multiply.540" -> "subtract.541";
	"p27.469" -> "broadcast.527";
	"p32.526" -> "multiply.528";
	"broadcast.527" -> "multiply.528";
	"divide.434" -> "compare.501";
	"constant.23" -> "compare.501";
	"compare.501" -> "select.503";
	"divide.434" -> "select.503";
	"constant.24" -> "select.503";
	"select.503" -> "reshape.505";
	"reshape.505" -> "broadcast.506";
	"add.206" -> "multiply.507";
	"broadcast.506" -> "multiply.507";
	"p26.463" -> "broadcast.524";
	"multiply.507" -> "multiply.525";
	"broadcast.524" -> "multiply.525";
	"multiply.528" -> "add.529";
	"multiply.525" -> "add.529";
	"p24.449" -> "broadcast.509";
	"p31.508" -> "multiply.510";
	"broadcast.509" -> "multiply.510";
	"multiply.507" -> "multiply.512";
	"multiply.507" -> "multiply.512";
	"p3.6" -> "convert.511";
	"convert.511" -> "broadcast.513";
	"multiply.512" -> "multiply.514";
	"broadcast.513" -> "multiply.514";
	"multiply.510" -> "add.515";
	"multiply.514" -> "add.515";
	"add.515" -> "sqrt.516";
	"p2.5" -> "broadcast.517";
	"sqrt.516" -> "divide.518";
	"broadcast.517" -> "divide.518";
	"p1.3" -> "broadcast.519";
	"divide.518" -> "add.520";
	"broadcast.519" -> "add.520";
	"add.529" -> "divide.543";
	"add.520" -> "divide.543";
	"p0.1" -> "convert.542";
	"convert.542" -> "broadcast.544";
	"divide.543" -> "multiply.545";
	"broadcast.544" -> "multiply.545";
	"subtract.541" -> "add.546";
	"multiply.545" -> "add.546";
	"p30.480" -> "broadcast.591";
	"p12.177" -> "multiply.592";
	"broadcast.591" -> "multiply.592";
	"p29.479" -> "broadcast.593";
	"multiply.592" -> "multiply.595";
	"broadcast.593" -> "multiply.595";
	"p12.177" -> "subtract.596";
	"multiply.595" -> "subtract.596";
	"p27.469" -> "broadcast.583";
	"p34.582" -> "multiply.584";
	"broadcast.583" -> "multiply.584";
	"divide.434" -> "compare.556";
	"constant.27" -> "compare.556";
	"compare.556" -> "select.558";
	"divide.434" -> "select.558";
	"constant.28" -> "select.558";
	"select.558" -> "reshape.560";
	"reshape.560" -> "broadcast.562";
	"add.362" -> "multiply.563";
	"broadcast.562" -> "multiply.563";
	"p26.463" -> "broadcast.580";
	"multiply.563" -> "multiply.581";
	"broadcast.580" -> "multiply.581";
	"multiply.584" -> "add.585";
	"multiply.581" -> "add.585";
	"p24.449" -> "broadcast.565";
	"p33.564" -> "multiply.566";
	"broadcast.565" -> "multiply.566";
	"multiply.563" -> "multiply.568";
	"multiply.563" -> "multiply.568";
	"p3.6" -> "convert.567";
	"convert.567" -> "broadcast.569";
	"multiply.568" -> "multiply.570";
	"broadcast.569" -> "multiply.570";
	"multiply.566" -> "add.571";
	"multiply.570" -> "add.571";
	"add.571" -> "sqrt.572";
	"p2.5" -> "broadcast.573";
	"sqrt.572" -> "divide.574";
	"broadcast.573" -> "divide.574";
	"p1.3" -> "broadcast.575";
	"divide.574" -> "add.576";
	"broadcast.575" -> "add.576";
	"add.585" -> "divide.598";
	"add.576" -> "divide.598";
	"p0.1" -> "convert.597";
	"convert.597" -> "broadcast.599";
	"divide.598" -> "multiply.600";
	"broadcast.599" -> "multiply.600";
	"subtract.596" -> "add.601";
	"multiply.600" -> "add.601";
	"p30.480" -> "broadcast.646";
	"p15.237" -> "multiply.647";
	"broadcast.646" -> "multiply.647";
	"constant.30" -> "broadcast.14";
	"multiply.647" -> "multiply.650";
	"broadcast.14" -> "multiply.650";
	"p15.237" -> "subtract.651";
	"multiply.650" -> "subtract.651";
	"p27.469" -> "broadcast.637";
	"p36.636" -> "multiply.638";
	"broadcast.637" -> "multiply.638";
	"divide.434" -> "compare.611";
	"constant.32" -> "compare.611";
	"compare.611" -> "select.613";
	"divide.434" -> "select.613";
	"constant.33" -> "select.613";
	"select.613" -> "reshape.615";
	"reshape.615" -> "broadcast.616";
	"add.155" -> "multiply.617";
	"broadcast.616" -> "multiply.617";
	"p26.463" -> "broadcast.634";
	"multiply.617" -> "multiply.635";
	"broadcast.634" -> "multiply.635";
	"multiply.638" -> "add.639";
	"multiply.635" -> "add.639";
	"p24.449" -> "broadcast.619";
	"p35.618" -> "multiply.620";
	"broadcast.619" -> "multiply.620";
	"multiply.617" -> "multiply.622";
	"multiply.617" -> "multiply.622";
	"p3.6" -> "convert.621";
	"convert.621" -> "broadcast.623";
	"multiply.622" -> "multiply.624";
	"broadcast.623" -> "multiply.624";
	"multiply.620" -> "add.625";
	"multiply.624" -> "add.625";
	"add.625" -> "sqrt.626";
	"p2.5" -> "broadcast.627";
	"sqrt.626" -> "divide.628";
	"broadcast.627" -> "divide.628";
	"p1.3" -> "broadcast.629";
	"divide.628" -> "add.630";
	"broadcast.629" -> "add.630";
	"add.639" -> "divide.653";
	"add.630" -> "divide.653";
	"p0.1" -> "convert.652";
	"convert.652" -> "broadcast.654";
	"divide.653" -> "multiply.655";
	"broadcast.654" -> "multiply.655";
	"subtract.651" -> "add.656";
	"multiply.655" -> "add.656";
	"p30.480" -> "broadcast.701";
	"p10.126" -> "multiply.702";
	"broadcast.701" -> "multiply.702";
	"p29.479" -> "broadcast.703";
	"multiply.702" -> "multiply.705";
	"broadcast.703" -> "multiply.705";
	"p10.126" -> "subtract.706";
	"multiply.705" -> "subtract.706";
	"p27.469" -> "broadcast.693";
	"p38.692" -> "multiply.694";
	"broadcast.693" -> "multiply.694";
	"divide.434" -> "compare.666";
	"constant.37" -> "compare.666";
	"compare.666" -> "select.668";
	"divide.434" -> "select.668";
	"constant.38" -> "select.668";
	"select.668" -> "reshape.670";
	"reshape.670" -> "broadcast.672";
	"add.328" -> "multiply.673";
	"broadcast.672" -> "multiply.673";
	"p26.463" -> "broadcast.690";
	"multiply.673" -> "multiply.691";
	"broadcast.690" -> "multiply.691";
	"multiply.694" -> "add.695";
	"multiply.691" -> "add.695";
	"p24.449" -> "broadcast.675";
	"p37.674" -> "multiply.676";
	"broadcast.675" -> "multiply.676";
	"multiply.673" -> "multiply.678";
	"multiply.673" -> "multiply.678";
	"p3.6" -> "convert.677";
	"convert.677" -> "broadcast.679";
	"multiply.678" -> "multiply.680";
	"broadcast.679" -> "multiply.680";
	"multiply.676" -> "add.681";
	"multiply.680" -> "add.681";
	"add.681" -> "sqrt.682";
	"p2.5" -> "broadcast.683";
	"sqrt.682" -> "divide.684";
	"broadcast.683" -> "divide.684";
	"p1.3" -> "broadcast.685";
	"divide.684" -> "add.686";
	"broadcast.685" -> "add.686";
	"add.695" -> "divide.708";
	"add.686" -> "divide.708";
	"p0.1" -> "convert.707";
	"convert.707" -> "broadcast.709";
	"divide.708" -> "multiply.710";
	"broadcast.709" -> "multiply.710";
	"subtract.706" -> "add.711";
	"multiply.710" -> "add.711";
	"p30.480" -> "broadcast.756";
	"p14.228" -> "multiply.757";
	"broadcast.756" -> "multiply.757";
	"constant.40" -> "broadcast.17";
	"multiply.757" -> "multiply.760";
	"broadcast.17" -> "multiply.760";
	"p14.228" -> "subtract.761";
	"multiply.760" -> "subtract.761";
	"p27.469" -> "broadcast.747";
	"p40.746" -> "multiply.748";
	"broadcast.747" -> "multiply.748";
	"divide.434" -> "compare.721";
	"constant.42" -> "compare.721";
	"compare.721" -> "select.723";
	"divide.434" -> "select.723";
	"constant.43" -> "select.723";
	"select.723" -> "reshape.725";
	"reshape.725" -> "broadcast.726";
	"add.104" -> "multiply.727";
	"broadcast.726" -> "multiply.727";
	"p26.463" -> "broadcast.744";
	"multiply.727" -> "multiply.745";
	"broadcast.744" -> "multiply.745";
	"multiply.748" -> "add.749";
	"multiply.745" -> "add.749";
	"p24.449" -> "broadcast.729";
	"p39.728" -> "multiply.730";
	"broadcast.729" -> "multiply.730";
	"multiply.727" -> "multiply.732";
	"multiply.727" -> "multiply.732";
	"p3.6" -> "convert.731";
	"convert.731" -> "broadcast.733";
	"multiply.732" -> "multiply.734";
	"broadcast.733" -> "multiply.734";
	"multiply.730" -> "add.735";
	"multiply.734" -> "add.735";
	"add.735" -> "sqrt.736";
	"p2.5" -> "broadcast.737";
	"sqrt.736" -> "divide.738";
	"broadcast.737" -> "divide.738";
	"p1.3" -> "broadcast.739";
	"divide.738" -> "add.740";
	"broadcast.739" -> "add.740";
	"add.749" -> "divide.763";
	"add.740" -> "divide.763";
	"p0.1" -> "convert.762";
	"convert.762" -> "broadcast.764";
	"divide.763" -> "multiply.765";
	"broadcast.764" -> "multiply.765";
	"subtract.761" -> "add.766";
	"multiply.765" -> "add.766";
	"p30.480" -> "broadcast.811";
	"p8.75" -> "multiply.812";
	"broadcast.811" -> "multiply.812";
	"p29.479" -> "broadcast.813";
	"multiply.812" -> "multiply.815";
	"broadcast.813" -> "multiply.815";
	"p8.75" -> "subtract.816";
	"multiply.815" -> "subtract.816";
	"p27.469" -> "broadcast.803";
	"p42.802" -> "multiply.804";
	"broadcast.803" -> "multiply.804";
	"divide.434" -> "compare.776";
	"constant.45" -> "compare.776";
	"compare.776" -> "select.778";
	"divide.434" -> "select.778";
	"constant.46" -> "select.778";
	"select.778" -> "reshape.780";
	"reshape.780" -> "broadcast.49";
	"add.294" -> "multiply.783";
	"broadcast.49" -> "multiply.783";
	"p26.463" -> "broadcast.800";
	"multiply.783" -> "multiply.801";
	"broadcast.800" -> "multiply.801";
	"multiply.804" -> "add.805";
	"multiply.801" -> "add.805";
	"p24.449" -> "broadcast.785";
	"p41.784" -> "multiply.786";
	"broadcast.785" -> "multiply.786";
	"multiply.783" -> "multiply.788";
	"multiply.783" -> "multiply.788";
	"p3.6" -> "convert.787";
	"convert.787" -> "broadcast.789";
	"multiply.788" -> "multiply.790";
	"broadcast.789" -> "multiply.790";
	"multiply.786" -> "add.791";
	"multiply.790" -> "add.791";
	"add.791" -> "sqrt.792";
	"p2.5" -> "broadcast.793";
	"sqrt.792" -> "divide.794";
	"broadcast.793" -> "divide.794";
	"p1.3" -> "broadcast.795";
	"divide.794" -> "add.796";
	"broadcast.795" -> "add.796";
	"add.805" -> "divide.818";
	"add.796" -> "divide.818";
	"p0.1" -> "convert.817";
	"convert.817" -> "broadcast.819";
	"divide.818" -> "multiply.820";
	"broadcast.819" -> "multiply.820";
	"subtract.816" -> "add.821";
	"multiply.820" -> "add.821";
	"p30.480" -> "reshape.142";
	"p45.859" -> "multiply.861";
	"reshape.142" -> "multiply.861";
	"multiply.861" -> "multiply.864";
	"constant.47" -> "multiply.864";
	"p45.859" -> "subtract.865";
	"multiply.864" -> "subtract.865";
	"p27.469" -> "reshape.147";
	"p44.851" -> "multiply.853";
	"reshape.147" -> "multiply.853";
	"divide.434" -> "compare.831";
	"constant.50" -> "compare.831";
	"compare.831" -> "select.833";
	"divide.434" -> "select.833";
	"constant.51" -> "select.833";
	"add.53" -> "multiply.834";
	"select.833" -> "multiply.834";
	"p26.463" -> "reshape.152";
	"multiply.834" -> "multiply.850";
	"reshape.152" -> "multiply.850";
	"multiply.853" -> "add.854";
	"multiply.850" -> "add.854";
	"p24.449" -> "reshape.153";
	"p43.835" -> "multiply.837";
	"reshape.153" -> "multiply.837";
	"multiply.834" -> "multiply.839";
	"multiply.834" -> "multiply.839";
	"p3.6" -> "convert.838";
	"convert.838" -> "reshape.154";
	"multiply.839" -> "multiply.841";
	"reshape.154" -> "multiply.841";
	"multiply.837" -> "add.842";
	"multiply.841" -> "add.842";
	"add.842" -> "sqrt.843";
	"p2.5" -> "reshape.155";
	"sqrt.843" -> "divide.845";
	"reshape.155" -> "divide.845";
	"p1.3" -> "reshape.156";
	"divide.845" -> "add.847";
	"reshape.156" -> "add.847";
	"add.854" -> "divide.867";
	"add.847" -> "divide.867";
	"p0.1" -> "convert.866";
	"convert.866" -> "reshape.157";
	"divide.867" -> "multiply.869";
	"reshape.157" -> "multiply.869";
	"subtract.865" -> "add.870";
	"multiply.869" -> "add.870";
	"add.491" -> "tuple.871";
	"add.546" -> "tuple.871";
	"add.601" -> "tuple.871";
	"add.656" -> "tuple.871";
	"add.711" -> "tuple.871";
	"add.766" -> "tuple.871";
	"add.821" -> "tuple.871";
	"add.870" -> "tuple.871";
	"multiply.834" -> "tuple.871";
	"multiply.783" -> "tuple.871";
	"multiply.727" -> "tuple.871";
	"multiply.673" -> "tuple.871";
	"multiply.617" -> "tuple.871";
	"multiply.563" -> "tuple.871";
	"multiply.507" -> "tuple.871";
	"multiply.448" -> "tuple.871";
	"add.473" -> "tuple.871";
	"add.457" -> "tuple.871";
	"add.585" -> "tuple.871";
	"add.571" -> "tuple.871";
	"add.695" -> "tuple.871";
	"add.681" -> "tuple.871";
	"add.805" -> "tuple.871";
	"add.791" -> "tuple.871";
	"add.529" -> "tuple.871";
	"add.515" -> "tuple.871";
	"add.639" -> "tuple.871";
	"add.625" -> "tuple.871";
	"add.749" -> "tuple.871";
	"add.735" -> "tuple.871";
	"add.854" -> "tuple.871";
	"add.842" -> "tuple.871";
	"p18.263" -> "tuple.871";
	"power.429" -> "tuple.871";
}