digraph HloModule {
	"p20.222" [label="p20.222 \n bf16[4,4]"];
	"p19.221" [label="p19.221 \n bf16[] parameter(19), frontend_attributes="];
	"broadcast.223" [label="broadcast.223 \n bf16[4,4]"];
	"multiply.224" [label="multiply.224 \n bf16[4,4]"];
	"p18.220" [label="p18.220 \n bf16[] parameter(18), frontend_attributes="];
	"broadcast.225" [label="broadcast.225 \n bf16[4,4]"];
	"multiply.227" [label="multiply.227 \n bf16[4,4]"];
	"subtract.228" [label="subtract.228 \n bf16[4,4]"];
	"p17.211" [label="p17.211 \n bf16[4,4]"];
	"p16.210" [label="p16.210 \n bf16[] parameter(16), frontend_attributes="];
	"broadcast.212" [label="broadcast.212 \n bf16[4,4]"];
	"multiply.213" [label="multiply.213 \n bf16[4,4]"];
	"p11.39" [label="p11.39 \n bf16[1]"];
	"p10.35" [label="p10.35 \n bf16[4]"];
	"p9.31" [label="p9.31 \n bf16[4]"];
	"p8.27" [label="p8.27 \n bf16[1,4]"];
	"p7.23" [label="p7.23 \n bf16[4,4]"];
	"p6.19" [label="p6.19 \n bf16[4,4]"];
	"p5.17" [label="p5.17 \n f32[] parameter(5), frontend_attributes="];
	"convert.42" [label="convert.42 \n bf16[] convert(f32[] %p5.17), metadata="];
	"constant.3" [label="constant.3 \n bf16[1]"];
	"p12.143" [label="p12.143 \n bf16[1]"];
	"multiply.132" [label="multiply.132 \n bf16[4,4]"];
	"constant.133" [label="constant.133 \n bf16[] constant(0), metadata="];
	"reduce.139" [label="reduce.139 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.140" [label="sqrt.140 \n bf16[] sqrt(bf16[] %reduce.139), metadata="];
	"multiply.142" [label="multiply.142 \n bf16[] multiply(bf16[] %sqrt.140, bf16[] %sqrt.140), metadata="];
	"reshape.1" [label="reshape.1 \n bf16[1]"];
	"add.145" [label="add.145 \n bf16[1]"];
	"multiply.119" [label="multiply.119 \n bf16[4,4]"];
	"constant.120" [label="constant.120 \n bf16[] constant(0), metadata="];
	"reduce.126" [label="reduce.126 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.127" [label="sqrt.127 \n bf16[] sqrt(bf16[] %reduce.126), metadata="];
	"multiply.129" [label="multiply.129 \n bf16[] multiply(bf16[] %sqrt.127, bf16[] %sqrt.127), metadata="];
	"reshape.2" [label="reshape.2 \n bf16[1]"];
	"add.147" [label="add.147 \n bf16[1]"];
	"multiply.106" [label="multiply.106 \n bf16[1,4]"];
	"constant.107" [label="constant.107 \n bf16[] constant(0), metadata="];
	"reduce.113" [label="reduce.113 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.114" [label="sqrt.114 \n bf16[] sqrt(bf16[] %reduce.113), metadata="];
	"multiply.116" [label="multiply.116 \n bf16[] multiply(bf16[] %sqrt.114, bf16[] %sqrt.114), metadata="];
	"reshape.3" [label="reshape.3 \n bf16[1]"];
	"add.149" [label="add.149 \n bf16[1]"];
	"multiply.93" [label="multiply.93 \n bf16[4]"];
	"constant.94" [label="constant.94 \n bf16[] constant(0), metadata="];
	"reduce.100" [label="reduce.100 \n bf16[] reduce(bf16[4]"];
	"sqrt.101" [label="sqrt.101 \n bf16[] sqrt(bf16[] %reduce.100), metadata="];
	"multiply.103" [label="multiply.103 \n bf16[] multiply(bf16[] %sqrt.101, bf16[] %sqrt.101), metadata="];
	"reshape.4" [label="reshape.4 \n bf16[1]"];
	"add.151" [label="add.151 \n bf16[1]"];
	"multiply.80" [label="multiply.80 \n bf16[4]"];
	"constant.81" [label="constant.81 \n bf16[] constant(0), metadata="];
	"reduce.87" [label="reduce.87 \n bf16[] reduce(bf16[4]"];
	"sqrt.88" [label="sqrt.88 \n bf16[] sqrt(bf16[] %reduce.87), metadata="];
	"multiply.90" [label="multiply.90 \n bf16[] multiply(bf16[] %sqrt.88, bf16[] %sqrt.88), metadata="];
	"reshape.5" [label="reshape.5 \n bf16[1]"];
	"add.153" [label="add.153 \n bf16[1]"];
	"multiply.11" [label="multiply.11 \n bf16[1]"];
	"add.155" [label="add.155 \n bf16[1]"];
	"constant.4" [label="constant.4 \n bf16[1]"];
	"power.170" [label="power.170 \n bf16[1]"];
	"p4.12" [label="p4.12 \n bf16[] parameter(4), frontend_attributes="];
	"reshape.14" [label="reshape.14 \n bf16[1]"];
	"add.172" [label="add.172 \n bf16[1]"];
	"divide.175" [label="divide.175 \n bf16[1]"];
	"constant.8" [label="constant.8 \n bf16[1]"];
	"compare.182" [label="compare.182 \n pred[1]"];
	"constant.9" [label="constant.9 \n bf16[1]"];
	"select.184" [label="select.184 \n bf16[1]"];
	"reshape.186" [label="reshape.186 \n bf16[] reshape(bf16[1]"];
	"broadcast.188" [label="broadcast.188 \n bf16[4,4]"];
	"multiply.189" [label="multiply.189 \n bf16[4,4]"];
	"p15.204" [label="p15.204 \n bf16[] parameter(15), frontend_attributes="];
	"broadcast.208" [label="broadcast.208 \n bf16[4,4]"];
	"multiply.209" [label="multiply.209 \n bf16[4,4]"];
	"add.214" [label="add.214 \n bf16[4,4]"];
	"p14.191" [label="p14.191 \n bf16[4,4]"];
	"p13.190" [label="p13.190 \n bf16[] parameter(13), frontend_attributes="];
	"broadcast.192" [label="broadcast.192 \n bf16[4,4]"];
	"multiply.193" [label="multiply.193 \n bf16[4,4]"];
	"multiply.195" [label="multiply.195 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"convert.194" [label="convert.194 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.196" [label="broadcast.196 \n bf16[4,4]"];
	"multiply.197" [label="multiply.197 \n bf16[4,4]"];
	"add.198" [label="add.198 \n bf16[4,4]"];
	"sqrt.199" [label="sqrt.199 \n bf16[4,4]"];
	"p2.5" [label="p2.5 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.200" [label="broadcast.200 \n bf16[4,4]"];
	"divide.201" [label="divide.201 \n bf16[4,4]"];
	"p1.3" [label="p1.3 \n bf16[] parameter(1), frontend_attributes="];
	"broadcast.202" [label="broadcast.202 \n bf16[4,4]"];
	"add.203" [label="add.203 \n bf16[4,4]"];
	"divide.230" [label="divide.230 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.229" [label="convert.229 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.231" [label="broadcast.231 \n bf16[4,4]"];
	"multiply.232" [label="multiply.232 \n bf16[4,4]"];
	"add.233" [label="add.233 \n bf16[4,4]"];
	"p23.278" [label="p23.278 \n bf16[4]"];
	"broadcast.279" [label="broadcast.279 \n bf16[4]"];
	"multiply.280" [label="multiply.280 \n bf16[4]"];
	"broadcast.1" [label="broadcast.1 \n bf16[4]"];
	"multiply.283" [label="multiply.283 \n bf16[4]"];
	"subtract.284" [label="subtract.284 \n bf16[4]"];
	"p22.268" [label="p22.268 \n bf16[4]"];
	"broadcast.269" [label="broadcast.269 \n bf16[4]"];
	"multiply.270" [label="multiply.270 \n bf16[4]"];
	"constant.16" [label="constant.16 \n bf16[1]"];
	"compare.243" [label="compare.243 \n pred[1]"];
	"constant.17" [label="constant.17 \n bf16[1]"];
	"select.245" [label="select.245 \n bf16[1]"];
	"reshape.247" [label="reshape.247 \n bf16[] reshape(bf16[1]"];
	"broadcast.248" [label="broadcast.248 \n bf16[4]"];
	"multiply.249" [label="multiply.249 \n bf16[4]"];
	"broadcast.266" [label="broadcast.266 \n bf16[4]"];
	"multiply.267" [label="multiply.267 \n bf16[4]"];
	"add.271" [label="add.271 \n bf16[4]"];
	"p21.250" [label="p21.250 \n bf16[4]"];
	"broadcast.251" [label="broadcast.251 \n bf16[4]"];
	"multiply.252" [label="multiply.252 \n bf16[4]"];
	"multiply.254" [label="multiply.254 \n bf16[4]"];
	"convert.253" [label="convert.253 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.255" [label="broadcast.255 \n bf16[4]"];
	"multiply.256" [label="multiply.256 \n bf16[4]"];
	"add.257" [label="add.257 \n bf16[4]"];
	"sqrt.258" [label="sqrt.258 \n bf16[4]"];
	"broadcast.259" [label="broadcast.259 \n bf16[4]"];
	"divide.260" [label="divide.260 \n bf16[4]"];
	"broadcast.261" [label="broadcast.261 \n bf16[4]"];
	"add.262" [label="add.262 \n bf16[4]"];
	"divide.286" [label="divide.286 \n bf16[4]"];
	"convert.285" [label="convert.285 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.287" [label="broadcast.287 \n bf16[4]"];
	"multiply.288" [label="multiply.288 \n bf16[4]"];
	"add.289" [label="add.289 \n bf16[4]"];
	"p26.334" [label="p26.334 \n bf16[4,4]"];
	"broadcast.335" [label="broadcast.335 \n bf16[4,4]"];
	"multiply.336" [label="multiply.336 \n bf16[4,4]"];
	"broadcast.337" [label="broadcast.337 \n bf16[4,4]"];
	"multiply.339" [label="multiply.339 \n bf16[4,4]"];
	"subtract.340" [label="subtract.340 \n bf16[4,4]"];
	"p25.325" [label="p25.325 \n bf16[4,4]"];
	"broadcast.326" [label="broadcast.326 \n bf16[4,4]"];
	"multiply.327" [label="multiply.327 \n bf16[4,4]"];
	"constant.20" [label="constant.20 \n bf16[1]"];
	"compare.299" [label="compare.299 \n pred[1]"];
	"constant.21" [label="constant.21 \n bf16[1]"];
	"select.301" [label="select.301 \n bf16[1]"];
	"reshape.303" [label="reshape.303 \n bf16[] reshape(bf16[1]"];
	"broadcast.305" [label="broadcast.305 \n bf16[4,4]"];
	"multiply.306" [label="multiply.306 \n bf16[4,4]"];
	"broadcast.323" [label="broadcast.323 \n bf16[4,4]"];
	"multiply.324" [label="multiply.324 \n bf16[4,4]"];
	"add.328" [label="add.328 \n bf16[4,4]"];
	"p24.307" [label="p24.307 \n bf16[4,4]"];
	"broadcast.308" [label="broadcast.308 \n bf16[4,4]"];
	"multiply.309" [label="multiply.309 \n bf16[4,4]"];
	"multiply.311" [label="multiply.311 \n bf16[4,4]"];
	"convert.310" [label="convert.310 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.312" [label="broadcast.312 \n bf16[4,4]"];
	"multiply.313" [label="multiply.313 \n bf16[4,4]"];
	"add.314" [label="add.314 \n bf16[4,4]"];
	"sqrt.315" [label="sqrt.315 \n bf16[4,4]"];
	"broadcast.316" [label="broadcast.316 \n bf16[4,4]"];
	"divide.317" [label="divide.317 \n bf16[4,4]"];
	"broadcast.318" [label="broadcast.318 \n bf16[4,4]"];
	"add.319" [label="add.319 \n bf16[4,4]"];
	"divide.342" [label="divide.342 \n bf16[4,4]"];
	"convert.341" [label="convert.341 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.343" [label="broadcast.343 \n bf16[4,4]"];
	"multiply.344" [label="multiply.344 \n bf16[4,4]"];
	"add.345" [label="add.345 \n bf16[4,4]"];
	"p29.390" [label="p29.390 \n bf16[4]"];
	"broadcast.391" [label="broadcast.391 \n bf16[4]"];
	"multiply.392" [label="multiply.392 \n bf16[4]"];
	"broadcast.3" [label="broadcast.3 \n bf16[4]"];
	"multiply.395" [label="multiply.395 \n bf16[4]"];
	"subtract.396" [label="subtract.396 \n bf16[4]"];
	"p28.380" [label="p28.380 \n bf16[4]"];
	"broadcast.381" [label="broadcast.381 \n bf16[4]"];
	"multiply.382" [label="multiply.382 \n bf16[4]"];
	"constant.27" [label="constant.27 \n bf16[1]"];
	"compare.355" [label="compare.355 \n pred[1]"];
	"constant.28" [label="constant.28 \n bf16[1]"];
	"select.357" [label="select.357 \n bf16[1]"];
	"reshape.359" [label="reshape.359 \n bf16[] reshape(bf16[1]"];
	"broadcast.360" [label="broadcast.360 \n bf16[4]"];
	"multiply.361" [label="multiply.361 \n bf16[4]"];
	"broadcast.378" [label="broadcast.378 \n bf16[4]"];
	"multiply.379" [label="multiply.379 \n bf16[4]"];
	"add.383" [label="add.383 \n bf16[4]"];
	"p27.362" [label="p27.362 \n bf16[4]"];
	"broadcast.363" [label="broadcast.363 \n bf16[4]"];
	"multiply.364" [label="multiply.364 \n bf16[4]"];
	"multiply.366" [label="multiply.366 \n bf16[4]"];
	"convert.365" [label="convert.365 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.367" [label="broadcast.367 \n bf16[4]"];
	"multiply.368" [label="multiply.368 \n bf16[4]"];
	"add.369" [label="add.369 \n bf16[4]"];
	"sqrt.370" [label="sqrt.370 \n bf16[4]"];
	"broadcast.371" [label="broadcast.371 \n bf16[4]"];
	"divide.372" [label="divide.372 \n bf16[4]"];
	"broadcast.373" [label="broadcast.373 \n bf16[4]"];
	"add.374" [label="add.374 \n bf16[4]"];
	"divide.398" [label="divide.398 \n bf16[4]"];
	"convert.397" [label="convert.397 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.399" [label="broadcast.399 \n bf16[4]"];
	"multiply.400" [label="multiply.400 \n bf16[4]"];
	"add.401" [label="add.401 \n bf16[4]"];
	"p32.446" [label="p32.446 \n bf16[1,4]"];
	"broadcast.447" [label="broadcast.447 \n bf16[1,4]"];
	"multiply.448" [label="multiply.448 \n bf16[1,4]"];
	"broadcast.449" [label="broadcast.449 \n bf16[1,4]"];
	"multiply.451" [label="multiply.451 \n bf16[1,4]"];
	"subtract.452" [label="subtract.452 \n bf16[1,4]"];
	"p31.437" [label="p31.437 \n bf16[1,4]"];
	"broadcast.438" [label="broadcast.438 \n bf16[1,4]"];
	"multiply.439" [label="multiply.439 \n bf16[1,4]"];
	"constant.31" [label="constant.31 \n bf16[1]"];
	"compare.411" [label="compare.411 \n pred[1]"];
	"constant.32" [label="constant.32 \n bf16[1]"];
	"select.413" [label="select.413 \n bf16[1]"];
	"reshape.415" [label="reshape.415 \n bf16[] reshape(bf16[1]"];
	"broadcast.14" [label="broadcast.14 \n bf16[1,4]"];
	"multiply.418" [label="multiply.418 \n bf16[1,4]"];
	"broadcast.435" [label="broadcast.435 \n bf16[1,4]"];
	"multiply.436" [label="multiply.436 \n bf16[1,4]"];
	"add.440" [label="add.440 \n bf16[1,4]"];
	"p30.419" [label="p30.419 \n bf16[1,4]"];
	"broadcast.420" [label="broadcast.420 \n bf16[1,4]"];
	"multiply.421" [label="multiply.421 \n bf16[1,4]"];
	"multiply.423" [label="multiply.423 \n bf16[1,4]"];
	"convert.422" [label="convert.422 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.424" [label="broadcast.424 \n bf16[1,4]"];
	"multiply.425" [label="multiply.425 \n bf16[1,4]"];
	"add.426" [label="add.426 \n bf16[1,4]"];
	"sqrt.427" [label="sqrt.427 \n bf16[1,4]"];
	"broadcast.428" [label="broadcast.428 \n bf16[1,4]"];
	"divide.429" [label="divide.429 \n bf16[1,4]"];
	"broadcast.430" [label="broadcast.430 \n bf16[1,4]"];
	"add.431" [label="add.431 \n bf16[1,4]"];
	"divide.454" [label="divide.454 \n bf16[1,4]"];
	"convert.453" [label="convert.453 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.455" [label="broadcast.455 \n bf16[1,4]"];
	"multiply.456" [label="multiply.456 \n bf16[1,4]"];
	"add.457" [label="add.457 \n bf16[1,4]"];
	"p35.495" [label="p35.495 \n bf16[1]"];
	"reshape.68" [label="reshape.68 \n bf16[1]"];
	"multiply.497" [label="multiply.497 \n bf16[1]"];
	"constant.33" [label="constant.33 \n bf16[1]"];
	"multiply.500" [label="multiply.500 \n bf16[1]"];
	"subtract.501" [label="subtract.501 \n bf16[1]"];
	"p34.487" [label="p34.487 \n bf16[1]"];
	"reshape.71" [label="reshape.71 \n bf16[1]"];
	"multiply.489" [label="multiply.489 \n bf16[1]"];
	"constant.37" [label="constant.37 \n bf16[1]"];
	"compare.467" [label="compare.467 \n pred[1]"];
	"constant.39" [label="constant.39 \n bf16[1]"];
	"select.469" [label="select.469 \n bf16[1]"];
	"multiply.470" [label="multiply.470 \n bf16[1]"];
	"reshape.76" [label="reshape.76 \n bf16[1]"];
	"multiply.486" [label="multiply.486 \n bf16[1]"];
	"add.490" [label="add.490 \n bf16[1]"];
	"p33.471" [label="p33.471 \n bf16[1]"];
	"reshape.77" [label="reshape.77 \n bf16[1]"];
	"multiply.473" [label="multiply.473 \n bf16[1]"];
	"multiply.475" [label="multiply.475 \n bf16[1]"];
	"convert.474" [label="convert.474 \n bf16[] convert(f32[] %p3.6), metadata="];
	"reshape.78" [label="reshape.78 \n bf16[1]"];
	"multiply.477" [label="multiply.477 \n bf16[1]"];
	"add.478" [label="add.478 \n bf16[1]"];
	"sqrt.479" [label="sqrt.479 \n bf16[1]"];
	"reshape.79" [label="reshape.79 \n bf16[1]"];
	"divide.481" [label="divide.481 \n bf16[1]"];
	"reshape.80" [label="reshape.80 \n bf16[1]"];
	"add.483" [label="add.483 \n bf16[1]"];
	"divide.503" [label="divide.503 \n bf16[1]"];
	"convert.502" [label="convert.502 \n bf16[] convert(f32[] %p0.1), metadata="];
	"reshape.81" [label="reshape.81 \n bf16[1]"];
	"multiply.505" [label="multiply.505 \n bf16[1]"];
	"add.506" [label="add.506 \n bf16[1]"];
	"tuple.507" [label="tuple.507 \n (bf16[4,4]"]; 
 	"p19.221" -> "broadcast.223";
	"p20.222" -> "multiply.224";
	"broadcast.223" -> "multiply.224";
	"p18.220" -> "broadcast.225";
	"multiply.224" -> "multiply.227";
	"broadcast.225" -> "multiply.227";
	"p20.222" -> "subtract.228";
	"multiply.227" -> "subtract.228";
	"p16.210" -> "broadcast.212";
	"p17.211" -> "multiply.213";
	"broadcast.212" -> "multiply.213";
	"p5.17" -> "convert.42";
	"p11.39" -> "all-reduce.55";
	"p10.35" -> "all-reduce.55";
	"p9.31" -> "all-reduce.55";
	"p8.27" -> "all-reduce.55";
	"p7.23" -> "all-reduce.55";
	"p6.19" -> "all-reduce.55";
	"convert.42" -> "all-reduce.55";
	"AddComputation.51" -> "all-reduce.55";
	"all-reduce.55" -> "get-tuple-element.61";
	"get-tuple-element.61" -> "multiply.132";
	"get-tuple-element.61" -> "multiply.132";
	"multiply.132" -> "reduce.139";
	"constant.133" -> "reduce.139";
	"AddComputation.135" -> "reduce.139";
	"reduce.139" -> "sqrt.140";
	"sqrt.140" -> "multiply.142";
	"sqrt.140" -> "multiply.142";
	"multiply.142" -> "reshape.1";
	"p12.143" -> "add.145";
	"reshape.1" -> "add.145";
	"all-reduce.55" -> "get-tuple-element.60";
	"get-tuple-element.60" -> "multiply.119";
	"get-tuple-element.60" -> "multiply.119";
	"multiply.119" -> "reduce.126";
	"constant.120" -> "reduce.126";
	"AddComputation.122" -> "reduce.126";
	"reduce.126" -> "sqrt.127";
	"sqrt.127" -> "multiply.129";
	"sqrt.127" -> "multiply.129";
	"multiply.129" -> "reshape.2";
	"add.145" -> "add.147";
	"reshape.2" -> "add.147";
	"all-reduce.55" -> "get-tuple-element.59";
	"get-tuple-element.59" -> "multiply.106";
	"get-tuple-element.59" -> "multiply.106";
	"multiply.106" -> "reduce.113";
	"constant.107" -> "reduce.113";
	"AddComputation.109" -> "reduce.113";
	"reduce.113" -> "sqrt.114";
	"sqrt.114" -> "multiply.116";
	"sqrt.114" -> "multiply.116";
	"multiply.116" -> "reshape.3";
	"add.147" -> "add.149";
	"reshape.3" -> "add.149";
	"all-reduce.55" -> "get-tuple-element.58";
	"get-tuple-element.58" -> "multiply.93";
	"get-tuple-element.58" -> "multiply.93";
	"multiply.93" -> "reduce.100";
	"constant.94" -> "reduce.100";
	"AddComputation.96" -> "reduce.100";
	"reduce.100" -> "sqrt.101";
	"sqrt.101" -> "multiply.103";
	"sqrt.101" -> "multiply.103";
	"multiply.103" -> "reshape.4";
	"add.149" -> "add.151";
	"reshape.4" -> "add.151";
	"all-reduce.55" -> "get-tuple-element.57";
	"get-tuple-element.57" -> "multiply.80";
	"get-tuple-element.57" -> "multiply.80";
	"multiply.80" -> "reduce.87";
	"constant.81" -> "reduce.87";
	"AddComputation.83" -> "reduce.87";
	"reduce.87" -> "sqrt.88";
	"sqrt.88" -> "multiply.90";
	"sqrt.88" -> "multiply.90";
	"multiply.90" -> "reshape.5";
	"add.151" -> "add.153";
	"reshape.5" -> "add.153";
	"all-reduce.55" -> "get-tuple-element.56";
	"get-tuple-element.56" -> "multiply.11";
	"get-tuple-element.56" -> "multiply.11";
	"add.153" -> "add.155";
	"multiply.11" -> "add.155";
	"all-reduce.55" -> "get-tuple-element.161";
	"add.155" -> "all-reduce.166";
	"get-tuple-element.161" -> "all-reduce.166";
	"AddComputation.162" -> "all-reduce.166";
	"all-reduce.166" -> "get-tuple-element.167";
	"get-tuple-element.167" -> "power.170";
	"constant.4" -> "power.170";
	"p4.12" -> "reshape.14";
	"power.170" -> "add.172";
	"reshape.14" -> "add.172";
	"constant.3" -> "divide.175";
	"add.172" -> "divide.175";
	"divide.175" -> "compare.182";
	"constant.8" -> "compare.182";
	"compare.182" -> "select.184";
	"divide.175" -> "select.184";
	"constant.9" -> "select.184";
	"select.184" -> "reshape.186";
	"reshape.186" -> "broadcast.188";
	"get-tuple-element.61" -> "multiply.189";
	"broadcast.188" -> "multiply.189";
	"p15.204" -> "broadcast.208";
	"multiply.189" -> "multiply.209";
	"broadcast.208" -> "multiply.209";
	"multiply.213" -> "add.214";
	"multiply.209" -> "add.214";
	"p13.190" -> "broadcast.192";
	"p14.191" -> "multiply.193";
	"broadcast.192" -> "multiply.193";
	"multiply.189" -> "multiply.195";
	"multiply.189" -> "multiply.195";
	"p3.6" -> "convert.194";
	"convert.194" -> "broadcast.196";
	"multiply.195" -> "multiply.197";
	"broadcast.196" -> "multiply.197";
	"multiply.193" -> "add.198";
	"multiply.197" -> "add.198";
	"add.198" -> "sqrt.199";
	"p2.5" -> "broadcast.200";
	"sqrt.199" -> "divide.201";
	"broadcast.200" -> "divide.201";
	"p1.3" -> "broadcast.202";
	"divide.201" -> "add.203";
	"broadcast.202" -> "add.203";
	"add.214" -> "divide.230";
	"add.203" -> "divide.230";
	"p0.1" -> "convert.229";
	"convert.229" -> "broadcast.231";
	"divide.230" -> "multiply.232";
	"broadcast.231" -> "multiply.232";
	"subtract.228" -> "add.233";
	"multiply.232" -> "add.233";
	"p19.221" -> "broadcast.279";
	"p23.278" -> "multiply.280";
	"broadcast.279" -> "multiply.280";
	"constant.13" -> "broadcast.1";
	"multiply.280" -> "multiply.283";
	"broadcast.1" -> "multiply.283";
	"p23.278" -> "subtract.284";
	"multiply.283" -> "subtract.284";
	"p16.210" -> "broadcast.269";
	"p22.268" -> "multiply.270";
	"broadcast.269" -> "multiply.270";
	"divide.175" -> "compare.243";
	"constant.16" -> "compare.243";
	"compare.243" -> "select.245";
	"divide.175" -> "select.245";
	"constant.17" -> "select.245";
	"select.245" -> "reshape.247";
	"reshape.247" -> "broadcast.248";
	"get-tuple-element.58" -> "multiply.249";
	"broadcast.248" -> "multiply.249";
	"p15.204" -> "broadcast.266";
	"multiply.249" -> "multiply.267";
	"broadcast.266" -> "multiply.267";
	"multiply.270" -> "add.271";
	"multiply.267" -> "add.271";
	"p13.190" -> "broadcast.251";
	"p21.250" -> "multiply.252";
	"broadcast.251" -> "multiply.252";
	"multiply.249" -> "multiply.254";
	"multiply.249" -> "multiply.254";
	"p3.6" -> "convert.253";
	"convert.253" -> "broadcast.255";
	"multiply.254" -> "multiply.256";
	"broadcast.255" -> "multiply.256";
	"multiply.252" -> "add.257";
	"multiply.256" -> "add.257";
	"add.257" -> "sqrt.258";
	"p2.5" -> "broadcast.259";
	"sqrt.258" -> "divide.260";
	"broadcast.259" -> "divide.260";
	"p1.3" -> "broadcast.261";
	"divide.260" -> "add.262";
	"broadcast.261" -> "add.262";
	"add.271" -> "divide.286";
	"add.262" -> "divide.286";
	"p0.1" -> "convert.285";
	"convert.285" -> "broadcast.287";
	"divide.286" -> "multiply.288";
	"broadcast.287" -> "multiply.288";
	"subtract.284" -> "add.289";
	"multiply.288" -> "add.289";
	"p19.221" -> "broadcast.335";
	"p26.334" -> "multiply.336";
	"broadcast.335" -> "multiply.336";
	"p18.220" -> "broadcast.337";
	"multiply.336" -> "multiply.339";
	"broadcast.337" -> "multiply.339";
	"p26.334" -> "subtract.340";
	"multiply.339" -> "subtract.340";
	"p16.210" -> "broadcast.326";
	"p25.325" -> "multiply.327";
	"broadcast.326" -> "multiply.327";
	"divide.175" -> "compare.299";
	"constant.20" -> "compare.299";
	"compare.299" -> "select.301";
	"divide.175" -> "select.301";
	"constant.21" -> "select.301";
	"select.301" -> "reshape.303";
	"reshape.303" -> "broadcast.305";
	"get-tuple-element.60" -> "multiply.306";
	"broadcast.305" -> "multiply.306";
	"p15.204" -> "broadcast.323";
	"multiply.306" -> "multiply.324";
	"broadcast.323" -> "multiply.324";
	"multiply.327" -> "add.328";
	"multiply.324" -> "add.328";
	"p13.190" -> "broadcast.308";
	"p24.307" -> "multiply.309";
	"broadcast.308" -> "multiply.309";
	"multiply.306" -> "multiply.311";
	"multiply.306" -> "multiply.311";
	"p3.6" -> "convert.310";
	"convert.310" -> "broadcast.312";
	"multiply.311" -> "multiply.313";
	"broadcast.312" -> "multiply.313";
	"multiply.309" -> "add.314";
	"multiply.313" -> "add.314";
	"add.314" -> "sqrt.315";
	"p2.5" -> "broadcast.316";
	"sqrt.315" -> "divide.317";
	"broadcast.316" -> "divide.317";
	"p1.3" -> "broadcast.318";
	"divide.317" -> "add.319";
	"broadcast.318" -> "add.319";
	"add.328" -> "divide.342";
	"add.319" -> "divide.342";
	"p0.1" -> "convert.341";
	"convert.341" -> "broadcast.343";
	"divide.342" -> "multiply.344";
	"broadcast.343" -> "multiply.344";
	"subtract.340" -> "add.345";
	"multiply.344" -> "add.345";
	"p19.221" -> "broadcast.391";
	"p29.390" -> "multiply.392";
	"broadcast.391" -> "multiply.392";
	"constant.24" -> "broadcast.3";
	"multiply.392" -> "multiply.395";
	"broadcast.3" -> "multiply.395";
	"p29.390" -> "subtract.396";
	"multiply.395" -> "subtract.396";
	"p16.210" -> "broadcast.381";
	"p28.380" -> "multiply.382";
	"broadcast.381" -> "multiply.382";
	"divide.175" -> "compare.355";
	"constant.27" -> "compare.355";
	"compare.355" -> "select.357";
	"divide.175" -> "select.357";
	"constant.28" -> "select.357";
	"select.357" -> "reshape.359";
	"reshape.359" -> "broadcast.360";
	"get-tuple-element.57" -> "multiply.361";
	"broadcast.360" -> "multiply.361";
	"p15.204" -> "broadcast.378";
	"multiply.361" -> "multiply.379";
	"broadcast.378" -> "multiply.379";
	"multiply.382" -> "add.383";
	"multiply.379" -> "add.383";
	"p13.190" -> "broadcast.363";
	"p27.362" -> "multiply.364";
	"broadcast.363" -> "multiply.364";
	"multiply.361" -> "multiply.366";
	"multiply.361" -> "multiply.366";
	"p3.6" -> "convert.365";
	"convert.365" -> "broadcast.367";
	"multiply.366" -> "multiply.368";
	"broadcast.367" -> "multiply.368";
	"multiply.364" -> "add.369";
	"multiply.368" -> "add.369";
	"add.369" -> "sqrt.370";
	"p2.5" -> "broadcast.371";
	"sqrt.370" -> "divide.372";
	"broadcast.371" -> "divide.372";
	"p1.3" -> "broadcast.373";
	"divide.372" -> "add.374";
	"broadcast.373" -> "add.374";
	"add.383" -> "divide.398";
	"add.374" -> "divide.398";
	"p0.1" -> "convert.397";
	"convert.397" -> "broadcast.399";
	"divide.398" -> "multiply.400";
	"broadcast.399" -> "multiply.400";
	"subtract.396" -> "add.401";
	"multiply.400" -> "add.401";
	"p19.221" -> "broadcast.447";
	"p32.446" -> "multiply.448";
	"broadcast.447" -> "multiply.448";
	"p18.220" -> "broadcast.449";
	"multiply.448" -> "multiply.451";
	"broadcast.449" -> "multiply.451";
	"p32.446" -> "subtract.452";
	"multiply.451" -> "subtract.452";
	"p16.210" -> "broadcast.438";
	"p31.437" -> "multiply.439";
	"broadcast.438" -> "multiply.439";
	"divide.175" -> "compare.411";
	"constant.31" -> "compare.411";
	"compare.411" -> "select.413";
	"divide.175" -> "select.413";
	"constant.32" -> "select.413";
	"select.413" -> "reshape.415";
	"reshape.415" -> "broadcast.14";
	"get-tuple-element.59" -> "multiply.418";
	"broadcast.14" -> "multiply.418";
	"p15.204" -> "broadcast.435";
	"multiply.418" -> "multiply.436";
	"broadcast.435" -> "multiply.436";
	"multiply.439" -> "add.440";
	"multiply.436" -> "add.440";
	"p13.190" -> "broadcast.420";
	"p30.419" -> "multiply.421";
	"broadcast.420" -> "multiply.421";
	"multiply.418" -> "multiply.423";
	"multiply.418" -> "multiply.423";
	"p3.6" -> "convert.422";
	"convert.422" -> "broadcast.424";
	"multiply.423" -> "multiply.425";
	"broadcast.424" -> "multiply.425";
	"multiply.421" -> "add.426";
	"multiply.425" -> "add.426";
	"add.426" -> "sqrt.427";
	"p2.5" -> "broadcast.428";
	"sqrt.427" -> "divide.429";
	"broadcast.428" -> "divide.429";
	"p1.3" -> "broadcast.430";
	"divide.429" -> "add.431";
	"broadcast.430" -> "add.431";
	"add.440" -> "divide.454";
	"add.431" -> "divide.454";
	"p0.1" -> "convert.453";
	"convert.453" -> "broadcast.455";
	"divide.454" -> "multiply.456";
	"broadcast.455" -> "multiply.456";
	"subtract.452" -> "add.457";
	"multiply.456" -> "add.457";
	"p19.221" -> "reshape.68";
	"p35.495" -> "multiply.497";
	"reshape.68" -> "multiply.497";
	"multiply.497" -> "multiply.500";
	"constant.33" -> "multiply.500";
	"p35.495" -> "subtract.501";
	"multiply.500" -> "subtract.501";
	"p16.210" -> "reshape.71";
	"p34.487" -> "multiply.489";
	"reshape.71" -> "multiply.489";
	"divide.175" -> "compare.467";
	"constant.37" -> "compare.467";
	"compare.467" -> "select.469";
	"divide.175" -> "select.469";
	"constant.39" -> "select.469";
	"get-tuple-element.56" -> "multiply.470";
	"select.469" -> "multiply.470";
	"p15.204" -> "reshape.76";
	"multiply.470" -> "multiply.486";
	"reshape.76" -> "multiply.486";
	"multiply.489" -> "add.490";
	"multiply.486" -> "add.490";
	"p13.190" -> "reshape.77";
	"p33.471" -> "multiply.473";
	"reshape.77" -> "multiply.473";
	"multiply.470" -> "multiply.475";
	"multiply.470" -> "multiply.475";
	"p3.6" -> "convert.474";
	"convert.474" -> "reshape.78";
	"multiply.475" -> "multiply.477";
	"reshape.78" -> "multiply.477";
	"multiply.473" -> "add.478";
	"multiply.477" -> "add.478";
	"add.478" -> "sqrt.479";
	"p2.5" -> "reshape.79";
	"sqrt.479" -> "divide.481";
	"reshape.79" -> "divide.481";
	"p1.3" -> "reshape.80";
	"divide.481" -> "add.483";
	"reshape.80" -> "add.483";
	"add.490" -> "divide.503";
	"add.483" -> "divide.503";
	"p0.1" -> "convert.502";
	"convert.502" -> "reshape.81";
	"divide.503" -> "multiply.505";
	"reshape.81" -> "multiply.505";
	"subtract.501" -> "add.506";
	"multiply.505" -> "add.506";
	"add.233" -> "tuple.507";
	"add.289" -> "tuple.507";
	"add.345" -> "tuple.507";
	"add.401" -> "tuple.507";
	"add.457" -> "tuple.507";
	"add.506" -> "tuple.507";
	"multiply.470" -> "tuple.507";
	"multiply.418" -> "tuple.507";
	"multiply.361" -> "tuple.507";
	"multiply.306" -> "tuple.507";
	"multiply.249" -> "tuple.507";
	"multiply.189" -> "tuple.507";
	"add.214" -> "tuple.507";
	"add.198" -> "tuple.507";
	"add.328" -> "tuple.507";
	"add.314" -> "tuple.507";
	"add.440" -> "tuple.507";
	"add.426" -> "tuple.507";
	"add.271" -> "tuple.507";
	"add.257" -> "tuple.507";
	"add.383" -> "tuple.507";
	"add.369" -> "tuple.507";
	"add.490" -> "tuple.507";
	"add.478" -> "tuple.507";
	"power.170" -> "tuple.507";
}