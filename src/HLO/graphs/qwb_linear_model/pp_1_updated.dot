digraph HloModule {
	"p15.313" [label="p15.313 \n bf16[4,4]"];
	"p24.593" [label="p24.593 \n bf16[] parameter(24), frontend_attributes="];
	"broadcast.1325" [label="broadcast.1325 \n bf16[4,4]"];
	"multiply.1326" [label="multiply.1326 \n bf16[4,4]"];
	"p23.592" [label="p23.592 \n bf16[] parameter(23), frontend_attributes="];
	"broadcast.1327" [label="broadcast.1327 \n bf16[4,4]"];
	"multiply.1329" [label="multiply.1329 \n bf16[4,4]"];
	"subtract.1330" [label="subtract.1330 \n bf16[4,4]"];
	"p22.578" [label="p22.578 \n bf16[] parameter(22), frontend_attributes="];
	"multiply.0" [label="multiply.0 \n bf16[] multiply(bf16[] %constant.3, bf16[] %p22.578), metadata="];
	"broadcast.2" [label="broadcast.2 \n bf16[4,4]"];
	"p6.25" [label="p6.25 \n bf16[] parameter(6), frontend_attributes="];
	"p5.24" [label="p5.24 \n bf16[] parameter(5), frontend_attributes="];
	"divide.2" [label="divide.2 \n bf16[] divide(bf16[] %p6.25, bf16[] %p5.24), metadata="];
	"broadcast.185" [label="broadcast.185 \n bf16[1,4]"];
	"p7.106" [label="p7.106 \n bf16[1,4]"];
	"multiply.68" [label="multiply.68 \n bf16[1,4]"];
	"reshape.520" [label="reshape.520 \n bf16[4]"];
	"broadcast.12" [label="broadcast.12 \n bf16[4,4]"];
	"p8.149" [label="p8.149 \n bf16[4,4]"];
	"dot.159" [label="dot.159 \n bf16[4,4]"];
	"p9.192" [label="p9.192 \n bf16[4,4]"];
	"dot.202" [label="dot.202 \n bf16[4,4]"];
	"p10.235" [label="p10.235 \n bf16[4,4]"];
	"dot.245" [label="dot.245 \n bf16[4,4]"];
	"p16.322" [label="p16.322 \n bf16[4,4]"];
	"transpose.451" [label="transpose.451 \n bf16[4,4]"];
	"dot.1" [label="dot.1 \n bf16[4,4]"];
	"constant.4" [label="constant.4 \n bf16[1]"];
	"p17.474" [label="p17.474 \n bf16[1]"];
	"multiply.463" [label="multiply.463 \n bf16[4,4]"];
	"constant.464" [label="constant.464 \n bf16[] constant(0), metadata="];
	"reduce.470" [label="reduce.470 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.471" [label="sqrt.471 \n bf16[] sqrt(bf16[] %reduce.470), metadata="];
	"multiply.473" [label="multiply.473 \n bf16[] multiply(bf16[] %sqrt.471, bf16[] %sqrt.471), metadata="];
	"reshape.13" [label="reshape.13 \n bf16[1]"];
	"add.476" [label="add.476 \n bf16[1]"];
	"transpose.321" [label="transpose.321 \n bf16[4,4]"];
	"dot.323" [label="dot.323 \n bf16[4,4]"];
	"p14.305" [label="p14.305 \n bf16[4]"];
	"broadcast.327" [label="broadcast.327 \n bf16[4,4]"];
	"add.328" [label="add.328 \n bf16[4,4]"];
	"transpose.425" [label="transpose.425 \n bf16[4,4]"];
	"dot.2" [label="dot.2 \n bf16[4,4]"];
	"multiply.437" [label="multiply.437 \n bf16[4,4]"];
	"constant.438" [label="constant.438 \n bf16[] constant(0), metadata="];
	"reduce.444" [label="reduce.444 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.445" [label="sqrt.445 \n bf16[] sqrt(bf16[] %reduce.444), metadata="];
	"multiply.447" [label="multiply.447 \n bf16[] multiply(bf16[] %sqrt.445, bf16[] %sqrt.445), metadata="];
	"reshape.17" [label="reshape.17 \n bf16[1]"];
	"add.478" [label="add.478 \n bf16[1]"];
	"transpose.304" [label="transpose.304 \n bf16[4,4]"];
	"dot.329" [label="dot.329 \n bf16[4,4]"];
	"p13.296" [label="p13.296 \n bf16[4]"];
	"broadcast.333" [label="broadcast.333 \n bf16[4,4]"];
	"add.334" [label="add.334 \n bf16[4,4]"];
	"transpose.399" [label="transpose.399 \n bf16[4,4]"];
	"dot.3" [label="dot.3 \n bf16[4,4]"];
	"multiply.411" [label="multiply.411 \n bf16[4,4]"];
	"constant.412" [label="constant.412 \n bf16[] constant(0), metadata="];
	"reduce.418" [label="reduce.418 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.419" [label="sqrt.419 \n bf16[] sqrt(bf16[] %reduce.418), metadata="];
	"multiply.421" [label="multiply.421 \n bf16[] multiply(bf16[] %sqrt.419, bf16[] %sqrt.419), metadata="];
	"reshape.20" [label="reshape.20 \n bf16[1]"];
	"add.480" [label="add.480 \n bf16[1]"];
	"transpose.295" [label="transpose.295 \n bf16[4,4]"];
	"dot.335" [label="dot.335 \n bf16[4,4]"];
	"p12.287" [label="p12.287 \n bf16[4]"];
	"broadcast.339" [label="broadcast.339 \n bf16[4,4]"];
	"add.340" [label="add.340 \n bf16[4,4]"];
	"transpose.373" [label="transpose.373 \n bf16[4,4]"];
	"dot.4" [label="dot.4 \n bf16[4,4]"];
	"multiply.385" [label="multiply.385 \n bf16[4,4]"];
	"constant.386" [label="constant.386 \n bf16[] constant(0), metadata="];
	"reduce.392" [label="reduce.392 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.393" [label="sqrt.393 \n bf16[] sqrt(bf16[] %reduce.392), metadata="];
	"multiply.395" [label="multiply.395 \n bf16[] multiply(bf16[] %sqrt.393, bf16[] %sqrt.393), metadata="];
	"reshape.30" [label="reshape.30 \n bf16[1]"];
	"add.482" [label="add.482 \n bf16[1]"];
	"transpose.286" [label="transpose.286 \n bf16[4,4]"];
	"dot.341" [label="dot.341 \n bf16[4,4]"];
	"p11.278" [label="p11.278 \n bf16[4]"];
	"broadcast.345" [label="broadcast.345 \n bf16[4,4]"];
	"add.346" [label="add.346 \n bf16[4,4]"];
	"broadcast.187" [label="broadcast.187 \n bf16[4,4]"];
	"multiply.72" [label="multiply.72 \n bf16[4,4]"];
	"convert.4" [label="convert.4 \n f32[4,4]"];
	"convert.1" [label="convert.1 \n bf16[4]"];
	"reshape.36" [label="reshape.36 \n bf16[1,4]"];
	"multiply.359" [label="multiply.359 \n bf16[1,4]"];
	"constant.360" [label="constant.360 \n bf16[] constant(0), metadata="];
	"reduce.366" [label="reduce.366 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.367" [label="sqrt.367 \n bf16[] sqrt(bf16[] %reduce.366), metadata="];
	"multiply.369" [label="multiply.369 \n bf16[] multiply(bf16[] %sqrt.367, bf16[] %sqrt.367), metadata="];
	"reshape.37" [label="reshape.37 \n bf16[1]"];
	"add.484" [label="add.484 \n bf16[1]"];
	"constant.246" [label="constant.246 \n bf16[] constant(0), metadata="];
	"reduce.252" [label="reduce.252 \n bf16[4]"];
	"multiply.264" [label="multiply.264 \n bf16[4]"];
	"constant.265" [label="constant.265 \n bf16[] constant(0), metadata="];
	"reduce.271" [label="reduce.271 \n bf16[] reduce(bf16[4]"];
	"sqrt.272" [label="sqrt.272 \n bf16[] sqrt(bf16[] %reduce.271), metadata="];
	"multiply.274" [label="multiply.274 \n bf16[] multiply(bf16[] %sqrt.272, bf16[] %sqrt.272), metadata="];
	"reshape.39" [label="reshape.39 \n bf16[1]"];
	"add.486" [label="add.486 \n bf16[1]"];
	"constant.203" [label="constant.203 \n bf16[] constant(0), metadata="];
	"reduce.209" [label="reduce.209 \n bf16[4]"];
	"multiply.221" [label="multiply.221 \n bf16[4]"];
	"constant.222" [label="constant.222 \n bf16[] constant(0), metadata="];
	"reduce.228" [label="reduce.228 \n bf16[] reduce(bf16[4]"];
	"sqrt.229" [label="sqrt.229 \n bf16[] sqrt(bf16[] %reduce.228), metadata="];
	"multiply.231" [label="multiply.231 \n bf16[] multiply(bf16[] %sqrt.229, bf16[] %sqrt.229), metadata="];
	"reshape.41" [label="reshape.41 \n bf16[1]"];
	"add.488" [label="add.488 \n bf16[1]"];
	"constant.160" [label="constant.160 \n bf16[] constant(0), metadata="];
	"reduce.166" [label="reduce.166 \n bf16[4]"];
	"multiply.178" [label="multiply.178 \n bf16[4]"];
	"constant.179" [label="constant.179 \n bf16[] constant(0), metadata="];
	"reduce.185" [label="reduce.185 \n bf16[] reduce(bf16[4]"];
	"sqrt.186" [label="sqrt.186 \n bf16[] sqrt(bf16[] %reduce.185), metadata="];
	"multiply.188" [label="multiply.188 \n bf16[] multiply(bf16[] %sqrt.186, bf16[] %sqrt.186), metadata="];
	"reshape.45" [label="reshape.45 \n bf16[1]"];
	"add.490" [label="add.490 \n bf16[1]"];
	"constant.117" [label="constant.117 \n bf16[] constant(0), metadata="];
	"reduce.123" [label="reduce.123 \n bf16[4]"];
	"multiply.135" [label="multiply.135 \n bf16[4]"];
	"constant.136" [label="constant.136 \n bf16[] constant(0), metadata="];
	"reduce.142" [label="reduce.142 \n bf16[] reduce(bf16[4]"];
	"sqrt.143" [label="sqrt.143 \n bf16[] sqrt(bf16[] %reduce.142), metadata="];
	"multiply.145" [label="multiply.145 \n bf16[] multiply(bf16[] %sqrt.143, bf16[] %sqrt.143), metadata="];
	"reshape.47" [label="reshape.47 \n bf16[1]"];
	"add.492" [label="add.492 \n bf16[1]"];
	"broadcast.4" [label="broadcast.4 \n bf16[4,1]"];
	"constant.74" [label="constant.74 \n bf16[] constant(0), metadata="];
	"reduce.80" [label="reduce.80 \n bf16[1]"];
	"multiply.74" [label="multiply.74 \n bf16[1]"];
	"add.494" [label="add.494 \n bf16[1]"];
	"constant.8" [label="constant.8 \n bf16[1]"];
	"power.497" [label="power.497 \n bf16[1]"];
	"p4.12" [label="p4.12 \n bf16[] parameter(4), frontend_attributes="];
	"reshape.55" [label="reshape.55 \n bf16[1]"];
	"add.499" [label="add.499 \n bf16[1]"];
	"divide.502" [label="divide.502 \n bf16[1]"];
	"constant.13" [label="constant.13 \n bf16[1]"];
	"compare.1282" [label="compare.1282 \n pred[1]"];
	"constant.15" [label="constant.15 \n bf16[1]"];
	"select.1284" [label="select.1284 \n bf16[1]"];
	"reshape.1286" [label="reshape.1286 \n bf16[] reshape(bf16[1]"];
	"broadcast.1288" [label="broadcast.1288 \n bf16[4,4]"];
	"multiply.1289" [label="multiply.1289 \n bf16[4,4]"];
	"p21.572" [label="p21.572 \n bf16[] parameter(21), frontend_attributes="];
	"broadcast.1310" [label="broadcast.1310 \n bf16[4,4]"];
	"multiply.1311" [label="multiply.1311 \n bf16[4,4]"];
	"add.1319" [label="add.1319 \n bf16[4,4]"];
	"p20.554" [label="p20.554 \n bf16[] parameter(20), frontend_attributes="];
	"multiply.15" [label="multiply.15 \n bf16[] multiply(bf16[] %constant.16, bf16[] %p20.554), metadata="];
	"broadcast.17" [label="broadcast.17 \n bf16[4,4]"];
	"multiply.1298" [label="multiply.1298 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n f32[] parameter(3), frontend_attributes="];
	"convert.1297" [label="convert.1297 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1299" [label="broadcast.1299 \n bf16[4,4]"];
	"multiply.1300" [label="multiply.1300 \n bf16[4,4]"];
	"add.1301" [label="add.1301 \n bf16[4,4]"];
	"sqrt.1302" [label="sqrt.1302 \n bf16[4,4]"];
	"p19.538" [label="p19.538 \n bf16[] parameter(19), frontend_attributes="];
	"broadcast.1303" [label="broadcast.1303 \n bf16[4,4]"];
	"divide.1304" [label="divide.1304 \n bf16[4,4]"];
	"p1.3" [label="p1.3 \n bf16[] parameter(1), frontend_attributes="];
	"broadcast.1305" [label="broadcast.1305 \n bf16[4,4]"];
	"add.1306" [label="add.1306 \n bf16[4,4]"];
	"divide.1332" [label="divide.1332 \n bf16[4,4]"];
	"p18.535" [label="p18.535 \n f32[] parameter(18), frontend_attributes="];
	"convert.1331" [label="convert.1331 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.1333" [label="broadcast.1333 \n bf16[4,4]"];
	"multiply.1334" [label="multiply.1334 \n bf16[4,4]"];
	"add.1335" [label="add.1335 \n bf16[4,4]"];
	"broadcast.1594" [label="broadcast.1594 \n bf16[4,4]"];
	"multiply.1595" [label="multiply.1595 \n bf16[4,4]"];
	"broadcast.1596" [label="broadcast.1596 \n bf16[4,4]"];
	"multiply.1598" [label="multiply.1598 \n bf16[4,4]"];
	"subtract.1599" [label="subtract.1599 \n bf16[4,4]"];
	"broadcast.1586" [label="broadcast.1586 \n bf16[4,4]"];
	"multiply.1587" [label="multiply.1587 \n bf16[4,4]"];
	"divide.3" [label="divide.3 \n bf16[] divide(bf16[] %p6.25, bf16[] %p5.24), metadata="];
	"broadcast.189" [label="broadcast.189 \n bf16[1,4]"];
	"broadcast.594" [label="broadcast.594 \n bf16[1,4]"];
	"multiply.595" [label="multiply.595 \n bf16[1,4]"];
	"broadcast.596" [label="broadcast.596 \n bf16[1,4]"];
	"multiply.598" [label="multiply.598 \n bf16[1,4]"];
	"subtract.599" [label="subtract.599 \n bf16[1,4]"];
	"multiply.69" [label="multiply.69 \n bf16[] multiply(bf16[] %constant.149, bf16[] %p22.578), metadata="];
	"broadcast.22" [label="broadcast.22 \n bf16[1,4]"];
	"constant.24" [label="constant.24 \n bf16[1]"];
	"compare.546" [label="compare.546 \n pred[1]"];
	"constant.25" [label="constant.25 \n bf16[1]"];
	"select.548" [label="select.548 \n bf16[1]"];
	"reshape.550" [label="reshape.550 \n bf16[] reshape(bf16[1]"];
	"broadcast.135" [label="broadcast.135 \n bf16[1,4]"];
	"multiply.553" [label="multiply.553 \n bf16[1,4]"];
	"broadcast.576" [label="broadcast.576 \n bf16[1,4]"];
	"multiply.577" [label="multiply.577 \n bf16[1,4]"];
	"add.586" [label="add.586 \n bf16[1,4]"];
	"multiply.70" [label="multiply.70 \n bf16[] multiply(bf16[] %constant.150, bf16[] %p20.554), metadata="];
	"broadcast.26" [label="broadcast.26 \n bf16[1,4]"];
	"multiply.563" [label="multiply.563 \n bf16[1,4]"];
	"convert.562" [label="convert.562 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.564" [label="broadcast.564 \n bf16[1,4]"];
	"multiply.565" [label="multiply.565 \n bf16[1,4]"];
	"add.566" [label="add.566 \n bf16[1,4]"];
	"sqrt.567" [label="sqrt.567 \n bf16[1,4]"];
	"broadcast.568" [label="broadcast.568 \n bf16[1,4]"];
	"divide.569" [label="divide.569 \n bf16[1,4]"];
	"broadcast.570" [label="broadcast.570 \n bf16[1,4]"];
	"add.571" [label="add.571 \n bf16[1,4]"];
	"divide.601" [label="divide.601 \n bf16[1,4]"];
	"convert.600" [label="convert.600 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.602" [label="broadcast.602 \n bf16[1,4]"];
	"multiply.603" [label="multiply.603 \n bf16[1,4]"];
	"add.604" [label="add.604 \n bf16[1,4]"];
	"multiply.71" [label="multiply.71 \n bf16[1,4]"];
	"reshape.534" [label="reshape.534 \n bf16[4]"];
	"broadcast.94" [label="broadcast.94 \n bf16[4,4]"];
	"broadcast.720" [label="broadcast.720 \n bf16[4,4]"];
	"multiply.721" [label="multiply.721 \n bf16[4,4]"];
	"broadcast.722" [label="broadcast.722 \n bf16[4,4]"];
	"multiply.724" [label="multiply.724 \n bf16[4,4]"];
	"subtract.725" [label="subtract.725 \n bf16[4,4]"];
	"multiply.18" [label="multiply.18 \n bf16[] multiply(bf16[] %constant.28, bf16[] %p22.578), metadata="];
	"broadcast.31" [label="broadcast.31 \n bf16[4,4]"];
	"constant.30" [label="constant.30 \n bf16[1]"];
	"compare.677" [label="compare.677 \n pred[1]"];
	"constant.31" [label="constant.31 \n bf16[1]"];
	"select.679" [label="select.679 \n bf16[1]"];
	"reshape.681" [label="reshape.681 \n bf16[] reshape(bf16[1]"];
	"broadcast.683" [label="broadcast.683 \n bf16[4,4]"];
	"multiply.684" [label="multiply.684 \n bf16[4,4]"];
	"broadcast.705" [label="broadcast.705 \n bf16[4,4]"];
	"multiply.706" [label="multiply.706 \n bf16[4,4]"];
	"add.714" [label="add.714 \n bf16[4,4]"];
	"multiply.19" [label="multiply.19 \n bf16[] multiply(bf16[] %constant.32, bf16[] %p20.554), metadata="];
	"broadcast.37" [label="broadcast.37 \n bf16[4,4]"];
	"multiply.693" [label="multiply.693 \n bf16[4,4]"];
	"convert.692" [label="convert.692 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.694" [label="broadcast.694 \n bf16[4,4]"];
	"multiply.695" [label="multiply.695 \n bf16[4,4]"];
	"add.696" [label="add.696 \n bf16[4,4]"];
	"sqrt.697" [label="sqrt.697 \n bf16[4,4]"];
	"broadcast.698" [label="broadcast.698 \n bf16[4,4]"];
	"divide.699" [label="divide.699 \n bf16[4,4]"];
	"broadcast.700" [label="broadcast.700 \n bf16[4,4]"];
	"add.701" [label="add.701 \n bf16[4,4]"];
	"divide.727" [label="divide.727 \n bf16[4,4]"];
	"convert.726" [label="convert.726 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.728" [label="broadcast.728 \n bf16[4,4]"];
	"multiply.729" [label="multiply.729 \n bf16[4,4]"];
	"add.730" [label="add.730 \n bf16[4,4]"];
	"dot.740" [label="dot.740 \n bf16[4,4]"];
	"broadcast.846" [label="broadcast.846 \n bf16[4,4]"];
	"multiply.847" [label="multiply.847 \n bf16[4,4]"];
	"broadcast.848" [label="broadcast.848 \n bf16[4,4]"];
	"multiply.850" [label="multiply.850 \n bf16[4,4]"];
	"subtract.851" [label="subtract.851 \n bf16[4,4]"];
	"multiply.20" [label="multiply.20 \n bf16[] multiply(bf16[] %constant.33, bf16[] %p22.578), metadata="];
	"broadcast.40" [label="broadcast.40 \n bf16[4,4]"];
	"constant.37" [label="constant.37 \n bf16[1]"];
	"compare.803" [label="compare.803 \n pred[1]"];
	"constant.38" [label="constant.38 \n bf16[1]"];
	"select.805" [label="select.805 \n bf16[1]"];
	"reshape.807" [label="reshape.807 \n bf16[] reshape(bf16[1]"];
	"broadcast.809" [label="broadcast.809 \n bf16[4,4]"];
	"multiply.810" [label="multiply.810 \n bf16[4,4]"];
	"broadcast.831" [label="broadcast.831 \n bf16[4,4]"];
	"multiply.832" [label="multiply.832 \n bf16[4,4]"];
	"add.840" [label="add.840 \n bf16[4,4]"];
	"multiply.21" [label="multiply.21 \n bf16[] multiply(bf16[] %constant.39, bf16[] %p20.554), metadata="];
	"broadcast.44" [label="broadcast.44 \n bf16[4,4]"];
	"multiply.819" [label="multiply.819 \n bf16[4,4]"];
	"convert.818" [label="convert.818 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.820" [label="broadcast.820 \n bf16[4,4]"];
	"multiply.821" [label="multiply.821 \n bf16[4,4]"];
	"add.822" [label="add.822 \n bf16[4,4]"];
	"sqrt.823" [label="sqrt.823 \n bf16[4,4]"];
	"broadcast.824" [label="broadcast.824 \n bf16[4,4]"];
	"divide.825" [label="divide.825 \n bf16[4,4]"];
	"broadcast.826" [label="broadcast.826 \n bf16[4,4]"];
	"add.827" [label="add.827 \n bf16[4,4]"];
	"divide.853" [label="divide.853 \n bf16[4,4]"];
	"convert.852" [label="convert.852 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.854" [label="broadcast.854 \n bf16[4,4]"];
	"multiply.855" [label="multiply.855 \n bf16[4,4]"];
	"add.856" [label="add.856 \n bf16[4,4]"];
	"dot.866" [label="dot.866 \n bf16[4,4]"];
	"broadcast.972" [label="broadcast.972 \n bf16[4,4]"];
	"multiply.973" [label="multiply.973 \n bf16[4,4]"];
	"broadcast.974" [label="broadcast.974 \n bf16[4,4]"];
	"multiply.976" [label="multiply.976 \n bf16[4,4]"];
	"subtract.977" [label="subtract.977 \n bf16[4,4]"];
	"multiply.22" [label="multiply.22 \n bf16[] multiply(bf16[] %constant.40, bf16[] %p22.578), metadata="];
	"broadcast.47" [label="broadcast.47 \n bf16[4,4]"];
	"constant.42" [label="constant.42 \n bf16[1]"];
	"compare.929" [label="compare.929 \n pred[1]"];
	"constant.43" [label="constant.43 \n bf16[1]"];
	"select.931" [label="select.931 \n bf16[1]"];
	"reshape.933" [label="reshape.933 \n bf16[] reshape(bf16[1]"];
	"broadcast.935" [label="broadcast.935 \n bf16[4,4]"];
	"multiply.936" [label="multiply.936 \n bf16[4,4]"];
	"broadcast.957" [label="broadcast.957 \n bf16[4,4]"];
	"multiply.958" [label="multiply.958 \n bf16[4,4]"];
	"add.966" [label="add.966 \n bf16[4,4]"];
	"multiply.23" [label="multiply.23 \n bf16[] multiply(bf16[] %constant.44, bf16[] %p20.554), metadata="];
	"broadcast.51" [label="broadcast.51 \n bf16[4,4]"];
	"multiply.945" [label="multiply.945 \n bf16[4,4]"];
	"convert.944" [label="convert.944 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.946" [label="broadcast.946 \n bf16[4,4]"];
	"multiply.947" [label="multiply.947 \n bf16[4,4]"];
	"add.948" [label="add.948 \n bf16[4,4]"];
	"sqrt.949" [label="sqrt.949 \n bf16[4,4]"];
	"broadcast.950" [label="broadcast.950 \n bf16[4,4]"];
	"divide.951" [label="divide.951 \n bf16[4,4]"];
	"broadcast.952" [label="broadcast.952 \n bf16[4,4]"];
	"add.953" [label="add.953 \n bf16[4,4]"];
	"divide.979" [label="divide.979 \n bf16[4,4]"];
	"convert.978" [label="convert.978 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.980" [label="broadcast.980 \n bf16[4,4]"];
	"multiply.981" [label="multiply.981 \n bf16[4,4]"];
	"add.982" [label="add.982 \n bf16[4,4]"];
	"dot.992" [label="dot.992 \n bf16[4,4]"];
	"p25.1344" [label="p25.1344 \n bf16[4,4]"];
	"transpose.1501" [label="transpose.1501 \n bf16[4,4]"];
	"dot.7" [label="dot.7 \n bf16[4,4]"];
	"add.1512" [label="add.1512 \n bf16[4,4]"];
	"constant.45" [label="constant.45 \n bf16[1]"];
	"p26.1526" [label="p26.1526 \n bf16[1]"];
	"multiply.1515" [label="multiply.1515 \n bf16[4,4]"];
	"constant.1516" [label="constant.1516 \n bf16[] constant(0), metadata="];
	"reduce.1522" [label="reduce.1522 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.1523" [label="sqrt.1523 \n bf16[] sqrt(bf16[] %reduce.1522), metadata="];
	"multiply.1525" [label="multiply.1525 \n bf16[] multiply(bf16[] %sqrt.1523, bf16[] %sqrt.1523), metadata="];
	"reshape.145" [label="reshape.145 \n bf16[1]"];
	"add.1528" [label="add.1528 \n bf16[1]"];
	"transpose.1343" [label="transpose.1343 \n bf16[4,4]"];
	"dot.1345" [label="dot.1345 \n bf16[4,4]"];
	"broadcast.1255" [label="broadcast.1255 \n bf16[4]"];
	"multiply.1256" [label="multiply.1256 \n bf16[4]"];
	"broadcast.52" [label="broadcast.52 \n bf16[4]"];
	"multiply.1259" [label="multiply.1259 \n bf16[4]"];
	"subtract.1260" [label="subtract.1260 \n bf16[4]"];
	"multiply.27" [label="multiply.27 \n bf16[] multiply(bf16[] %constant.48, bf16[] %p22.578), metadata="];
	"broadcast.56" [label="broadcast.56 \n bf16[4]"];
	"constant.50" [label="constant.50 \n bf16[1]"];
	"compare.1017" [label="compare.1017 \n pred[1]"];
	"constant.51" [label="constant.51 \n bf16[1]"];
	"select.1019" [label="select.1019 \n bf16[1]"];
	"reshape.1021" [label="reshape.1021 \n bf16[] reshape(bf16[1]"];
	"broadcast.1022" [label="broadcast.1022 \n bf16[4]"];
	"multiply.1023" [label="multiply.1023 \n bf16[4]"];
	"broadcast.1239" [label="broadcast.1239 \n bf16[4]"];
	"multiply.1240" [label="multiply.1240 \n bf16[4]"];
	"add.1248" [label="add.1248 \n bf16[4]"];
	"multiply.29" [label="multiply.29 \n bf16[] multiply(bf16[] %constant.53, bf16[] %p20.554), metadata="];
	"broadcast.59" [label="broadcast.59 \n bf16[4]"];
	"multiply.1227" [label="multiply.1227 \n bf16[4]"];
	"convert.1226" [label="convert.1226 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1228" [label="broadcast.1228 \n bf16[4]"];
	"multiply.1229" [label="multiply.1229 \n bf16[4]"];
	"add.1230" [label="add.1230 \n bf16[4]"];
	"sqrt.1231" [label="sqrt.1231 \n bf16[4]"];
	"broadcast.1232" [label="broadcast.1232 \n bf16[4]"];
	"divide.1233" [label="divide.1233 \n bf16[4]"];
	"broadcast.1234" [label="broadcast.1234 \n bf16[4]"];
	"add.1235" [label="add.1235 \n bf16[4]"];
	"divide.1262" [label="divide.1262 \n bf16[4]"];
	"convert.1261" [label="convert.1261 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.1263" [label="broadcast.1263 \n bf16[4]"];
	"multiply.1264" [label="multiply.1264 \n bf16[4]"];
	"add.1265" [label="add.1265 \n bf16[4]"];
	"broadcast.1349" [label="broadcast.1349 \n bf16[4,4]"];
	"add.1350" [label="add.1350 \n bf16[4,4]"];
	"transpose.1468" [label="transpose.1468 \n bf16[4,4]"];
	"dot.8" [label="dot.8 \n bf16[4,4]"];
	"add.1479" [label="add.1479 \n bf16[4,4]"];
	"multiply.1482" [label="multiply.1482 \n bf16[4,4]"];
	"constant.1483" [label="constant.1483 \n bf16[] constant(0), metadata="];
	"reduce.1489" [label="reduce.1489 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.1490" [label="sqrt.1490 \n bf16[] sqrt(bf16[] %reduce.1489), metadata="];
	"multiply.1492" [label="multiply.1492 \n bf16[] multiply(bf16[] %sqrt.1490, bf16[] %sqrt.1490), metadata="];
	"reshape.164" [label="reshape.164 \n bf16[1]"];
	"add.1530" [label="add.1530 \n bf16[1]"];
	"transpose.1216" [label="transpose.1216 \n bf16[4,4]"];
	"dot.1351" [label="dot.1351 \n bf16[4,4]"];
	"broadcast.1198" [label="broadcast.1198 \n bf16[4]"];
	"multiply.1199" [label="multiply.1199 \n bf16[4]"];
	"broadcast.61" [label="broadcast.61 \n bf16[4]"];
	"multiply.1202" [label="multiply.1202 \n bf16[4]"];
	"subtract.1203" [label="subtract.1203 \n bf16[4]"];
	"multiply.33" [label="multiply.33 \n bf16[] multiply(bf16[] %constant.59, bf16[] %p22.578), metadata="];
	"broadcast.64" [label="broadcast.64 \n bf16[4]"];
	"constant.66" [label="constant.66 \n bf16[1]"];
	"compare.891" [label="compare.891 \n pred[1]"];
	"constant.67" [label="constant.67 \n bf16[1]"];
	"select.893" [label="select.893 \n bf16[1]"];
	"reshape.895" [label="reshape.895 \n bf16[] reshape(bf16[1]"];
	"broadcast.896" [label="broadcast.896 \n bf16[4]"];
	"multiply.897" [label="multiply.897 \n bf16[4]"];
	"broadcast.1182" [label="broadcast.1182 \n bf16[4]"];
	"multiply.1183" [label="multiply.1183 \n bf16[4]"];
	"add.1191" [label="add.1191 \n bf16[4]"];
	"multiply.34" [label="multiply.34 \n bf16[] multiply(bf16[] %constant.68, bf16[] %p20.554), metadata="];
	"broadcast.68" [label="broadcast.68 \n bf16[4]"];
	"multiply.1170" [label="multiply.1170 \n bf16[4]"];
	"convert.1169" [label="convert.1169 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1171" [label="broadcast.1171 \n bf16[4]"];
	"multiply.1172" [label="multiply.1172 \n bf16[4]"];
	"add.1173" [label="add.1173 \n bf16[4]"];
	"sqrt.1174" [label="sqrt.1174 \n bf16[4]"];
	"broadcast.1175" [label="broadcast.1175 \n bf16[4]"];
	"divide.1176" [label="divide.1176 \n bf16[4]"];
	"broadcast.1177" [label="broadcast.1177 \n bf16[4]"];
	"add.1178" [label="add.1178 \n bf16[4]"];
	"divide.1205" [label="divide.1205 \n bf16[4]"];
	"convert.1204" [label="convert.1204 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.1206" [label="broadcast.1206 \n bf16[4]"];
	"multiply.1207" [label="multiply.1207 \n bf16[4]"];
	"add.1208" [label="add.1208 \n bf16[4]"];
	"broadcast.1355" [label="broadcast.1355 \n bf16[4,4]"];
	"add.1356" [label="add.1356 \n bf16[4,4]"];
	"transpose.1435" [label="transpose.1435 \n bf16[4,4]"];
	"dot.9" [label="dot.9 \n bf16[4,4]"];
	"add.1446" [label="add.1446 \n bf16[4,4]"];
	"multiply.1449" [label="multiply.1449 \n bf16[4,4]"];
	"constant.1450" [label="constant.1450 \n bf16[] constant(0), metadata="];
	"reduce.1456" [label="reduce.1456 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.1457" [label="sqrt.1457 \n bf16[] sqrt(bf16[] %reduce.1456), metadata="];
	"multiply.1459" [label="multiply.1459 \n bf16[] multiply(bf16[] %sqrt.1457, bf16[] %sqrt.1457), metadata="];
	"reshape.185" [label="reshape.185 \n bf16[1]"];
	"add.1532" [label="add.1532 \n bf16[1]"];
	"transpose.1159" [label="transpose.1159 \n bf16[4,4]"];
	"dot.1357" [label="dot.1357 \n bf16[4,4]"];
	"broadcast.1141" [label="broadcast.1141 \n bf16[4]"];
	"multiply.1142" [label="multiply.1142 \n bf16[4]"];
	"broadcast.70" [label="broadcast.70 \n bf16[4]"];
	"multiply.1145" [label="multiply.1145 \n bf16[4]"];
	"subtract.1146" [label="subtract.1146 \n bf16[4]"];
	"multiply.38" [label="multiply.38 \n bf16[] multiply(bf16[] %constant.71, bf16[] %p22.578), metadata="];
	"broadcast.75" [label="broadcast.75 \n bf16[4]"];
	"constant.73" [label="constant.73 \n bf16[1]"];
	"compare.765" [label="compare.765 \n pred[1]"];
	"constant.76" [label="constant.76 \n bf16[1]"];
	"select.767" [label="select.767 \n bf16[1]"];
	"reshape.769" [label="reshape.769 \n bf16[] reshape(bf16[1]"];
	"broadcast.770" [label="broadcast.770 \n bf16[4]"];
	"multiply.771" [label="multiply.771 \n bf16[4]"];
	"broadcast.1125" [label="broadcast.1125 \n bf16[4]"];
	"multiply.1126" [label="multiply.1126 \n bf16[4]"];
	"add.1134" [label="add.1134 \n bf16[4]"];
	"multiply.39" [label="multiply.39 \n bf16[] multiply(bf16[] %constant.77, bf16[] %p20.554), metadata="];
	"broadcast.78" [label="broadcast.78 \n bf16[4]"];
	"multiply.1113" [label="multiply.1113 \n bf16[4]"];
	"convert.1112" [label="convert.1112 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1114" [label="broadcast.1114 \n bf16[4]"];
	"multiply.1115" [label="multiply.1115 \n bf16[4]"];
	"add.1116" [label="add.1116 \n bf16[4]"];
	"sqrt.1117" [label="sqrt.1117 \n bf16[4]"];
	"broadcast.1118" [label="broadcast.1118 \n bf16[4]"];
	"divide.1119" [label="divide.1119 \n bf16[4]"];
	"broadcast.1120" [label="broadcast.1120 \n bf16[4]"];
	"add.1121" [label="add.1121 \n bf16[4]"];
	"divide.1148" [label="divide.1148 \n bf16[4]"];
	"convert.1147" [label="convert.1147 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.1149" [label="broadcast.1149 \n bf16[4]"];
	"multiply.1150" [label="multiply.1150 \n bf16[4]"];
	"add.1151" [label="add.1151 \n bf16[4]"];
	"broadcast.1361" [label="broadcast.1361 \n bf16[4,4]"];
	"add.1362" [label="add.1362 \n bf16[4,4]"];
	"transpose.1402" [label="transpose.1402 \n bf16[4,4]"];
	"dot.10" [label="dot.10 \n bf16[4,4]"];
	"add.1413" [label="add.1413 \n bf16[4,4]"];
	"multiply.1416" [label="multiply.1416 \n bf16[4,4]"];
	"constant.1417" [label="constant.1417 \n bf16[] constant(0), metadata="];
	"reduce.1423" [label="reduce.1423 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.1424" [label="sqrt.1424 \n bf16[] sqrt(bf16[] %reduce.1423), metadata="];
	"multiply.1426" [label="multiply.1426 \n bf16[] multiply(bf16[] %sqrt.1424, bf16[] %sqrt.1424), metadata="];
	"reshape.209" [label="reshape.209 \n bf16[1]"];
	"add.1534" [label="add.1534 \n bf16[1]"];
	"transpose.1102" [label="transpose.1102 \n bf16[4,4]"];
	"dot.1363" [label="dot.1363 \n bf16[4,4]"];
	"broadcast.1084" [label="broadcast.1084 \n bf16[4]"];
	"multiply.1085" [label="multiply.1085 \n bf16[4]"];
	"broadcast.83" [label="broadcast.83 \n bf16[4]"];
	"multiply.1088" [label="multiply.1088 \n bf16[4]"];
	"subtract.1089" [label="subtract.1089 \n bf16[4]"];
	"multiply.44" [label="multiply.44 \n bf16[] multiply(bf16[] %constant.80, bf16[] %p22.578), metadata="];
	"broadcast.86" [label="broadcast.86 \n bf16[4]"];
	"constant.82" [label="constant.82 \n bf16[1]"];
	"compare.639" [label="compare.639 \n pred[1]"];
	"constant.83" [label="constant.83 \n bf16[1]"];
	"select.641" [label="select.641 \n bf16[1]"];
	"reshape.643" [label="reshape.643 \n bf16[] reshape(bf16[1]"];
	"broadcast.644" [label="broadcast.644 \n bf16[4]"];
	"multiply.645" [label="multiply.645 \n bf16[4]"];
	"broadcast.1068" [label="broadcast.1068 \n bf16[4]"];
	"multiply.1069" [label="multiply.1069 \n bf16[4]"];
	"add.1077" [label="add.1077 \n bf16[4]"];
	"multiply.45" [label="multiply.45 \n bf16[] multiply(bf16[] %constant.84, bf16[] %p20.554), metadata="];
	"broadcast.89" [label="broadcast.89 \n bf16[4]"];
	"multiply.1056" [label="multiply.1056 \n bf16[4]"];
	"convert.1055" [label="convert.1055 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1057" [label="broadcast.1057 \n bf16[4]"];
	"multiply.1058" [label="multiply.1058 \n bf16[4]"];
	"add.1059" [label="add.1059 \n bf16[4]"];
	"sqrt.1060" [label="sqrt.1060 \n bf16[4]"];
	"broadcast.1061" [label="broadcast.1061 \n bf16[4]"];
	"divide.1062" [label="divide.1062 \n bf16[4]"];
	"broadcast.1063" [label="broadcast.1063 \n bf16[4]"];
	"add.1064" [label="add.1064 \n bf16[4]"];
	"divide.1091" [label="divide.1091 \n bf16[4]"];
	"convert.1090" [label="convert.1090 \n bf16[] convert(f32[] %p18.535), metadata="];
	"broadcast.1092" [label="broadcast.1092 \n bf16[4]"];
	"multiply.1093" [label="multiply.1093 \n bf16[4]"];
	"add.1094" [label="add.1094 \n bf16[4]"];
	"broadcast.1367" [label="broadcast.1367 \n bf16[4,4]"];
	"add.1368" [label="add.1368 \n bf16[4,4]"];
	"broadcast.193" [label="broadcast.193 \n bf16[4,4]"];
	"multiply.73" [label="multiply.73 \n bf16[4,4]"];
	"convert.5" [label="convert.5 \n f32[4,4]"];
	"reduce.1" [label="reduce.1 \n f32[4]"];
	"convert.3" [label="convert.3 \n bf16[4]"];
	"reshape.230" [label="reshape.230 \n bf16[1,4]"];
	"add.1380" [label="add.1380 \n bf16[1,4]"];
	"multiply.1383" [label="multiply.1383 \n bf16[1,4]"];
	"constant.1384" [label="constant.1384 \n bf16[] constant(0), metadata="];
	"reduce.1390" [label="reduce.1390 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.1391" [label="sqrt.1391 \n bf16[] sqrt(bf16[] %reduce.1390), metadata="];
	"multiply.1393" [label="multiply.1393 \n bf16[] multiply(bf16[] %sqrt.1391, bf16[] %sqrt.1391), metadata="];
	"reshape.234" [label="reshape.234 \n bf16[1]"];
	"add.1536" [label="add.1536 \n bf16[1]"];
	"constant.993" [label="constant.993 \n bf16[] constant(0), metadata="];
	"reduce.999" [label="reduce.999 \n bf16[4]"];
	"add.1024" [label="add.1024 \n bf16[4]"];
	"multiply.1027" [label="multiply.1027 \n bf16[4]"];
	"constant.1028" [label="constant.1028 \n bf16[] constant(0), metadata="];
	"reduce.1034" [label="reduce.1034 \n bf16[] reduce(bf16[4]"];
	"sqrt.1035" [label="sqrt.1035 \n bf16[] sqrt(bf16[] %reduce.1034), metadata="];
	"multiply.1037" [label="multiply.1037 \n bf16[] multiply(bf16[] %sqrt.1035, bf16[] %sqrt.1035), metadata="];
	"reshape.238" [label="reshape.238 \n bf16[1]"];
	"add.1538" [label="add.1538 \n bf16[1]"];
	"constant.867" [label="constant.867 \n bf16[] constant(0), metadata="];
	"reduce.873" [label="reduce.873 \n bf16[4]"];
	"add.898" [label="add.898 \n bf16[4]"];
	"multiply.901" [label="multiply.901 \n bf16[4]"];
	"constant.902" [label="constant.902 \n bf16[] constant(0), metadata="];
	"reduce.908" [label="reduce.908 \n bf16[] reduce(bf16[4]"];
	"sqrt.909" [label="sqrt.909 \n bf16[] sqrt(bf16[] %reduce.908), metadata="];
	"multiply.911" [label="multiply.911 \n bf16[] multiply(bf16[] %sqrt.909, bf16[] %sqrt.909), metadata="];
	"reshape.242" [label="reshape.242 \n bf16[1]"];
	"add.1540" [label="add.1540 \n bf16[1]"];
	"constant.741" [label="constant.741 \n bf16[] constant(0), metadata="];
	"reduce.747" [label="reduce.747 \n bf16[4]"];
	"add.772" [label="add.772 \n bf16[4]"];
	"multiply.775" [label="multiply.775 \n bf16[4]"];
	"constant.776" [label="constant.776 \n bf16[] constant(0), metadata="];
	"reduce.782" [label="reduce.782 \n bf16[] reduce(bf16[4]"];
	"sqrt.783" [label="sqrt.783 \n bf16[] sqrt(bf16[] %reduce.782), metadata="];
	"multiply.785" [label="multiply.785 \n bf16[] multiply(bf16[] %sqrt.783, bf16[] %sqrt.783), metadata="];
	"reshape.246" [label="reshape.246 \n bf16[1]"];
	"add.1542" [label="add.1542 \n bf16[1]"];
	"constant.615" [label="constant.615 \n bf16[] constant(0), metadata="];
	"reduce.621" [label="reduce.621 \n bf16[4]"];
	"add.646" [label="add.646 \n bf16[4]"];
	"multiply.649" [label="multiply.649 \n bf16[4]"];
	"constant.650" [label="constant.650 \n bf16[] constant(0), metadata="];
	"reduce.656" [label="reduce.656 \n bf16[] reduce(bf16[4]"];
	"sqrt.657" [label="sqrt.657 \n bf16[] sqrt(bf16[] %reduce.656), metadata="];
	"multiply.659" [label="multiply.659 \n bf16[] multiply(bf16[] %sqrt.657, bf16[] %sqrt.657), metadata="];
	"reshape.250" [label="reshape.250 \n bf16[1]"];
	"add.1544" [label="add.1544 \n bf16[1]"];
	"constant.86" [label="constant.86 \n bf16[1]"];
	"compare.509" [label="compare.509 \n pred[1]"];
	"constant.87" [label="constant.87 \n bf16[1]"];
	"select.511" [label="select.511 \n bf16[1]"];
	"multiply.512" [label="multiply.512 \n bf16[1]"];
	"broadcast.19" [label="broadcast.19 \n bf16[4,1]"];
	"constant.35" [label="constant.35 \n bf16[] constant(0), metadata="];
	"reduce.41" [label="reduce.41 \n bf16[1]"];
	"add.513" [label="add.513 \n bf16[1]"];
	"multiply.75" [label="multiply.75 \n bf16[1]"];
	"add.1546" [label="add.1546 \n bf16[1]"];
	"constant.91" [label="constant.91 \n bf16[1]"];
	"power.1549" [label="power.1549 \n bf16[1]"];
	"reshape.264" [label="reshape.264 \n bf16[1]"];
	"add.1551" [label="add.1551 \n bf16[1]"];
	"divide.1554" [label="divide.1554 \n bf16[1]"];
	"constant.96" [label="constant.96 \n bf16[1]"];
	"compare.1561" [label="compare.1561 \n pred[1]"];
	"constant.97" [label="constant.97 \n bf16[1]"];
	"select.1563" [label="select.1563 \n bf16[1]"];
	"reshape.1565" [label="reshape.1565 \n bf16[] reshape(bf16[1]"];
	"broadcast.1567" [label="broadcast.1567 \n bf16[4,4]"];
	"multiply.1568" [label="multiply.1568 \n bf16[4,4]"];
	"broadcast.1584" [label="broadcast.1584 \n bf16[4,4]"];
	"multiply.1585" [label="multiply.1585 \n bf16[4,4]"];
	"add.1588" [label="add.1588 \n bf16[4,4]"];
	"broadcast.1569" [label="broadcast.1569 \n bf16[4,4]"];
	"multiply.1570" [label="multiply.1570 \n bf16[4,4]"];
	"multiply.1572" [label="multiply.1572 \n bf16[4,4]"];
	"convert.1571" [label="convert.1571 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1573" [label="broadcast.1573 \n bf16[4,4]"];
	"multiply.1574" [label="multiply.1574 \n bf16[4,4]"];
	"add.1575" [label="add.1575 \n bf16[4,4]"];
	"sqrt.1576" [label="sqrt.1576 \n bf16[4,4]"];
	"p2.5" [label="p2.5 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.1577" [label="broadcast.1577 \n bf16[4,4]"];
	"divide.1578" [label="divide.1578 \n bf16[4,4]"];
	"broadcast.1579" [label="broadcast.1579 \n bf16[4,4]"];
	"add.1580" [label="add.1580 \n bf16[4,4]"];
	"divide.1601" [label="divide.1601 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.1600" [label="convert.1600 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1602" [label="broadcast.1602 \n bf16[4,4]"];
	"multiply.1603" [label="multiply.1603 \n bf16[4,4]"];
	"add.1604" [label="add.1604 \n bf16[4,4]"];
	"broadcast.1647" [label="broadcast.1647 \n bf16[4]"];
	"multiply.1648" [label="multiply.1648 \n bf16[4]"];
	"broadcast.96" [label="broadcast.96 \n bf16[4]"];
	"multiply.1651" [label="multiply.1651 \n bf16[4]"];
	"subtract.1652" [label="subtract.1652 \n bf16[4]"];
	"broadcast.1638" [label="broadcast.1638 \n bf16[4]"];
	"multiply.1639" [label="multiply.1639 \n bf16[4]"];
	"constant.101" [label="constant.101 \n bf16[1]"];
	"compare.1614" [label="compare.1614 \n pred[1]"];
	"constant.102" [label="constant.102 \n bf16[1]"];
	"select.1616" [label="select.1616 \n bf16[1]"];
	"reshape.1618" [label="reshape.1618 \n bf16[] reshape(bf16[1]"];
	"broadcast.1619" [label="broadcast.1619 \n bf16[4]"];
	"multiply.1620" [label="multiply.1620 \n bf16[4]"];
	"broadcast.1636" [label="broadcast.1636 \n bf16[4]"];
	"multiply.1637" [label="multiply.1637 \n bf16[4]"];
	"add.1640" [label="add.1640 \n bf16[4]"];
	"broadcast.1621" [label="broadcast.1621 \n bf16[4]"];
	"multiply.1622" [label="multiply.1622 \n bf16[4]"];
	"multiply.1624" [label="multiply.1624 \n bf16[4]"];
	"convert.1623" [label="convert.1623 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1625" [label="broadcast.1625 \n bf16[4]"];
	"multiply.1626" [label="multiply.1626 \n bf16[4]"];
	"add.1627" [label="add.1627 \n bf16[4]"];
	"sqrt.1628" [label="sqrt.1628 \n bf16[4]"];
	"broadcast.1629" [label="broadcast.1629 \n bf16[4]"];
	"divide.1630" [label="divide.1630 \n bf16[4]"];
	"broadcast.1631" [label="broadcast.1631 \n bf16[4]"];
	"add.1632" [label="add.1632 \n bf16[4]"];
	"divide.1654" [label="divide.1654 \n bf16[4]"];
	"convert.1653" [label="convert.1653 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1655" [label="broadcast.1655 \n bf16[4]"];
	"multiply.1656" [label="multiply.1656 \n bf16[4]"];
	"add.1657" [label="add.1657 \n bf16[4]"];
	"broadcast.1700" [label="broadcast.1700 \n bf16[4,4]"];
	"multiply.1701" [label="multiply.1701 \n bf16[4,4]"];
	"broadcast.1702" [label="broadcast.1702 \n bf16[4,4]"];
	"multiply.1704" [label="multiply.1704 \n bf16[4,4]"];
	"subtract.1705" [label="subtract.1705 \n bf16[4,4]"];
	"broadcast.1692" [label="broadcast.1692 \n bf16[4,4]"];
	"multiply.1693" [label="multiply.1693 \n bf16[4,4]"];
	"constant.107" [label="constant.107 \n bf16[1]"];
	"compare.1667" [label="compare.1667 \n pred[1]"];
	"constant.108" [label="constant.108 \n bf16[1]"];
	"select.1669" [label="select.1669 \n bf16[1]"];
	"reshape.1671" [label="reshape.1671 \n bf16[] reshape(bf16[1]"];
	"broadcast.1673" [label="broadcast.1673 \n bf16[4,4]"];
	"multiply.1674" [label="multiply.1674 \n bf16[4,4]"];
	"broadcast.1690" [label="broadcast.1690 \n bf16[4,4]"];
	"multiply.1691" [label="multiply.1691 \n bf16[4,4]"];
	"add.1694" [label="add.1694 \n bf16[4,4]"];
	"broadcast.1675" [label="broadcast.1675 \n bf16[4,4]"];
	"multiply.1676" [label="multiply.1676 \n bf16[4,4]"];
	"multiply.1678" [label="multiply.1678 \n bf16[4,4]"];
	"convert.1677" [label="convert.1677 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1679" [label="broadcast.1679 \n bf16[4,4]"];
	"multiply.1680" [label="multiply.1680 \n bf16[4,4]"];
	"add.1681" [label="add.1681 \n bf16[4,4]"];
	"sqrt.1682" [label="sqrt.1682 \n bf16[4,4]"];
	"broadcast.1683" [label="broadcast.1683 \n bf16[4,4]"];
	"divide.1684" [label="divide.1684 \n bf16[4,4]"];
	"broadcast.1685" [label="broadcast.1685 \n bf16[4,4]"];
	"add.1686" [label="add.1686 \n bf16[4,4]"];
	"divide.1707" [label="divide.1707 \n bf16[4,4]"];
	"convert.1706" [label="convert.1706 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1708" [label="broadcast.1708 \n bf16[4,4]"];
	"multiply.1709" [label="multiply.1709 \n bf16[4,4]"];
	"add.1710" [label="add.1710 \n bf16[4,4]"];
	"broadcast.1753" [label="broadcast.1753 \n bf16[4]"];
	"multiply.1754" [label="multiply.1754 \n bf16[4]"];
	"broadcast.98" [label="broadcast.98 \n bf16[4]"];
	"multiply.1757" [label="multiply.1757 \n bf16[4]"];
	"subtract.1758" [label="subtract.1758 \n bf16[4]"];
	"broadcast.1744" [label="broadcast.1744 \n bf16[4]"];
	"multiply.1745" [label="multiply.1745 \n bf16[4]"];
	"constant.112" [label="constant.112 \n bf16[1]"];
	"compare.1720" [label="compare.1720 \n pred[1]"];
	"constant.113" [label="constant.113 \n bf16[1]"];
	"select.1722" [label="select.1722 \n bf16[1]"];
	"reshape.1724" [label="reshape.1724 \n bf16[] reshape(bf16[1]"];
	"broadcast.1725" [label="broadcast.1725 \n bf16[4]"];
	"multiply.1726" [label="multiply.1726 \n bf16[4]"];
	"broadcast.1742" [label="broadcast.1742 \n bf16[4]"];
	"multiply.1743" [label="multiply.1743 \n bf16[4]"];
	"add.1746" [label="add.1746 \n bf16[4]"];
	"broadcast.1727" [label="broadcast.1727 \n bf16[4]"];
	"multiply.1728" [label="multiply.1728 \n bf16[4]"];
	"multiply.1730" [label="multiply.1730 \n bf16[4]"];
	"convert.1729" [label="convert.1729 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1731" [label="broadcast.1731 \n bf16[4]"];
	"multiply.1732" [label="multiply.1732 \n bf16[4]"];
	"add.1733" [label="add.1733 \n bf16[4]"];
	"sqrt.1734" [label="sqrt.1734 \n bf16[4]"];
	"broadcast.1735" [label="broadcast.1735 \n bf16[4]"];
	"divide.1736" [label="divide.1736 \n bf16[4]"];
	"broadcast.1737" [label="broadcast.1737 \n bf16[4]"];
	"add.1738" [label="add.1738 \n bf16[4]"];
	"divide.1760" [label="divide.1760 \n bf16[4]"];
	"convert.1759" [label="convert.1759 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1761" [label="broadcast.1761 \n bf16[4]"];
	"multiply.1762" [label="multiply.1762 \n bf16[4]"];
	"add.1763" [label="add.1763 \n bf16[4]"];
	"broadcast.1806" [label="broadcast.1806 \n bf16[4,4]"];
	"multiply.1807" [label="multiply.1807 \n bf16[4,4]"];
	"broadcast.1808" [label="broadcast.1808 \n bf16[4,4]"];
	"multiply.1810" [label="multiply.1810 \n bf16[4,4]"];
	"subtract.1811" [label="subtract.1811 \n bf16[4,4]"];
	"broadcast.1798" [label="broadcast.1798 \n bf16[4,4]"];
	"multiply.1799" [label="multiply.1799 \n bf16[4,4]"];
	"constant.115" [label="constant.115 \n bf16[1]"];
	"compare.1773" [label="compare.1773 \n pred[1]"];
	"constant.116" [label="constant.116 \n bf16[1]"];
	"select.1775" [label="select.1775 \n bf16[1]"];
	"reshape.1777" [label="reshape.1777 \n bf16[] reshape(bf16[1]"];
	"broadcast.1779" [label="broadcast.1779 \n bf16[4,4]"];
	"multiply.1780" [label="multiply.1780 \n bf16[4,4]"];
	"broadcast.1796" [label="broadcast.1796 \n bf16[4,4]"];
	"multiply.1797" [label="multiply.1797 \n bf16[4,4]"];
	"add.1800" [label="add.1800 \n bf16[4,4]"];
	"broadcast.1781" [label="broadcast.1781 \n bf16[4,4]"];
	"multiply.1782" [label="multiply.1782 \n bf16[4,4]"];
	"multiply.1784" [label="multiply.1784 \n bf16[4,4]"];
	"convert.1783" [label="convert.1783 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1785" [label="broadcast.1785 \n bf16[4,4]"];
	"multiply.1786" [label="multiply.1786 \n bf16[4,4]"];
	"add.1787" [label="add.1787 \n bf16[4,4]"];
	"sqrt.1788" [label="sqrt.1788 \n bf16[4,4]"];
	"broadcast.1789" [label="broadcast.1789 \n bf16[4,4]"];
	"divide.1790" [label="divide.1790 \n bf16[4,4]"];
	"broadcast.1791" [label="broadcast.1791 \n bf16[4,4]"];
	"add.1792" [label="add.1792 \n bf16[4,4]"];
	"divide.1813" [label="divide.1813 \n bf16[4,4]"];
	"convert.1812" [label="convert.1812 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1814" [label="broadcast.1814 \n bf16[4,4]"];
	"multiply.1815" [label="multiply.1815 \n bf16[4,4]"];
	"add.1816" [label="add.1816 \n bf16[4,4]"];
	"broadcast.1859" [label="broadcast.1859 \n bf16[4]"];
	"multiply.1860" [label="multiply.1860 \n bf16[4]"];
	"broadcast.100" [label="broadcast.100 \n bf16[4]"];
	"multiply.1863" [label="multiply.1863 \n bf16[4]"];
	"subtract.1864" [label="subtract.1864 \n bf16[4]"];
	"broadcast.1850" [label="broadcast.1850 \n bf16[4]"];
	"multiply.1851" [label="multiply.1851 \n bf16[4]"];
	"constant.122" [label="constant.122 \n bf16[1]"];
	"compare.1826" [label="compare.1826 \n pred[1]"];
	"constant.123" [label="constant.123 \n bf16[1]"];
	"select.1828" [label="select.1828 \n bf16[1]"];
	"reshape.1830" [label="reshape.1830 \n bf16[] reshape(bf16[1]"];
	"broadcast.1831" [label="broadcast.1831 \n bf16[4]"];
	"multiply.1832" [label="multiply.1832 \n bf16[4]"];
	"broadcast.1848" [label="broadcast.1848 \n bf16[4]"];
	"multiply.1849" [label="multiply.1849 \n bf16[4]"];
	"add.1852" [label="add.1852 \n bf16[4]"];
	"broadcast.1833" [label="broadcast.1833 \n bf16[4]"];
	"multiply.1834" [label="multiply.1834 \n bf16[4]"];
	"multiply.1836" [label="multiply.1836 \n bf16[4]"];
	"convert.1835" [label="convert.1835 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1837" [label="broadcast.1837 \n bf16[4]"];
	"multiply.1838" [label="multiply.1838 \n bf16[4]"];
	"add.1839" [label="add.1839 \n bf16[4]"];
	"sqrt.1840" [label="sqrt.1840 \n bf16[4]"];
	"broadcast.1841" [label="broadcast.1841 \n bf16[4]"];
	"divide.1842" [label="divide.1842 \n bf16[4]"];
	"broadcast.1843" [label="broadcast.1843 \n bf16[4]"];
	"add.1844" [label="add.1844 \n bf16[4]"];
	"divide.1866" [label="divide.1866 \n bf16[4]"];
	"convert.1865" [label="convert.1865 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1867" [label="broadcast.1867 \n bf16[4]"];
	"multiply.1868" [label="multiply.1868 \n bf16[4]"];
	"add.1869" [label="add.1869 \n bf16[4]"];
	"broadcast.1912" [label="broadcast.1912 \n bf16[4,4]"];
	"multiply.1913" [label="multiply.1913 \n bf16[4,4]"];
	"broadcast.1914" [label="broadcast.1914 \n bf16[4,4]"];
	"multiply.1916" [label="multiply.1916 \n bf16[4,4]"];
	"subtract.1917" [label="subtract.1917 \n bf16[4,4]"];
	"broadcast.1904" [label="broadcast.1904 \n bf16[4,4]"];
	"multiply.1905" [label="multiply.1905 \n bf16[4,4]"];
	"constant.125" [label="constant.125 \n bf16[1]"];
	"compare.1879" [label="compare.1879 \n pred[1]"];
	"constant.126" [label="constant.126 \n bf16[1]"];
	"select.1881" [label="select.1881 \n bf16[1]"];
	"reshape.1883" [label="reshape.1883 \n bf16[] reshape(bf16[1]"];
	"broadcast.1885" [label="broadcast.1885 \n bf16[4,4]"];
	"multiply.1886" [label="multiply.1886 \n bf16[4,4]"];
	"broadcast.1902" [label="broadcast.1902 \n bf16[4,4]"];
	"multiply.1903" [label="multiply.1903 \n bf16[4,4]"];
	"add.1906" [label="add.1906 \n bf16[4,4]"];
	"broadcast.1887" [label="broadcast.1887 \n bf16[4,4]"];
	"multiply.1888" [label="multiply.1888 \n bf16[4,4]"];
	"multiply.1890" [label="multiply.1890 \n bf16[4,4]"];
	"convert.1889" [label="convert.1889 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1891" [label="broadcast.1891 \n bf16[4,4]"];
	"multiply.1892" [label="multiply.1892 \n bf16[4,4]"];
	"add.1893" [label="add.1893 \n bf16[4,4]"];
	"sqrt.1894" [label="sqrt.1894 \n bf16[4,4]"];
	"broadcast.1895" [label="broadcast.1895 \n bf16[4,4]"];
	"divide.1896" [label="divide.1896 \n bf16[4,4]"];
	"broadcast.1897" [label="broadcast.1897 \n bf16[4,4]"];
	"add.1898" [label="add.1898 \n bf16[4,4]"];
	"divide.1919" [label="divide.1919 \n bf16[4,4]"];
	"convert.1918" [label="convert.1918 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1920" [label="broadcast.1920 \n bf16[4,4]"];
	"multiply.1921" [label="multiply.1921 \n bf16[4,4]"];
	"add.1922" [label="add.1922 \n bf16[4,4]"];
	"broadcast.1965" [label="broadcast.1965 \n bf16[4]"];
	"multiply.1966" [label="multiply.1966 \n bf16[4]"];
	"broadcast.102" [label="broadcast.102 \n bf16[4]"];
	"multiply.1969" [label="multiply.1969 \n bf16[4]"];
	"subtract.1970" [label="subtract.1970 \n bf16[4]"];
	"broadcast.1956" [label="broadcast.1956 \n bf16[4]"];
	"multiply.1957" [label="multiply.1957 \n bf16[4]"];
	"constant.130" [label="constant.130 \n bf16[1]"];
	"compare.1932" [label="compare.1932 \n pred[1]"];
	"constant.131" [label="constant.131 \n bf16[1]"];
	"select.1934" [label="select.1934 \n bf16[1]"];
	"reshape.1936" [label="reshape.1936 \n bf16[] reshape(bf16[1]"];
	"broadcast.1937" [label="broadcast.1937 \n bf16[4]"];
	"multiply.1938" [label="multiply.1938 \n bf16[4]"];
	"broadcast.1954" [label="broadcast.1954 \n bf16[4]"];
	"multiply.1955" [label="multiply.1955 \n bf16[4]"];
	"add.1958" [label="add.1958 \n bf16[4]"];
	"broadcast.1939" [label="broadcast.1939 \n bf16[4]"];
	"multiply.1940" [label="multiply.1940 \n bf16[4]"];
	"multiply.1942" [label="multiply.1942 \n bf16[4]"];
	"convert.1941" [label="convert.1941 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1943" [label="broadcast.1943 \n bf16[4]"];
	"multiply.1944" [label="multiply.1944 \n bf16[4]"];
	"add.1945" [label="add.1945 \n bf16[4]"];
	"sqrt.1946" [label="sqrt.1946 \n bf16[4]"];
	"broadcast.1947" [label="broadcast.1947 \n bf16[4]"];
	"divide.1948" [label="divide.1948 \n bf16[4]"];
	"broadcast.1949" [label="broadcast.1949 \n bf16[4]"];
	"add.1950" [label="add.1950 \n bf16[4]"];
	"divide.1972" [label="divide.1972 \n bf16[4]"];
	"convert.1971" [label="convert.1971 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.1973" [label="broadcast.1973 \n bf16[4]"];
	"multiply.1974" [label="multiply.1974 \n bf16[4]"];
	"add.1975" [label="add.1975 \n bf16[4]"];
	"broadcast.2018" [label="broadcast.2018 \n bf16[1,4]"];
	"multiply.2019" [label="multiply.2019 \n bf16[1,4]"];
	"broadcast.2020" [label="broadcast.2020 \n bf16[1,4]"];
	"multiply.2022" [label="multiply.2022 \n bf16[1,4]"];
	"subtract.2023" [label="subtract.2023 \n bf16[1,4]"];
	"broadcast.2010" [label="broadcast.2010 \n bf16[1,4]"];
	"multiply.2011" [label="multiply.2011 \n bf16[1,4]"];
	"constant.133" [label="constant.133 \n bf16[1]"];
	"compare.1985" [label="compare.1985 \n pred[1]"];
	"constant.134" [label="constant.134 \n bf16[1]"];
	"select.1987" [label="select.1987 \n bf16[1]"];
	"reshape.1989" [label="reshape.1989 \n bf16[] reshape(bf16[1]"];
	"broadcast.181" [label="broadcast.181 \n bf16[1,4]"];
	"multiply.1992" [label="multiply.1992 \n bf16[1,4]"];
	"broadcast.2008" [label="broadcast.2008 \n bf16[1,4]"];
	"multiply.2009" [label="multiply.2009 \n bf16[1,4]"];
	"add.2012" [label="add.2012 \n bf16[1,4]"];
	"broadcast.1993" [label="broadcast.1993 \n bf16[1,4]"];
	"multiply.1994" [label="multiply.1994 \n bf16[1,4]"];
	"multiply.1996" [label="multiply.1996 \n bf16[1,4]"];
	"convert.1995" [label="convert.1995 \n bf16[] convert(f32[] %p3.6), metadata="];
	"broadcast.1997" [label="broadcast.1997 \n bf16[1,4]"];
	"multiply.1998" [label="multiply.1998 \n bf16[1,4]"];
	"add.1999" [label="add.1999 \n bf16[1,4]"];
	"sqrt.2000" [label="sqrt.2000 \n bf16[1,4]"];
	"broadcast.2001" [label="broadcast.2001 \n bf16[1,4]"];
	"divide.2002" [label="divide.2002 \n bf16[1,4]"];
	"broadcast.2003" [label="broadcast.2003 \n bf16[1,4]"];
	"add.2004" [label="add.2004 \n bf16[1,4]"];
	"divide.2025" [label="divide.2025 \n bf16[1,4]"];
	"convert.2024" [label="convert.2024 \n bf16[] convert(f32[] %p0.1), metadata="];
	"broadcast.2026" [label="broadcast.2026 \n bf16[1,4]"];
	"multiply.2027" [label="multiply.2027 \n bf16[1,4]"];
	"add.2028" [label="add.2028 \n bf16[1,4]"];
	"p27.2094" [label="p27.2094 \n bf16[1]"];
	"reshape.365" [label="reshape.365 \n bf16[1]"];
	"multiply.2096" [label="multiply.2096 \n bf16[1]"];
	"constant.135" [label="constant.135 \n bf16[1]"];
	"multiply.2099" [label="multiply.2099 \n bf16[1]"];
	"subtract.2100" [label="subtract.2100 \n bf16[1]"];
	"multiply.66" [label="multiply.66 \n bf16[] multiply(bf16[] %constant.151, bf16[] %p22.578), metadata="];
	"reshape.514" [label="reshape.514 \n bf16[1]"];
	"reshape.370" [label="reshape.370 \n bf16[1]"];
	"multiply.2069" [label="multiply.2069 \n bf16[1]"];
	"add.2075" [label="add.2075 \n bf16[1]"];
	"multiply.65" [label="multiply.65 \n bf16[] multiply(bf16[] %constant.152, bf16[] %p20.554), metadata="];
	"reshape.511" [label="reshape.511 \n bf16[1]"];
	"multiply.2048" [label="multiply.2048 \n bf16[1]"];
	"convert.2047" [label="convert.2047 \n bf16[] convert(f32[] %p3.6), metadata="];
	"reshape.373" [label="reshape.373 \n bf16[1]"];
	"multiply.2050" [label="multiply.2050 \n bf16[1]"];
	"add.2051" [label="add.2051 \n bf16[1]"];
	"sqrt.2085" [label="sqrt.2085 \n bf16[1]"];
	"reshape.374" [label="reshape.374 \n bf16[1]"];
	"divide.2087" [label="divide.2087 \n bf16[1]"];
	"reshape.375" [label="reshape.375 \n bf16[1]"];
	"add.2089" [label="add.2089 \n bf16[1]"];
	"divide.2102" [label="divide.2102 \n bf16[1]"];
	"convert.2101" [label="convert.2101 \n bf16[] convert(f32[] %p18.535), metadata="];
	"reshape.376" [label="reshape.376 \n bf16[1]"];
	"multiply.2104" [label="multiply.2104 \n bf16[1]"];
	"add.2105" [label="add.2105 \n bf16[1]"];
	"reshape.377" [label="reshape.377 \n bf16[1]"];
	"multiply.2107" [label="multiply.2107 \n bf16[1]"];
	"constant.141" [label="constant.141 \n bf16[1]"];
	"multiply.2110" [label="multiply.2110 \n bf16[1]"];
	"subtract.2111" [label="subtract.2111 \n bf16[1]"];
	"reshape.380" [label="reshape.380 \n bf16[1]"];
	"multiply.2077" [label="multiply.2077 \n bf16[1]"];
	"constant.144" [label="constant.144 \n bf16[1]"];
	"compare.2038" [label="compare.2038 \n pred[1]"];
	"constant.145" [label="constant.145 \n bf16[1]"];
	"select.2040" [label="select.2040 \n bf16[1]"];
	"multiply.2041" [label="multiply.2041 \n bf16[1]"];
	"reshape.385" [label="reshape.385 \n bf16[1]"];
	"multiply.2066" [label="multiply.2066 \n bf16[1]"];
	"add.2078" [label="add.2078 \n bf16[1]"];
	"reshape.386" [label="reshape.386 \n bf16[1]"];
	"multiply.2053" [label="multiply.2053 \n bf16[1]"];
	"multiply.2055" [label="multiply.2055 \n bf16[1]"];
	"convert.2054" [label="convert.2054 \n bf16[] convert(f32[] %p3.6), metadata="];
	"reshape.387" [label="reshape.387 \n bf16[1]"];
	"multiply.2057" [label="multiply.2057 \n bf16[1]"];
	"add.2058" [label="add.2058 \n bf16[1]"];
	"sqrt.2059" [label="sqrt.2059 \n bf16[1]"];
	"reshape.388" [label="reshape.388 \n bf16[1]"];
	"divide.2061" [label="divide.2061 \n bf16[1]"];
	"reshape.389" [label="reshape.389 \n bf16[1]"];
	"add.2063" [label="add.2063 \n bf16[1]"];
	"divide.2113" [label="divide.2113 \n bf16[1]"];
	"convert.2112" [label="convert.2112 \n bf16[] convert(f32[] %p0.1), metadata="];
	"reshape.390" [label="reshape.390 \n bf16[1]"];
	"multiply.2115" [label="multiply.2115 \n bf16[1]"];
	"add.2116" [label="add.2116 \n bf16[1]"];
	"tuple.2117" [label="tuple.2117 \n (bf16[4,4]"]; 
 	"p24.593" -> "broadcast.1325";
	"p15.313" -> "multiply.1326";
	"broadcast.1325" -> "multiply.1326";
	"p23.592" -> "broadcast.1327";
	"multiply.1326" -> "multiply.1329";
	"broadcast.1327" -> "multiply.1329";
	"p15.313" -> "subtract.1330";
	"multiply.1329" -> "subtract.1330";
	"constant.3" -> "multiply.0";
	"p22.578" -> "multiply.0";
	"multiply.0" -> "broadcast.2";
	"p6.25" -> "divide.2";
	"p5.24" -> "divide.2";
	"divide.2" -> "broadcast.185";
	"p7.106" -> "custom-call.38";
	"broadcast.185" -> "multiply.68";
	"custom-call.38" -> "multiply.68";
	"multiply.68" -> "reshape.520";
	"reshape.520" -> "broadcast.12";
	"p8.149" -> "custom-call.39";
	"broadcast.12" -> "dot.159";
	"custom-call.39" -> "dot.159";
	"p9.192" -> "custom-call.40";
	"dot.159" -> "dot.202";
	"custom-call.40" -> "dot.202";
	"p10.235" -> "custom-call.41";
	"dot.202" -> "dot.245";
	"custom-call.41" -> "dot.245";
	"p16.322" -> "transpose.451";
	"dot.245" -> "dot.1";
	"transpose.451" -> "dot.1";
	"dot.1" -> "custom-call.42";
	"custom-call.42" -> "multiply.463";
	"custom-call.42" -> "multiply.463";
	"multiply.463" -> "reduce.470";
	"constant.464" -> "reduce.470";
	"AddComputation.466" -> "reduce.470";
	"reduce.470" -> "sqrt.471";
	"sqrt.471" -> "multiply.473";
	"sqrt.471" -> "multiply.473";
	"multiply.473" -> "reshape.13";
	"p17.474" -> "add.476";
	"reshape.13" -> "add.476";
	"p15.313" -> "custom-call.43";
	"custom-call.43" -> "transpose.321";
	"p16.322" -> "dot.323";
	"transpose.321" -> "dot.323";
	"p14.305" -> "custom-call.44";
	"custom-call.44" -> "broadcast.327";
	"dot.323" -> "add.328";
	"broadcast.327" -> "add.328";
	"add.328" -> "transpose.425";
	"dot.202" -> "dot.2";
	"transpose.425" -> "dot.2";
	"dot.2" -> "custom-call.45";
	"custom-call.45" -> "multiply.437";
	"custom-call.45" -> "multiply.437";
	"multiply.437" -> "reduce.444";
	"constant.438" -> "reduce.444";
	"AddComputation.440" -> "reduce.444";
	"reduce.444" -> "sqrt.445";
	"sqrt.445" -> "multiply.447";
	"sqrt.445" -> "multiply.447";
	"multiply.447" -> "reshape.17";
	"add.476" -> "add.478";
	"reshape.17" -> "add.478";
	"custom-call.41" -> "transpose.304";
	"add.328" -> "dot.329";
	"transpose.304" -> "dot.329";
	"p13.296" -> "custom-call.47";
	"custom-call.47" -> "broadcast.333";
	"dot.329" -> "add.334";
	"broadcast.333" -> "add.334";
	"add.334" -> "transpose.399";
	"dot.159" -> "dot.3";
	"transpose.399" -> "dot.3";
	"dot.3" -> "custom-call.48";
	"custom-call.48" -> "multiply.411";
	"custom-call.48" -> "multiply.411";
	"multiply.411" -> "reduce.418";
	"constant.412" -> "reduce.418";
	"AddComputation.414" -> "reduce.418";
	"reduce.418" -> "sqrt.419";
	"sqrt.419" -> "multiply.421";
	"sqrt.419" -> "multiply.421";
	"multiply.421" -> "reshape.20";
	"add.478" -> "add.480";
	"reshape.20" -> "add.480";
	"custom-call.40" -> "transpose.295";
	"add.334" -> "dot.335";
	"transpose.295" -> "dot.335";
	"p12.287" -> "custom-call.49";
	"custom-call.49" -> "broadcast.339";
	"dot.335" -> "add.340";
	"broadcast.339" -> "add.340";
	"add.340" -> "transpose.373";
	"broadcast.12" -> "dot.4";
	"transpose.373" -> "dot.4";
	"dot.4" -> "custom-call.50";
	"custom-call.50" -> "multiply.385";
	"custom-call.50" -> "multiply.385";
	"multiply.385" -> "reduce.392";
	"constant.386" -> "reduce.392";
	"AddComputation.388" -> "reduce.392";
	"reduce.392" -> "sqrt.393";
	"sqrt.393" -> "multiply.395";
	"sqrt.393" -> "multiply.395";
	"multiply.395" -> "reshape.30";
	"add.480" -> "add.482";
	"reshape.30" -> "add.482";
	"custom-call.39" -> "transpose.286";
	"add.340" -> "dot.341";
	"transpose.286" -> "dot.341";
	"p11.278" -> "custom-call.51";
	"custom-call.51" -> "broadcast.345";
	"dot.341" -> "add.346";
	"broadcast.345" -> "add.346";
	"divide.2" -> "broadcast.187";
	"add.346" -> "multiply.72";
	"broadcast.187" -> "multiply.72";
	"multiply.72" -> "convert.4";
	"convert.4" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"convert.1" -> "reshape.36";
	"reshape.36" -> "custom-call.52";
	"custom-call.52" -> "multiply.359";
	"custom-call.52" -> "multiply.359";
	"multiply.359" -> "reduce.366";
	"constant.360" -> "reduce.366";
	"AddComputation.362" -> "reduce.366";
	"reduce.366" -> "sqrt.367";
	"sqrt.367" -> "multiply.369";
	"sqrt.367" -> "multiply.369";
	"multiply.369" -> "reshape.37";
	"add.482" -> "add.484";
	"reshape.37" -> "add.484";
	"dot.245" -> "reduce.252";
	"constant.246" -> "reduce.252";
	"AddComputation.248" -> "reduce.252";
	"reduce.252" -> "custom-call.53";
	"custom-call.53" -> "multiply.264";
	"custom-call.53" -> "multiply.264";
	"multiply.264" -> "reduce.271";
	"constant.265" -> "reduce.271";
	"AddComputation.267" -> "reduce.271";
	"reduce.271" -> "sqrt.272";
	"sqrt.272" -> "multiply.274";
	"sqrt.272" -> "multiply.274";
	"multiply.274" -> "reshape.39";
	"add.484" -> "add.486";
	"reshape.39" -> "add.486";
	"dot.202" -> "reduce.209";
	"constant.203" -> "reduce.209";
	"AddComputation.205" -> "reduce.209";
	"reduce.209" -> "custom-call.54";
	"custom-call.54" -> "multiply.221";
	"custom-call.54" -> "multiply.221";
	"multiply.221" -> "reduce.228";
	"constant.222" -> "reduce.228";
	"AddComputation.224" -> "reduce.228";
	"reduce.228" -> "sqrt.229";
	"sqrt.229" -> "multiply.231";
	"sqrt.229" -> "multiply.231";
	"multiply.231" -> "reshape.41";
	"add.486" -> "add.488";
	"reshape.41" -> "add.488";
	"dot.159" -> "reduce.166";
	"constant.160" -> "reduce.166";
	"AddComputation.162" -> "reduce.166";
	"reduce.166" -> "custom-call.55";
	"custom-call.55" -> "multiply.178";
	"custom-call.55" -> "multiply.178";
	"multiply.178" -> "reduce.185";
	"constant.179" -> "reduce.185";
	"AddComputation.181" -> "reduce.185";
	"reduce.185" -> "sqrt.186";
	"sqrt.186" -> "multiply.188";
	"sqrt.186" -> "multiply.188";
	"multiply.188" -> "reshape.45";
	"add.488" -> "add.490";
	"reshape.45" -> "add.490";
	"broadcast.12" -> "reduce.123";
	"constant.117" -> "reduce.123";
	"AddComputation.119" -> "reduce.123";
	"reduce.123" -> "custom-call.56";
	"custom-call.56" -> "multiply.135";
	"custom-call.56" -> "multiply.135";
	"multiply.135" -> "reduce.142";
	"constant.136" -> "reduce.142";
	"AddComputation.138" -> "reduce.142";
	"reduce.142" -> "sqrt.143";
	"sqrt.143" -> "multiply.145";
	"sqrt.143" -> "multiply.145";
	"multiply.145" -> "reshape.47";
	"add.490" -> "add.492";
	"reshape.47" -> "add.492";
	"divide.2" -> "broadcast.4";
	"broadcast.4" -> "reduce.80";
	"constant.74" -> "reduce.80";
	"AddComputation.76" -> "reduce.80";
	"reduce.80" -> "custom-call.57";
	"custom-call.57" -> "multiply.74";
	"custom-call.57" -> "multiply.74";
	"add.492" -> "add.494";
	"multiply.74" -> "add.494";
	"add.494" -> "power.497";
	"constant.8" -> "power.497";
	"p4.12" -> "reshape.55";
	"power.497" -> "add.499";
	"reshape.55" -> "add.499";
	"constant.4" -> "divide.502";
	"add.499" -> "divide.502";
	"divide.502" -> "compare.1282";
	"constant.13" -> "compare.1282";
	"compare.1282" -> "select.1284";
	"divide.502" -> "select.1284";
	"constant.15" -> "select.1284";
	"select.1284" -> "reshape.1286";
	"reshape.1286" -> "broadcast.1288";
	"custom-call.42" -> "multiply.1289";
	"broadcast.1288" -> "multiply.1289";
	"p21.572" -> "broadcast.1310";
	"multiply.1289" -> "multiply.1311";
	"broadcast.1310" -> "multiply.1311";
	"broadcast.2" -> "add.1319";
	"multiply.1311" -> "add.1319";
	"constant.16" -> "multiply.15";
	"p20.554" -> "multiply.15";
	"multiply.15" -> "broadcast.17";
	"multiply.1289" -> "multiply.1298";
	"multiply.1289" -> "multiply.1298";
	"p3.6" -> "convert.1297";
	"convert.1297" -> "broadcast.1299";
	"multiply.1298" -> "multiply.1300";
	"broadcast.1299" -> "multiply.1300";
	"broadcast.17" -> "add.1301";
	"multiply.1300" -> "add.1301";
	"add.1301" -> "sqrt.1302";
	"p19.538" -> "broadcast.1303";
	"sqrt.1302" -> "divide.1304";
	"broadcast.1303" -> "divide.1304";
	"p1.3" -> "broadcast.1305";
	"divide.1304" -> "add.1306";
	"broadcast.1305" -> "add.1306";
	"add.1319" -> "divide.1332";
	"add.1306" -> "divide.1332";
	"p18.535" -> "convert.1331";
	"convert.1331" -> "broadcast.1333";
	"divide.1332" -> "multiply.1334";
	"broadcast.1333" -> "multiply.1334";
	"subtract.1330" -> "add.1335";
	"multiply.1334" -> "add.1335";
	"p24.593" -> "broadcast.1594";
	"add.1335" -> "multiply.1595";
	"broadcast.1594" -> "multiply.1595";
	"p23.592" -> "broadcast.1596";
	"multiply.1595" -> "multiply.1598";
	"broadcast.1596" -> "multiply.1598";
	"add.1335" -> "subtract.1599";
	"multiply.1598" -> "subtract.1599";
	"p22.578" -> "broadcast.1586";
	"add.1319" -> "multiply.1587";
	"broadcast.1586" -> "multiply.1587";
	"p6.25" -> "divide.3";
	"p5.24" -> "divide.3";
	"divide.3" -> "broadcast.189";
	"p24.593" -> "broadcast.594";
	"p7.106" -> "multiply.595";
	"broadcast.594" -> "multiply.595";
	"p23.592" -> "broadcast.596";
	"multiply.595" -> "multiply.598";
	"broadcast.596" -> "multiply.598";
	"p7.106" -> "subtract.599";
	"multiply.598" -> "subtract.599";
	"constant.149" -> "multiply.69";
	"p22.578" -> "multiply.69";
	"multiply.69" -> "broadcast.22";
	"divide.502" -> "compare.546";
	"constant.24" -> "compare.546";
	"compare.546" -> "select.548";
	"divide.502" -> "select.548";
	"constant.25" -> "select.548";
	"select.548" -> "reshape.550";
	"reshape.550" -> "broadcast.135";
	"custom-call.52" -> "multiply.553";
	"broadcast.135" -> "multiply.553";
	"p21.572" -> "broadcast.576";
	"multiply.553" -> "multiply.577";
	"broadcast.576" -> "multiply.577";
	"broadcast.22" -> "add.586";
	"multiply.577" -> "add.586";
	"constant.150" -> "multiply.70";
	"p20.554" -> "multiply.70";
	"multiply.70" -> "broadcast.26";
	"multiply.553" -> "multiply.563";
	"multiply.553" -> "multiply.563";
	"p3.6" -> "convert.562";
	"convert.562" -> "broadcast.564";
	"multiply.563" -> "multiply.565";
	"broadcast.564" -> "multiply.565";
	"broadcast.26" -> "add.566";
	"multiply.565" -> "add.566";
	"add.566" -> "sqrt.567";
	"p19.538" -> "broadcast.568";
	"sqrt.567" -> "divide.569";
	"broadcast.568" -> "divide.569";
	"p1.3" -> "broadcast.570";
	"divide.569" -> "add.571";
	"broadcast.570" -> "add.571";
	"add.586" -> "divide.601";
	"add.571" -> "divide.601";
	"p18.535" -> "convert.600";
	"convert.600" -> "broadcast.602";
	"divide.601" -> "multiply.603";
	"broadcast.602" -> "multiply.603";
	"subtract.599" -> "add.604";
	"multiply.603" -> "add.604";
	"add.604" -> "custom-call.58";
	"broadcast.189" -> "multiply.71";
	"custom-call.58" -> "multiply.71";
	"multiply.71" -> "reshape.534";
	"reshape.534" -> "broadcast.94";
	"p24.593" -> "broadcast.720";
	"p8.149" -> "multiply.721";
	"broadcast.720" -> "multiply.721";
	"p23.592" -> "broadcast.722";
	"multiply.721" -> "multiply.724";
	"broadcast.722" -> "multiply.724";
	"p8.149" -> "subtract.725";
	"multiply.724" -> "subtract.725";
	"constant.28" -> "multiply.18";
	"p22.578" -> "multiply.18";
	"multiply.18" -> "broadcast.31";
	"divide.502" -> "compare.677";
	"constant.30" -> "compare.677";
	"compare.677" -> "select.679";
	"divide.502" -> "select.679";
	"constant.31" -> "select.679";
	"select.679" -> "reshape.681";
	"reshape.681" -> "broadcast.683";
	"custom-call.50" -> "multiply.684";
	"broadcast.683" -> "multiply.684";
	"p21.572" -> "broadcast.705";
	"multiply.684" -> "multiply.706";
	"broadcast.705" -> "multiply.706";
	"broadcast.31" -> "add.714";
	"multiply.706" -> "add.714";
	"constant.32" -> "multiply.19";
	"p20.554" -> "multiply.19";
	"multiply.19" -> "broadcast.37";
	"multiply.684" -> "multiply.693";
	"multiply.684" -> "multiply.693";
	"p3.6" -> "convert.692";
	"convert.692" -> "broadcast.694";
	"multiply.693" -> "multiply.695";
	"broadcast.694" -> "multiply.695";
	"broadcast.37" -> "add.696";
	"multiply.695" -> "add.696";
	"add.696" -> "sqrt.697";
	"p19.538" -> "broadcast.698";
	"sqrt.697" -> "divide.699";
	"broadcast.698" -> "divide.699";
	"p1.3" -> "broadcast.700";
	"divide.699" -> "add.701";
	"broadcast.700" -> "add.701";
	"add.714" -> "divide.727";
	"add.701" -> "divide.727";
	"p18.535" -> "convert.726";
	"convert.726" -> "broadcast.728";
	"divide.727" -> "multiply.729";
	"broadcast.728" -> "multiply.729";
	"subtract.725" -> "add.730";
	"multiply.729" -> "add.730";
	"add.730" -> "custom-call.59";
	"broadcast.94" -> "dot.740";
	"custom-call.59" -> "dot.740";
	"p24.593" -> "broadcast.846";
	"p9.192" -> "multiply.847";
	"broadcast.846" -> "multiply.847";
	"p23.592" -> "broadcast.848";
	"multiply.847" -> "multiply.850";
	"broadcast.848" -> "multiply.850";
	"p9.192" -> "subtract.851";
	"multiply.850" -> "subtract.851";
	"constant.33" -> "multiply.20";
	"p22.578" -> "multiply.20";
	"multiply.20" -> "broadcast.40";
	"divide.502" -> "compare.803";
	"constant.37" -> "compare.803";
	"compare.803" -> "select.805";
	"divide.502" -> "select.805";
	"constant.38" -> "select.805";
	"select.805" -> "reshape.807";
	"reshape.807" -> "broadcast.809";
	"custom-call.48" -> "multiply.810";
	"broadcast.809" -> "multiply.810";
	"p21.572" -> "broadcast.831";
	"multiply.810" -> "multiply.832";
	"broadcast.831" -> "multiply.832";
	"broadcast.40" -> "add.840";
	"multiply.832" -> "add.840";
	"constant.39" -> "multiply.21";
	"p20.554" -> "multiply.21";
	"multiply.21" -> "broadcast.44";
	"multiply.810" -> "multiply.819";
	"multiply.810" -> "multiply.819";
	"p3.6" -> "convert.818";
	"convert.818" -> "broadcast.820";
	"multiply.819" -> "multiply.821";
	"broadcast.820" -> "multiply.821";
	"broadcast.44" -> "add.822";
	"multiply.821" -> "add.822";
	"add.822" -> "sqrt.823";
	"p19.538" -> "broadcast.824";
	"sqrt.823" -> "divide.825";
	"broadcast.824" -> "divide.825";
	"p1.3" -> "broadcast.826";
	"divide.825" -> "add.827";
	"broadcast.826" -> "add.827";
	"add.840" -> "divide.853";
	"add.827" -> "divide.853";
	"p18.535" -> "convert.852";
	"convert.852" -> "broadcast.854";
	"divide.853" -> "multiply.855";
	"broadcast.854" -> "multiply.855";
	"subtract.851" -> "add.856";
	"multiply.855" -> "add.856";
	"add.856" -> "custom-call.60";
	"dot.740" -> "dot.866";
	"custom-call.60" -> "dot.866";
	"p24.593" -> "broadcast.972";
	"p10.235" -> "multiply.973";
	"broadcast.972" -> "multiply.973";
	"p23.592" -> "broadcast.974";
	"multiply.973" -> "multiply.976";
	"broadcast.974" -> "multiply.976";
	"p10.235" -> "subtract.977";
	"multiply.976" -> "subtract.977";
	"constant.40" -> "multiply.22";
	"p22.578" -> "multiply.22";
	"multiply.22" -> "broadcast.47";
	"divide.502" -> "compare.929";
	"constant.42" -> "compare.929";
	"compare.929" -> "select.931";
	"divide.502" -> "select.931";
	"constant.43" -> "select.931";
	"select.931" -> "reshape.933";
	"reshape.933" -> "broadcast.935";
	"custom-call.45" -> "multiply.936";
	"broadcast.935" -> "multiply.936";
	"p21.572" -> "broadcast.957";
	"multiply.936" -> "multiply.958";
	"broadcast.957" -> "multiply.958";
	"broadcast.47" -> "add.966";
	"multiply.958" -> "add.966";
	"constant.44" -> "multiply.23";
	"p20.554" -> "multiply.23";
	"multiply.23" -> "broadcast.51";
	"multiply.936" -> "multiply.945";
	"multiply.936" -> "multiply.945";
	"p3.6" -> "convert.944";
	"convert.944" -> "broadcast.946";
	"multiply.945" -> "multiply.947";
	"broadcast.946" -> "multiply.947";
	"broadcast.51" -> "add.948";
	"multiply.947" -> "add.948";
	"add.948" -> "sqrt.949";
	"p19.538" -> "broadcast.950";
	"sqrt.949" -> "divide.951";
	"broadcast.950" -> "divide.951";
	"p1.3" -> "broadcast.952";
	"divide.951" -> "add.953";
	"broadcast.952" -> "add.953";
	"add.966" -> "divide.979";
	"add.953" -> "divide.979";
	"p18.535" -> "convert.978";
	"convert.978" -> "broadcast.980";
	"divide.979" -> "multiply.981";
	"broadcast.980" -> "multiply.981";
	"subtract.977" -> "add.982";
	"multiply.981" -> "add.982";
	"add.982" -> "custom-call.61";
	"dot.866" -> "dot.992";
	"custom-call.61" -> "dot.992";
	"p25.1344" -> "transpose.1501";
	"dot.992" -> "dot.7";
	"transpose.1501" -> "dot.7";
	"dot.7" -> "custom-call.62";
	"multiply.1289" -> "add.1512";
	"custom-call.62" -> "add.1512";
	"add.1512" -> "multiply.1515";
	"add.1512" -> "multiply.1515";
	"multiply.1515" -> "reduce.1522";
	"constant.1516" -> "reduce.1522";
	"AddComputation.1518" -> "reduce.1522";
	"reduce.1522" -> "sqrt.1523";
	"sqrt.1523" -> "multiply.1525";
	"sqrt.1523" -> "multiply.1525";
	"multiply.1525" -> "reshape.145";
	"p26.1526" -> "add.1528";
	"reshape.145" -> "add.1528";
	"add.1335" -> "custom-call.63";
	"custom-call.63" -> "transpose.1343";
	"p25.1344" -> "dot.1345";
	"transpose.1343" -> "dot.1345";
	"p24.593" -> "broadcast.1255";
	"p14.305" -> "multiply.1256";
	"broadcast.1255" -> "multiply.1256";
	"constant.47" -> "broadcast.52";
	"multiply.1256" -> "multiply.1259";
	"broadcast.52" -> "multiply.1259";
	"p14.305" -> "subtract.1260";
	"multiply.1259" -> "subtract.1260";
	"constant.48" -> "multiply.27";
	"p22.578" -> "multiply.27";
	"multiply.27" -> "broadcast.56";
	"divide.502" -> "compare.1017";
	"constant.50" -> "compare.1017";
	"compare.1017" -> "select.1019";
	"divide.502" -> "select.1019";
	"constant.51" -> "select.1019";
	"select.1019" -> "reshape.1021";
	"reshape.1021" -> "broadcast.1022";
	"custom-call.53" -> "multiply.1023";
	"broadcast.1022" -> "multiply.1023";
	"p21.572" -> "broadcast.1239";
	"multiply.1023" -> "multiply.1240";
	"broadcast.1239" -> "multiply.1240";
	"broadcast.56" -> "add.1248";
	"multiply.1240" -> "add.1248";
	"constant.53" -> "multiply.29";
	"p20.554" -> "multiply.29";
	"multiply.29" -> "broadcast.59";
	"multiply.1023" -> "multiply.1227";
	"multiply.1023" -> "multiply.1227";
	"p3.6" -> "convert.1226";
	"convert.1226" -> "broadcast.1228";
	"multiply.1227" -> "multiply.1229";
	"broadcast.1228" -> "multiply.1229";
	"broadcast.59" -> "add.1230";
	"multiply.1229" -> "add.1230";
	"add.1230" -> "sqrt.1231";
	"p19.538" -> "broadcast.1232";
	"sqrt.1231" -> "divide.1233";
	"broadcast.1232" -> "divide.1233";
	"p1.3" -> "broadcast.1234";
	"divide.1233" -> "add.1235";
	"broadcast.1234" -> "add.1235";
	"add.1248" -> "divide.1262";
	"add.1235" -> "divide.1262";
	"p18.535" -> "convert.1261";
	"convert.1261" -> "broadcast.1263";
	"divide.1262" -> "multiply.1264";
	"broadcast.1263" -> "multiply.1264";
	"subtract.1260" -> "add.1265";
	"multiply.1264" -> "add.1265";
	"add.1265" -> "custom-call.64";
	"custom-call.64" -> "broadcast.1349";
	"dot.1345" -> "add.1350";
	"broadcast.1349" -> "add.1350";
	"add.1350" -> "transpose.1468";
	"dot.866" -> "dot.8";
	"transpose.1468" -> "dot.8";
	"dot.8" -> "custom-call.65";
	"multiply.936" -> "add.1479";
	"custom-call.65" -> "add.1479";
	"add.1479" -> "multiply.1482";
	"add.1479" -> "multiply.1482";
	"multiply.1482" -> "reduce.1489";
	"constant.1483" -> "reduce.1489";
	"AddComputation.1485" -> "reduce.1489";
	"reduce.1489" -> "sqrt.1490";
	"sqrt.1490" -> "multiply.1492";
	"sqrt.1490" -> "multiply.1492";
	"multiply.1492" -> "reshape.164";
	"add.1528" -> "add.1530";
	"reshape.164" -> "add.1530";
	"custom-call.61" -> "transpose.1216";
	"add.1350" -> "dot.1351";
	"transpose.1216" -> "dot.1351";
	"p24.593" -> "broadcast.1198";
	"p13.296" -> "multiply.1199";
	"broadcast.1198" -> "multiply.1199";
	"constant.57" -> "broadcast.61";
	"multiply.1199" -> "multiply.1202";
	"broadcast.61" -> "multiply.1202";
	"p13.296" -> "subtract.1203";
	"multiply.1202" -> "subtract.1203";
	"constant.59" -> "multiply.33";
	"p22.578" -> "multiply.33";
	"multiply.33" -> "broadcast.64";
	"divide.502" -> "compare.891";
	"constant.66" -> "compare.891";
	"compare.891" -> "select.893";
	"divide.502" -> "select.893";
	"constant.67" -> "select.893";
	"select.893" -> "reshape.895";
	"reshape.895" -> "broadcast.896";
	"custom-call.54" -> "multiply.897";
	"broadcast.896" -> "multiply.897";
	"p21.572" -> "broadcast.1182";
	"multiply.897" -> "multiply.1183";
	"broadcast.1182" -> "multiply.1183";
	"broadcast.64" -> "add.1191";
	"multiply.1183" -> "add.1191";
	"constant.68" -> "multiply.34";
	"p20.554" -> "multiply.34";
	"multiply.34" -> "broadcast.68";
	"multiply.897" -> "multiply.1170";
	"multiply.897" -> "multiply.1170";
	"p3.6" -> "convert.1169";
	"convert.1169" -> "broadcast.1171";
	"multiply.1170" -> "multiply.1172";
	"broadcast.1171" -> "multiply.1172";
	"broadcast.68" -> "add.1173";
	"multiply.1172" -> "add.1173";
	"add.1173" -> "sqrt.1174";
	"p19.538" -> "broadcast.1175";
	"sqrt.1174" -> "divide.1176";
	"broadcast.1175" -> "divide.1176";
	"p1.3" -> "broadcast.1177";
	"divide.1176" -> "add.1178";
	"broadcast.1177" -> "add.1178";
	"add.1191" -> "divide.1205";
	"add.1178" -> "divide.1205";
	"p18.535" -> "convert.1204";
	"convert.1204" -> "broadcast.1206";
	"divide.1205" -> "multiply.1207";
	"broadcast.1206" -> "multiply.1207";
	"subtract.1203" -> "add.1208";
	"multiply.1207" -> "add.1208";
	"add.1208" -> "custom-call.66";
	"custom-call.66" -> "broadcast.1355";
	"dot.1351" -> "add.1356";
	"broadcast.1355" -> "add.1356";
	"add.1356" -> "transpose.1435";
	"dot.740" -> "dot.9";
	"transpose.1435" -> "dot.9";
	"dot.9" -> "custom-call.67";
	"multiply.810" -> "add.1446";
	"custom-call.67" -> "add.1446";
	"add.1446" -> "multiply.1449";
	"add.1446" -> "multiply.1449";
	"multiply.1449" -> "reduce.1456";
	"constant.1450" -> "reduce.1456";
	"AddComputation.1452" -> "reduce.1456";
	"reduce.1456" -> "sqrt.1457";
	"sqrt.1457" -> "multiply.1459";
	"sqrt.1457" -> "multiply.1459";
	"multiply.1459" -> "reshape.185";
	"add.1530" -> "add.1532";
	"reshape.185" -> "add.1532";
	"custom-call.60" -> "transpose.1159";
	"add.1356" -> "dot.1357";
	"transpose.1159" -> "dot.1357";
	"p24.593" -> "broadcast.1141";
	"p12.287" -> "multiply.1142";
	"broadcast.1141" -> "multiply.1142";
	"constant.70" -> "broadcast.70";
	"multiply.1142" -> "multiply.1145";
	"broadcast.70" -> "multiply.1145";
	"p12.287" -> "subtract.1146";
	"multiply.1145" -> "subtract.1146";
	"constant.71" -> "multiply.38";
	"p22.578" -> "multiply.38";
	"multiply.38" -> "broadcast.75";
	"divide.502" -> "compare.765";
	"constant.73" -> "compare.765";
	"compare.765" -> "select.767";
	"divide.502" -> "select.767";
	"constant.76" -> "select.767";
	"select.767" -> "reshape.769";
	"reshape.769" -> "broadcast.770";
	"custom-call.55" -> "multiply.771";
	"broadcast.770" -> "multiply.771";
	"p21.572" -> "broadcast.1125";
	"multiply.771" -> "multiply.1126";
	"broadcast.1125" -> "multiply.1126";
	"broadcast.75" -> "add.1134";
	"multiply.1126" -> "add.1134";
	"constant.77" -> "multiply.39";
	"p20.554" -> "multiply.39";
	"multiply.39" -> "broadcast.78";
	"multiply.771" -> "multiply.1113";
	"multiply.771" -> "multiply.1113";
	"p3.6" -> "convert.1112";
	"convert.1112" -> "broadcast.1114";
	"multiply.1113" -> "multiply.1115";
	"broadcast.1114" -> "multiply.1115";
	"broadcast.78" -> "add.1116";
	"multiply.1115" -> "add.1116";
	"add.1116" -> "sqrt.1117";
	"p19.538" -> "broadcast.1118";
	"sqrt.1117" -> "divide.1119";
	"broadcast.1118" -> "divide.1119";
	"p1.3" -> "broadcast.1120";
	"divide.1119" -> "add.1121";
	"broadcast.1120" -> "add.1121";
	"add.1134" -> "divide.1148";
	"add.1121" -> "divide.1148";
	"p18.535" -> "convert.1147";
	"convert.1147" -> "broadcast.1149";
	"divide.1148" -> "multiply.1150";
	"broadcast.1149" -> "multiply.1150";
	"subtract.1146" -> "add.1151";
	"multiply.1150" -> "add.1151";
	"add.1151" -> "custom-call.68";
	"custom-call.68" -> "broadcast.1361";
	"dot.1357" -> "add.1362";
	"broadcast.1361" -> "add.1362";
	"add.1362" -> "transpose.1402";
	"broadcast.94" -> "dot.10";
	"transpose.1402" -> "dot.10";
	"dot.10" -> "custom-call.69";
	"multiply.684" -> "add.1413";
	"custom-call.69" -> "add.1413";
	"add.1413" -> "multiply.1416";
	"add.1413" -> "multiply.1416";
	"multiply.1416" -> "reduce.1423";
	"constant.1417" -> "reduce.1423";
	"AddComputation.1419" -> "reduce.1423";
	"reduce.1423" -> "sqrt.1424";
	"sqrt.1424" -> "multiply.1426";
	"sqrt.1424" -> "multiply.1426";
	"multiply.1426" -> "reshape.209";
	"add.1532" -> "add.1534";
	"reshape.209" -> "add.1534";
	"custom-call.59" -> "transpose.1102";
	"add.1362" -> "dot.1363";
	"transpose.1102" -> "dot.1363";
	"p24.593" -> "broadcast.1084";
	"p11.278" -> "multiply.1085";
	"broadcast.1084" -> "multiply.1085";
	"constant.79" -> "broadcast.83";
	"multiply.1085" -> "multiply.1088";
	"broadcast.83" -> "multiply.1088";
	"p11.278" -> "subtract.1089";
	"multiply.1088" -> "subtract.1089";
	"constant.80" -> "multiply.44";
	"p22.578" -> "multiply.44";
	"multiply.44" -> "broadcast.86";
	"divide.502" -> "compare.639";
	"constant.82" -> "compare.639";
	"compare.639" -> "select.641";
	"divide.502" -> "select.641";
	"constant.83" -> "select.641";
	"select.641" -> "reshape.643";
	"reshape.643" -> "broadcast.644";
	"custom-call.56" -> "multiply.645";
	"broadcast.644" -> "multiply.645";
	"p21.572" -> "broadcast.1068";
	"multiply.645" -> "multiply.1069";
	"broadcast.1068" -> "multiply.1069";
	"broadcast.86" -> "add.1077";
	"multiply.1069" -> "add.1077";
	"constant.84" -> "multiply.45";
	"p20.554" -> "multiply.45";
	"multiply.45" -> "broadcast.89";
	"multiply.645" -> "multiply.1056";
	"multiply.645" -> "multiply.1056";
	"p3.6" -> "convert.1055";
	"convert.1055" -> "broadcast.1057";
	"multiply.1056" -> "multiply.1058";
	"broadcast.1057" -> "multiply.1058";
	"broadcast.89" -> "add.1059";
	"multiply.1058" -> "add.1059";
	"add.1059" -> "sqrt.1060";
	"p19.538" -> "broadcast.1061";
	"sqrt.1060" -> "divide.1062";
	"broadcast.1061" -> "divide.1062";
	"p1.3" -> "broadcast.1063";
	"divide.1062" -> "add.1064";
	"broadcast.1063" -> "add.1064";
	"add.1077" -> "divide.1091";
	"add.1064" -> "divide.1091";
	"p18.535" -> "convert.1090";
	"convert.1090" -> "broadcast.1092";
	"divide.1091" -> "multiply.1093";
	"broadcast.1092" -> "multiply.1093";
	"subtract.1089" -> "add.1094";
	"multiply.1093" -> "add.1094";
	"add.1094" -> "custom-call.70";
	"custom-call.70" -> "broadcast.1367";
	"dot.1363" -> "add.1368";
	"broadcast.1367" -> "add.1368";
	"divide.3" -> "broadcast.193";
	"add.1368" -> "multiply.73";
	"broadcast.193" -> "multiply.73";
	"multiply.73" -> "convert.5";
	"convert.5" -> "reduce.1";
	"constant.1" -> "reduce.1";
	"scalar_add_computation" -> "reduce.1";
	"reduce.1" -> "convert.3";
	"convert.3" -> "reshape.230";
	"reshape.230" -> "custom-call.71";
	"multiply.553" -> "add.1380";
	"custom-call.71" -> "add.1380";
	"add.1380" -> "multiply.1383";
	"add.1380" -> "multiply.1383";
	"multiply.1383" -> "reduce.1390";
	"constant.1384" -> "reduce.1390";
	"AddComputation.1386" -> "reduce.1390";
	"reduce.1390" -> "sqrt.1391";
	"sqrt.1391" -> "multiply.1393";
	"sqrt.1391" -> "multiply.1393";
	"multiply.1393" -> "reshape.234";
	"add.1534" -> "add.1536";
	"reshape.234" -> "add.1536";
	"dot.992" -> "reduce.999";
	"constant.993" -> "reduce.999";
	"AddComputation.995" -> "reduce.999";
	"reduce.999" -> "custom-call.72";
	"multiply.1023" -> "add.1024";
	"custom-call.72" -> "add.1024";
	"add.1024" -> "multiply.1027";
	"add.1024" -> "multiply.1027";
	"multiply.1027" -> "reduce.1034";
	"constant.1028" -> "reduce.1034";
	"AddComputation.1030" -> "reduce.1034";
	"reduce.1034" -> "sqrt.1035";
	"sqrt.1035" -> "multiply.1037";
	"sqrt.1035" -> "multiply.1037";
	"multiply.1037" -> "reshape.238";
	"add.1536" -> "add.1538";
	"reshape.238" -> "add.1538";
	"dot.866" -> "reduce.873";
	"constant.867" -> "reduce.873";
	"AddComputation.869" -> "reduce.873";
	"reduce.873" -> "custom-call.73";
	"multiply.897" -> "add.898";
	"custom-call.73" -> "add.898";
	"add.898" -> "multiply.901";
	"add.898" -> "multiply.901";
	"multiply.901" -> "reduce.908";
	"constant.902" -> "reduce.908";
	"AddComputation.904" -> "reduce.908";
	"reduce.908" -> "sqrt.909";
	"sqrt.909" -> "multiply.911";
	"sqrt.909" -> "multiply.911";
	"multiply.911" -> "reshape.242";
	"add.1538" -> "add.1540";
	"reshape.242" -> "add.1540";
	"dot.740" -> "reduce.747";
	"constant.741" -> "reduce.747";
	"AddComputation.743" -> "reduce.747";
	"reduce.747" -> "custom-call.74";
	"multiply.771" -> "add.772";
	"custom-call.74" -> "add.772";
	"add.772" -> "multiply.775";
	"add.772" -> "multiply.775";
	"multiply.775" -> "reduce.782";
	"constant.776" -> "reduce.782";
	"AddComputation.778" -> "reduce.782";
	"reduce.782" -> "sqrt.783";
	"sqrt.783" -> "multiply.785";
	"sqrt.783" -> "multiply.785";
	"multiply.785" -> "reshape.246";
	"add.1540" -> "add.1542";
	"reshape.246" -> "add.1542";
	"broadcast.94" -> "reduce.621";
	"constant.615" -> "reduce.621";
	"AddComputation.617" -> "reduce.621";
	"reduce.621" -> "custom-call.75";
	"multiply.645" -> "add.646";
	"custom-call.75" -> "add.646";
	"add.646" -> "multiply.649";
	"add.646" -> "multiply.649";
	"multiply.649" -> "reduce.656";
	"constant.650" -> "reduce.656";
	"AddComputation.652" -> "reduce.656";
	"reduce.656" -> "sqrt.657";
	"sqrt.657" -> "multiply.659";
	"sqrt.657" -> "multiply.659";
	"multiply.659" -> "reshape.250";
	"add.1542" -> "add.1544";
	"reshape.250" -> "add.1544";
	"divide.502" -> "compare.509";
	"constant.86" -> "compare.509";
	"compare.509" -> "select.511";
	"divide.502" -> "select.511";
	"constant.87" -> "select.511";
	"custom-call.57" -> "multiply.512";
	"select.511" -> "multiply.512";
	"divide.3" -> "broadcast.19";
	"broadcast.19" -> "reduce.41";
	"constant.35" -> "reduce.41";
	"AddComputation.37" -> "reduce.41";
	"reduce.41" -> "custom-call.76";
	"multiply.512" -> "add.513";
	"custom-call.76" -> "add.513";
	"add.513" -> "multiply.75";
	"add.513" -> "multiply.75";
	"add.1544" -> "add.1546";
	"multiply.75" -> "add.1546";
	"add.1546" -> "power.1549";
	"constant.91" -> "power.1549";
	"p4.12" -> "reshape.264";
	"power.1549" -> "add.1551";
	"reshape.264" -> "add.1551";
	"constant.45" -> "divide.1554";
	"add.1551" -> "divide.1554";
	"divide.1554" -> "compare.1561";
	"constant.96" -> "compare.1561";
	"compare.1561" -> "select.1563";
	"divide.1554" -> "select.1563";
	"constant.97" -> "select.1563";
	"select.1563" -> "reshape.1565";
	"reshape.1565" -> "broadcast.1567";
	"add.1512" -> "multiply.1568";
	"broadcast.1567" -> "multiply.1568";
	"p21.572" -> "broadcast.1584";
	"multiply.1568" -> "multiply.1585";
	"broadcast.1584" -> "multiply.1585";
	"multiply.1587" -> "add.1588";
	"multiply.1585" -> "add.1588";
	"p20.554" -> "broadcast.1569";
	"add.1301" -> "multiply.1570";
	"broadcast.1569" -> "multiply.1570";
	"multiply.1568" -> "multiply.1572";
	"multiply.1568" -> "multiply.1572";
	"p3.6" -> "convert.1571";
	"convert.1571" -> "broadcast.1573";
	"multiply.1572" -> "multiply.1574";
	"broadcast.1573" -> "multiply.1574";
	"multiply.1570" -> "add.1575";
	"multiply.1574" -> "add.1575";
	"add.1575" -> "sqrt.1576";
	"p2.5" -> "broadcast.1577";
	"sqrt.1576" -> "divide.1578";
	"broadcast.1577" -> "divide.1578";
	"p1.3" -> "broadcast.1579";
	"divide.1578" -> "add.1580";
	"broadcast.1579" -> "add.1580";
	"add.1588" -> "divide.1601";
	"add.1580" -> "divide.1601";
	"p0.1" -> "convert.1600";
	"convert.1600" -> "broadcast.1602";
	"divide.1601" -> "multiply.1603";
	"broadcast.1602" -> "multiply.1603";
	"subtract.1599" -> "add.1604";
	"multiply.1603" -> "add.1604";
	"p24.593" -> "broadcast.1647";
	"add.1265" -> "multiply.1648";
	"broadcast.1647" -> "multiply.1648";
	"constant.99" -> "broadcast.96";
	"multiply.1648" -> "multiply.1651";
	"broadcast.96" -> "multiply.1651";
	"add.1265" -> "subtract.1652";
	"multiply.1651" -> "subtract.1652";
	"p22.578" -> "broadcast.1638";
	"add.1248" -> "multiply.1639";
	"broadcast.1638" -> "multiply.1639";
	"divide.1554" -> "compare.1614";
	"constant.101" -> "compare.1614";
	"compare.1614" -> "select.1616";
	"divide.1554" -> "select.1616";
	"constant.102" -> "select.1616";
	"select.1616" -> "reshape.1618";
	"reshape.1618" -> "broadcast.1619";
	"add.1024" -> "multiply.1620";
	"broadcast.1619" -> "multiply.1620";
	"p21.572" -> "broadcast.1636";
	"multiply.1620" -> "multiply.1637";
	"broadcast.1636" -> "multiply.1637";
	"multiply.1639" -> "add.1640";
	"multiply.1637" -> "add.1640";
	"p20.554" -> "broadcast.1621";
	"add.1230" -> "multiply.1622";
	"broadcast.1621" -> "multiply.1622";
	"multiply.1620" -> "multiply.1624";
	"multiply.1620" -> "multiply.1624";
	"p3.6" -> "convert.1623";
	"convert.1623" -> "broadcast.1625";
	"multiply.1624" -> "multiply.1626";
	"broadcast.1625" -> "multiply.1626";
	"multiply.1622" -> "add.1627";
	"multiply.1626" -> "add.1627";
	"add.1627" -> "sqrt.1628";
	"p2.5" -> "broadcast.1629";
	"sqrt.1628" -> "divide.1630";
	"broadcast.1629" -> "divide.1630";
	"p1.3" -> "broadcast.1631";
	"divide.1630" -> "add.1632";
	"broadcast.1631" -> "add.1632";
	"add.1640" -> "divide.1654";
	"add.1632" -> "divide.1654";
	"p0.1" -> "convert.1653";
	"convert.1653" -> "broadcast.1655";
	"divide.1654" -> "multiply.1656";
	"broadcast.1655" -> "multiply.1656";
	"subtract.1652" -> "add.1657";
	"multiply.1656" -> "add.1657";
	"p24.593" -> "broadcast.1700";
	"add.982" -> "multiply.1701";
	"broadcast.1700" -> "multiply.1701";
	"p23.592" -> "broadcast.1702";
	"multiply.1701" -> "multiply.1704";
	"broadcast.1702" -> "multiply.1704";
	"add.982" -> "subtract.1705";
	"multiply.1704" -> "subtract.1705";
	"p22.578" -> "broadcast.1692";
	"add.966" -> "multiply.1693";
	"broadcast.1692" -> "multiply.1693";
	"divide.1554" -> "compare.1667";
	"constant.107" -> "compare.1667";
	"compare.1667" -> "select.1669";
	"divide.1554" -> "select.1669";
	"constant.108" -> "select.1669";
	"select.1669" -> "reshape.1671";
	"reshape.1671" -> "broadcast.1673";
	"add.1479" -> "multiply.1674";
	"broadcast.1673" -> "multiply.1674";
	"p21.572" -> "broadcast.1690";
	"multiply.1674" -> "multiply.1691";
	"broadcast.1690" -> "multiply.1691";
	"multiply.1693" -> "add.1694";
	"multiply.1691" -> "add.1694";
	"p20.554" -> "broadcast.1675";
	"add.948" -> "multiply.1676";
	"broadcast.1675" -> "multiply.1676";
	"multiply.1674" -> "multiply.1678";
	"multiply.1674" -> "multiply.1678";
	"p3.6" -> "convert.1677";
	"convert.1677" -> "broadcast.1679";
	"multiply.1678" -> "multiply.1680";
	"broadcast.1679" -> "multiply.1680";
	"multiply.1676" -> "add.1681";
	"multiply.1680" -> "add.1681";
	"add.1681" -> "sqrt.1682";
	"p2.5" -> "broadcast.1683";
	"sqrt.1682" -> "divide.1684";
	"broadcast.1683" -> "divide.1684";
	"p1.3" -> "broadcast.1685";
	"divide.1684" -> "add.1686";
	"broadcast.1685" -> "add.1686";
	"add.1694" -> "divide.1707";
	"add.1686" -> "divide.1707";
	"p0.1" -> "convert.1706";
	"convert.1706" -> "broadcast.1708";
	"divide.1707" -> "multiply.1709";
	"broadcast.1708" -> "multiply.1709";
	"subtract.1705" -> "add.1710";
	"multiply.1709" -> "add.1710";
	"p24.593" -> "broadcast.1753";
	"add.1208" -> "multiply.1754";
	"broadcast.1753" -> "multiply.1754";
	"constant.110" -> "broadcast.98";
	"multiply.1754" -> "multiply.1757";
	"broadcast.98" -> "multiply.1757";
	"add.1208" -> "subtract.1758";
	"multiply.1757" -> "subtract.1758";
	"p22.578" -> "broadcast.1744";
	"add.1191" -> "multiply.1745";
	"broadcast.1744" -> "multiply.1745";
	"divide.1554" -> "compare.1720";
	"constant.112" -> "compare.1720";
	"compare.1720" -> "select.1722";
	"divide.1554" -> "select.1722";
	"constant.113" -> "select.1722";
	"select.1722" -> "reshape.1724";
	"reshape.1724" -> "broadcast.1725";
	"add.898" -> "multiply.1726";
	"broadcast.1725" -> "multiply.1726";
	"p21.572" -> "broadcast.1742";
	"multiply.1726" -> "multiply.1743";
	"broadcast.1742" -> "multiply.1743";
	"multiply.1745" -> "add.1746";
	"multiply.1743" -> "add.1746";
	"p20.554" -> "broadcast.1727";
	"add.1173" -> "multiply.1728";
	"broadcast.1727" -> "multiply.1728";
	"multiply.1726" -> "multiply.1730";
	"multiply.1726" -> "multiply.1730";
	"p3.6" -> "convert.1729";
	"convert.1729" -> "broadcast.1731";
	"multiply.1730" -> "multiply.1732";
	"broadcast.1731" -> "multiply.1732";
	"multiply.1728" -> "add.1733";
	"multiply.1732" -> "add.1733";
	"add.1733" -> "sqrt.1734";
	"p2.5" -> "broadcast.1735";
	"sqrt.1734" -> "divide.1736";
	"broadcast.1735" -> "divide.1736";
	"p1.3" -> "broadcast.1737";
	"divide.1736" -> "add.1738";
	"broadcast.1737" -> "add.1738";
	"add.1746" -> "divide.1760";
	"add.1738" -> "divide.1760";
	"p0.1" -> "convert.1759";
	"convert.1759" -> "broadcast.1761";
	"divide.1760" -> "multiply.1762";
	"broadcast.1761" -> "multiply.1762";
	"subtract.1758" -> "add.1763";
	"multiply.1762" -> "add.1763";
	"p24.593" -> "broadcast.1806";
	"add.856" -> "multiply.1807";
	"broadcast.1806" -> "multiply.1807";
	"p23.592" -> "broadcast.1808";
	"multiply.1807" -> "multiply.1810";
	"broadcast.1808" -> "multiply.1810";
	"add.856" -> "subtract.1811";
	"multiply.1810" -> "subtract.1811";
	"p22.578" -> "broadcast.1798";
	"add.840" -> "multiply.1799";
	"broadcast.1798" -> "multiply.1799";
	"divide.1554" -> "compare.1773";
	"constant.115" -> "compare.1773";
	"compare.1773" -> "select.1775";
	"divide.1554" -> "select.1775";
	"constant.116" -> "select.1775";
	"select.1775" -> "reshape.1777";
	"reshape.1777" -> "broadcast.1779";
	"add.1446" -> "multiply.1780";
	"broadcast.1779" -> "multiply.1780";
	"p21.572" -> "broadcast.1796";
	"multiply.1780" -> "multiply.1797";
	"broadcast.1796" -> "multiply.1797";
	"multiply.1799" -> "add.1800";
	"multiply.1797" -> "add.1800";
	"p20.554" -> "broadcast.1781";
	"add.822" -> "multiply.1782";
	"broadcast.1781" -> "multiply.1782";
	"multiply.1780" -> "multiply.1784";
	"multiply.1780" -> "multiply.1784";
	"p3.6" -> "convert.1783";
	"convert.1783" -> "broadcast.1785";
	"multiply.1784" -> "multiply.1786";
	"broadcast.1785" -> "multiply.1786";
	"multiply.1782" -> "add.1787";
	"multiply.1786" -> "add.1787";
	"add.1787" -> "sqrt.1788";
	"p2.5" -> "broadcast.1789";
	"sqrt.1788" -> "divide.1790";
	"broadcast.1789" -> "divide.1790";
	"p1.3" -> "broadcast.1791";
	"divide.1790" -> "add.1792";
	"broadcast.1791" -> "add.1792";
	"add.1800" -> "divide.1813";
	"add.1792" -> "divide.1813";
	"p0.1" -> "convert.1812";
	"convert.1812" -> "broadcast.1814";
	"divide.1813" -> "multiply.1815";
	"broadcast.1814" -> "multiply.1815";
	"subtract.1811" -> "add.1816";
	"multiply.1815" -> "add.1816";
	"p24.593" -> "broadcast.1859";
	"add.1151" -> "multiply.1860";
	"broadcast.1859" -> "multiply.1860";
	"constant.120" -> "broadcast.100";
	"multiply.1860" -> "multiply.1863";
	"broadcast.100" -> "multiply.1863";
	"add.1151" -> "subtract.1864";
	"multiply.1863" -> "subtract.1864";
	"p22.578" -> "broadcast.1850";
	"add.1134" -> "multiply.1851";
	"broadcast.1850" -> "multiply.1851";
	"divide.1554" -> "compare.1826";
	"constant.122" -> "compare.1826";
	"compare.1826" -> "select.1828";
	"divide.1554" -> "select.1828";
	"constant.123" -> "select.1828";
	"select.1828" -> "reshape.1830";
	"reshape.1830" -> "broadcast.1831";
	"add.772" -> "multiply.1832";
	"broadcast.1831" -> "multiply.1832";
	"p21.572" -> "broadcast.1848";
	"multiply.1832" -> "multiply.1849";
	"broadcast.1848" -> "multiply.1849";
	"multiply.1851" -> "add.1852";
	"multiply.1849" -> "add.1852";
	"p20.554" -> "broadcast.1833";
	"add.1116" -> "multiply.1834";
	"broadcast.1833" -> "multiply.1834";
	"multiply.1832" -> "multiply.1836";
	"multiply.1832" -> "multiply.1836";
	"p3.6" -> "convert.1835";
	"convert.1835" -> "broadcast.1837";
	"multiply.1836" -> "multiply.1838";
	"broadcast.1837" -> "multiply.1838";
	"multiply.1834" -> "add.1839";
	"multiply.1838" -> "add.1839";
	"add.1839" -> "sqrt.1840";
	"p2.5" -> "broadcast.1841";
	"sqrt.1840" -> "divide.1842";
	"broadcast.1841" -> "divide.1842";
	"p1.3" -> "broadcast.1843";
	"divide.1842" -> "add.1844";
	"broadcast.1843" -> "add.1844";
	"add.1852" -> "divide.1866";
	"add.1844" -> "divide.1866";
	"p0.1" -> "convert.1865";
	"convert.1865" -> "broadcast.1867";
	"divide.1866" -> "multiply.1868";
	"broadcast.1867" -> "multiply.1868";
	"subtract.1864" -> "add.1869";
	"multiply.1868" -> "add.1869";
	"p24.593" -> "broadcast.1912";
	"add.730" -> "multiply.1913";
	"broadcast.1912" -> "multiply.1913";
	"p23.592" -> "broadcast.1914";
	"multiply.1913" -> "multiply.1916";
	"broadcast.1914" -> "multiply.1916";
	"add.730" -> "subtract.1917";
	"multiply.1916" -> "subtract.1917";
	"p22.578" -> "broadcast.1904";
	"add.714" -> "multiply.1905";
	"broadcast.1904" -> "multiply.1905";
	"divide.1554" -> "compare.1879";
	"constant.125" -> "compare.1879";
	"compare.1879" -> "select.1881";
	"divide.1554" -> "select.1881";
	"constant.126" -> "select.1881";
	"select.1881" -> "reshape.1883";
	"reshape.1883" -> "broadcast.1885";
	"add.1413" -> "multiply.1886";
	"broadcast.1885" -> "multiply.1886";
	"p21.572" -> "broadcast.1902";
	"multiply.1886" -> "multiply.1903";
	"broadcast.1902" -> "multiply.1903";
	"multiply.1905" -> "add.1906";
	"multiply.1903" -> "add.1906";
	"p20.554" -> "broadcast.1887";
	"add.696" -> "multiply.1888";
	"broadcast.1887" -> "multiply.1888";
	"multiply.1886" -> "multiply.1890";
	"multiply.1886" -> "multiply.1890";
	"p3.6" -> "convert.1889";
	"convert.1889" -> "broadcast.1891";
	"multiply.1890" -> "multiply.1892";
	"broadcast.1891" -> "multiply.1892";
	"multiply.1888" -> "add.1893";
	"multiply.1892" -> "add.1893";
	"add.1893" -> "sqrt.1894";
	"p2.5" -> "broadcast.1895";
	"sqrt.1894" -> "divide.1896";
	"broadcast.1895" -> "divide.1896";
	"p1.3" -> "broadcast.1897";
	"divide.1896" -> "add.1898";
	"broadcast.1897" -> "add.1898";
	"add.1906" -> "divide.1919";
	"add.1898" -> "divide.1919";
	"p0.1" -> "convert.1918";
	"convert.1918" -> "broadcast.1920";
	"divide.1919" -> "multiply.1921";
	"broadcast.1920" -> "multiply.1921";
	"subtract.1917" -> "add.1922";
	"multiply.1921" -> "add.1922";
	"p24.593" -> "broadcast.1965";
	"add.1094" -> "multiply.1966";
	"broadcast.1965" -> "multiply.1966";
	"constant.128" -> "broadcast.102";
	"multiply.1966" -> "multiply.1969";
	"broadcast.102" -> "multiply.1969";
	"add.1094" -> "subtract.1970";
	"multiply.1969" -> "subtract.1970";
	"p22.578" -> "broadcast.1956";
	"add.1077" -> "multiply.1957";
	"broadcast.1956" -> "multiply.1957";
	"divide.1554" -> "compare.1932";
	"constant.130" -> "compare.1932";
	"compare.1932" -> "select.1934";
	"divide.1554" -> "select.1934";
	"constant.131" -> "select.1934";
	"select.1934" -> "reshape.1936";
	"reshape.1936" -> "broadcast.1937";
	"add.646" -> "multiply.1938";
	"broadcast.1937" -> "multiply.1938";
	"p21.572" -> "broadcast.1954";
	"multiply.1938" -> "multiply.1955";
	"broadcast.1954" -> "multiply.1955";
	"multiply.1957" -> "add.1958";
	"multiply.1955" -> "add.1958";
	"p20.554" -> "broadcast.1939";
	"add.1059" -> "multiply.1940";
	"broadcast.1939" -> "multiply.1940";
	"multiply.1938" -> "multiply.1942";
	"multiply.1938" -> "multiply.1942";
	"p3.6" -> "convert.1941";
	"convert.1941" -> "broadcast.1943";
	"multiply.1942" -> "multiply.1944";
	"broadcast.1943" -> "multiply.1944";
	"multiply.1940" -> "add.1945";
	"multiply.1944" -> "add.1945";
	"add.1945" -> "sqrt.1946";
	"p2.5" -> "broadcast.1947";
	"sqrt.1946" -> "divide.1948";
	"broadcast.1947" -> "divide.1948";
	"p1.3" -> "broadcast.1949";
	"divide.1948" -> "add.1950";
	"broadcast.1949" -> "add.1950";
	"add.1958" -> "divide.1972";
	"add.1950" -> "divide.1972";
	"p0.1" -> "convert.1971";
	"convert.1971" -> "broadcast.1973";
	"divide.1972" -> "multiply.1974";
	"broadcast.1973" -> "multiply.1974";
	"subtract.1970" -> "add.1975";
	"multiply.1974" -> "add.1975";
	"p24.593" -> "broadcast.2018";
	"add.604" -> "multiply.2019";
	"broadcast.2018" -> "multiply.2019";
	"p23.592" -> "broadcast.2020";
	"multiply.2019" -> "multiply.2022";
	"broadcast.2020" -> "multiply.2022";
	"add.604" -> "subtract.2023";
	"multiply.2022" -> "subtract.2023";
	"p22.578" -> "broadcast.2010";
	"add.586" -> "multiply.2011";
	"broadcast.2010" -> "multiply.2011";
	"divide.1554" -> "compare.1985";
	"constant.133" -> "compare.1985";
	"compare.1985" -> "select.1987";
	"divide.1554" -> "select.1987";
	"constant.134" -> "select.1987";
	"select.1987" -> "reshape.1989";
	"reshape.1989" -> "broadcast.181";
	"add.1380" -> "multiply.1992";
	"broadcast.181" -> "multiply.1992";
	"p21.572" -> "broadcast.2008";
	"multiply.1992" -> "multiply.2009";
	"broadcast.2008" -> "multiply.2009";
	"multiply.2011" -> "add.2012";
	"multiply.2009" -> "add.2012";
	"p20.554" -> "broadcast.1993";
	"add.566" -> "multiply.1994";
	"broadcast.1993" -> "multiply.1994";
	"multiply.1992" -> "multiply.1996";
	"multiply.1992" -> "multiply.1996";
	"p3.6" -> "convert.1995";
	"convert.1995" -> "broadcast.1997";
	"multiply.1996" -> "multiply.1998";
	"broadcast.1997" -> "multiply.1998";
	"multiply.1994" -> "add.1999";
	"multiply.1998" -> "add.1999";
	"add.1999" -> "sqrt.2000";
	"p2.5" -> "broadcast.2001";
	"sqrt.2000" -> "divide.2002";
	"broadcast.2001" -> "divide.2002";
	"p1.3" -> "broadcast.2003";
	"divide.2002" -> "add.2004";
	"broadcast.2003" -> "add.2004";
	"add.2012" -> "divide.2025";
	"add.2004" -> "divide.2025";
	"p0.1" -> "convert.2024";
	"convert.2024" -> "broadcast.2026";
	"divide.2025" -> "multiply.2027";
	"broadcast.2026" -> "multiply.2027";
	"subtract.2023" -> "add.2028";
	"multiply.2027" -> "add.2028";
	"p24.593" -> "reshape.365";
	"p27.2094" -> "multiply.2096";
	"reshape.365" -> "multiply.2096";
	"multiply.2096" -> "multiply.2099";
	"constant.135" -> "multiply.2099";
	"p27.2094" -> "subtract.2100";
	"multiply.2099" -> "subtract.2100";
	"constant.151" -> "multiply.66";
	"p22.578" -> "multiply.66";
	"multiply.66" -> "reshape.514";
	"p21.572" -> "reshape.370";
	"multiply.512" -> "multiply.2069";
	"reshape.370" -> "multiply.2069";
	"reshape.514" -> "add.2075";
	"multiply.2069" -> "add.2075";
	"constant.152" -> "multiply.65";
	"p20.554" -> "multiply.65";
	"multiply.65" -> "reshape.511";
	"multiply.512" -> "multiply.2048";
	"multiply.512" -> "multiply.2048";
	"p3.6" -> "convert.2047";
	"convert.2047" -> "reshape.373";
	"multiply.2048" -> "multiply.2050";
	"reshape.373" -> "multiply.2050";
	"reshape.511" -> "add.2051";
	"multiply.2050" -> "add.2051";
	"add.2051" -> "sqrt.2085";
	"p19.538" -> "reshape.374";
	"sqrt.2085" -> "divide.2087";
	"reshape.374" -> "divide.2087";
	"p1.3" -> "reshape.375";
	"divide.2087" -> "add.2089";
	"reshape.375" -> "add.2089";
	"add.2075" -> "divide.2102";
	"add.2089" -> "divide.2102";
	"p18.535" -> "convert.2101";
	"convert.2101" -> "reshape.376";
	"divide.2102" -> "multiply.2104";
	"reshape.376" -> "multiply.2104";
	"subtract.2100" -> "add.2105";
	"multiply.2104" -> "add.2105";
	"p24.593" -> "reshape.377";
	"add.2105" -> "multiply.2107";
	"reshape.377" -> "multiply.2107";
	"multiply.2107" -> "multiply.2110";
	"constant.141" -> "multiply.2110";
	"add.2105" -> "subtract.2111";
	"multiply.2110" -> "subtract.2111";
	"p22.578" -> "reshape.380";
	"add.2075" -> "multiply.2077";
	"reshape.380" -> "multiply.2077";
	"divide.1554" -> "compare.2038";
	"constant.144" -> "compare.2038";
	"compare.2038" -> "select.2040";
	"divide.1554" -> "select.2040";
	"constant.145" -> "select.2040";
	"add.513" -> "multiply.2041";
	"select.2040" -> "multiply.2041";
	"p21.572" -> "reshape.385";
	"multiply.2041" -> "multiply.2066";
	"reshape.385" -> "multiply.2066";
	"multiply.2077" -> "add.2078";
	"multiply.2066" -> "add.2078";
	"p20.554" -> "reshape.386";
	"add.2051" -> "multiply.2053";
	"reshape.386" -> "multiply.2053";
	"multiply.2041" -> "multiply.2055";
	"multiply.2041" -> "multiply.2055";
	"p3.6" -> "convert.2054";
	"convert.2054" -> "reshape.387";
	"multiply.2055" -> "multiply.2057";
	"reshape.387" -> "multiply.2057";
	"multiply.2053" -> "add.2058";
	"multiply.2057" -> "add.2058";
	"add.2058" -> "sqrt.2059";
	"p2.5" -> "reshape.388";
	"sqrt.2059" -> "divide.2061";
	"reshape.388" -> "divide.2061";
	"p1.3" -> "reshape.389";
	"divide.2061" -> "add.2063";
	"reshape.389" -> "add.2063";
	"add.2078" -> "divide.2113";
	"add.2063" -> "divide.2113";
	"p0.1" -> "convert.2112";
	"convert.2112" -> "reshape.390";
	"divide.2113" -> "multiply.2115";
	"reshape.390" -> "multiply.2115";
	"subtract.2111" -> "add.2116";
	"multiply.2115" -> "add.2116";
	"add.1604" -> "tuple.2117";
	"add.1657" -> "tuple.2117";
	"add.1710" -> "tuple.2117";
	"add.1763" -> "tuple.2117";
	"add.1816" -> "tuple.2117";
	"add.1869" -> "tuple.2117";
	"add.1922" -> "tuple.2117";
	"add.1975" -> "tuple.2117";
	"add.2028" -> "tuple.2117";
	"add.2116" -> "tuple.2117";
	"multiply.2041" -> "tuple.2117";
	"multiply.1992" -> "tuple.2117";
	"multiply.1938" -> "tuple.2117";
	"multiply.1886" -> "tuple.2117";
	"multiply.1832" -> "tuple.2117";
	"multiply.1780" -> "tuple.2117";
	"multiply.1726" -> "tuple.2117";
	"multiply.1674" -> "tuple.2117";
	"multiply.1620" -> "tuple.2117";
	"multiply.1568" -> "tuple.2117";
	"add.1588" -> "tuple.2117";
	"add.1575" -> "tuple.2117";
	"add.1694" -> "tuple.2117";
	"add.1681" -> "tuple.2117";
	"add.1800" -> "tuple.2117";
	"add.1787" -> "tuple.2117";
	"add.1906" -> "tuple.2117";
	"add.1893" -> "tuple.2117";
	"add.2012" -> "tuple.2117";
	"add.1999" -> "tuple.2117";
	"add.1640" -> "tuple.2117";
	"add.1627" -> "tuple.2117";
	"add.1746" -> "tuple.2117";
	"add.1733" -> "tuple.2117";
	"add.1852" -> "tuple.2117";
	"add.1839" -> "tuple.2117";
	"add.1958" -> "tuple.2117";
	"add.1945" -> "tuple.2117";
	"add.2078" -> "tuple.2117";
	"add.2058" -> "tuple.2117";
	"p25.1344" -> "tuple.2117";
	"power.1549" -> "tuple.2117";
}