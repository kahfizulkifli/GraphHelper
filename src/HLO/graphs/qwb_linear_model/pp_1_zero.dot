digraph HloModule {
	"p36.676" [label="p36.676 \n bf16[4,4]"];
	"p35.675" [label="p35.675 \n bf16[] parameter(35), frontend_attributes="];
	"broadcast.677" [label="broadcast.677 \n bf16[4,4]"];
	"multiply.678" [label="multiply.678 \n bf16[4,4]"];
	"p34.674" [label="p34.674 \n bf16[] parameter(34), frontend_attributes="];
	"broadcast.679" [label="broadcast.679 \n bf16[4,4]"];
	"multiply.681" [label="multiply.681 \n bf16[4,4]"];
	"subtract.682" [label="subtract.682 \n bf16[4,4]"];
	"p33.665" [label="p33.665 \n bf16[4,4]"];
	"p32.664" [label="p32.664 \n bf16[] parameter(32), frontend_attributes="];
	"broadcast.666" [label="broadcast.666 \n bf16[4,4]"];
	"multiply.667" [label="multiply.667 \n bf16[4,4]"];
	"p27.576" [label="p27.576 \n bf16[4,4]"];
	"p7.25" [label="p7.25 \n bf16[] parameter(7), frontend_attributes="];
	"p6.24" [label="p6.24 \n bf16[] parameter(6), frontend_attributes="];
	"divide.1" [label="divide.1 \n bf16[] divide(bf16[] %p7.25, bf16[] %p6.24), metadata="];
	"broadcast.61" [label="broadcast.61 \n bf16[1,4]"];
	"p9.84" [label="p9.84 \n bf16[1,4]"];
	"multiply.23" [label="multiply.23 \n bf16[1,4]"];
	"reshape.232" [label="reshape.232 \n bf16[4]"];
	"broadcast.9" [label="broadcast.9 \n bf16[4,4]"];
	"p11.144" [label="p11.144 \n bf16[4,4]"];
	"dot.154" [label="dot.154 \n bf16[4,4]"];
	"p13.204" [label="p13.204 \n bf16[4,4]"];
	"dot.214" [label="dot.214 \n bf16[4,4]"];
	"p15.264" [label="p15.264 \n bf16[4,4]"];
	"dot.274" [label="dot.274 \n bf16[4,4]"];
	"p22.368" [label="p22.368 \n bf16[4,4]"];
	"transpose.565" [label="transpose.565 \n bf16[4,4]"];
	"dot.1" [label="dot.1 \n bf16[4,4]"];
	"add.577" [label="add.577 \n bf16[4,4]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.578" [label="convert.578 \n bf16[] convert(f32[] %p0.1), metadata="];
	"constant.1" [label="constant.1 \n bf16[1]"];
	"p28.601" [label="p28.601 \n bf16[1]"];
	"multiply.590" [label="multiply.590 \n bf16[4,4]"];
	"constant.591" [label="constant.591 \n bf16[] constant(0), metadata="];
	"reduce.597" [label="reduce.597 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.598" [label="sqrt.598 \n bf16[] sqrt(bf16[] %reduce.597), metadata="];
	"multiply.600" [label="multiply.600 \n bf16[] multiply(bf16[] %sqrt.598, bf16[] %sqrt.598), metadata="];
	"reshape.13" [label="reshape.13 \n bf16[1]"];
	"add.603" [label="add.603 \n bf16[1]"];
	"p26.533" [label="p26.533 \n bf16[4,4]"];
	"p21.359" [label="p21.359 \n bf16[4,4]"];
	"transpose.367" [label="transpose.367 \n bf16[4,4]"];
	"dot.369" [label="dot.369 \n bf16[4,4]"];
	"p20.351" [label="p20.351 \n bf16[4]"];
	"broadcast.373" [label="broadcast.373 \n bf16[4,4]"];
	"add.374" [label="add.374 \n bf16[4,4]"];
	"transpose.522" [label="transpose.522 \n bf16[4,4]"];
	"dot.2" [label="dot.2 \n bf16[4,4]"];
	"add.534" [label="add.534 \n bf16[4,4]"];
	"convert.535" [label="convert.535 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.547" [label="multiply.547 \n bf16[4,4]"];
	"constant.548" [label="constant.548 \n bf16[] constant(0), metadata="];
	"reduce.554" [label="reduce.554 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.555" [label="sqrt.555 \n bf16[] sqrt(bf16[] %reduce.554), metadata="];
	"multiply.557" [label="multiply.557 \n bf16[] multiply(bf16[] %sqrt.555, bf16[] %sqrt.555), metadata="];
	"reshape.19" [label="reshape.19 \n bf16[1]"];
	"add.605" [label="add.605 \n bf16[1]"];
	"p25.490" [label="p25.490 \n bf16[4,4]"];
	"transpose.350" [label="transpose.350 \n bf16[4,4]"];
	"dot.375" [label="dot.375 \n bf16[4,4]"];
	"p19.342" [label="p19.342 \n bf16[4]"];
	"broadcast.379" [label="broadcast.379 \n bf16[4,4]"];
	"add.380" [label="add.380 \n bf16[4,4]"];
	"transpose.479" [label="transpose.479 \n bf16[4,4]"];
	"dot.3" [label="dot.3 \n bf16[4,4]"];
	"add.491" [label="add.491 \n bf16[4,4]"];
	"convert.492" [label="convert.492 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.504" [label="multiply.504 \n bf16[4,4]"];
	"constant.505" [label="constant.505 \n bf16[] constant(0), metadata="];
	"reduce.511" [label="reduce.511 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.512" [label="sqrt.512 \n bf16[] sqrt(bf16[] %reduce.511), metadata="];
	"multiply.514" [label="multiply.514 \n bf16[] multiply(bf16[] %sqrt.512, bf16[] %sqrt.512), metadata="];
	"reshape.25" [label="reshape.25 \n bf16[1]"];
	"add.607" [label="add.607 \n bf16[1]"];
	"p24.447" [label="p24.447 \n bf16[4,4]"];
	"transpose.341" [label="transpose.341 \n bf16[4,4]"];
	"dot.381" [label="dot.381 \n bf16[4,4]"];
	"p18.333" [label="p18.333 \n bf16[4]"];
	"broadcast.385" [label="broadcast.385 \n bf16[4,4]"];
	"add.386" [label="add.386 \n bf16[4,4]"];
	"transpose.436" [label="transpose.436 \n bf16[4,4]"];
	"dot.4" [label="dot.4 \n bf16[4,4]"];
	"add.448" [label="add.448 \n bf16[4,4]"];
	"convert.449" [label="convert.449 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.461" [label="multiply.461 \n bf16[4,4]"];
	"constant.462" [label="constant.462 \n bf16[] constant(0), metadata="];
	"reduce.468" [label="reduce.468 \n bf16[] reduce(bf16[4,4]"];
	"sqrt.469" [label="sqrt.469 \n bf16[] sqrt(bf16[] %reduce.468), metadata="];
	"multiply.471" [label="multiply.471 \n bf16[] multiply(bf16[] %sqrt.469, bf16[] %sqrt.469), metadata="];
	"reshape.37" [label="reshape.37 \n bf16[1]"];
	"add.609" [label="add.609 \n bf16[1]"];
	"p23.404" [label="p23.404 \n bf16[1,4]"];
	"transpose.332" [label="transpose.332 \n bf16[4,4]"];
	"dot.387" [label="dot.387 \n bf16[4,4]"];
	"p17.324" [label="p17.324 \n bf16[4]"];
	"broadcast.391" [label="broadcast.391 \n bf16[4,4]"];
	"add.392" [label="add.392 \n bf16[4,4]"];
	"broadcast.63" [label="broadcast.63 \n bf16[4,4]"];
	"multiply.24" [label="multiply.24 \n bf16[4,4]"];
	"convert.2" [label="convert.2 \n f32[4,4]"];
	"convert.1" [label="convert.1 \n bf16[4]"];
	"reshape.44" [label="reshape.44 \n bf16[1,4]"];
	"add.405" [label="add.405 \n bf16[1,4]"];
	"convert.406" [label="convert.406 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.418" [label="multiply.418 \n bf16[1,4]"];
	"constant.419" [label="constant.419 \n bf16[] constant(0), metadata="];
	"reduce.425" [label="reduce.425 \n bf16[] reduce(bf16[1,4]"];
	"sqrt.426" [label="sqrt.426 \n bf16[] sqrt(bf16[] %reduce.425), metadata="];
	"multiply.428" [label="multiply.428 \n bf16[] multiply(bf16[] %sqrt.426, bf16[] %sqrt.426), metadata="];
	"reshape.48" [label="reshape.48 \n bf16[1]"];
	"add.611" [label="add.611 \n bf16[1]"];
	"p16.292" [label="p16.292 \n bf16[4]"];
	"constant.275" [label="constant.275 \n bf16[] constant(0), metadata="];
	"reduce.281" [label="reduce.281 \n bf16[4]"];
	"add.293" [label="add.293 \n bf16[4]"];
	"convert.294" [label="convert.294 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.306" [label="multiply.306 \n bf16[4]"];
	"constant.307" [label="constant.307 \n bf16[] constant(0), metadata="];
	"reduce.313" [label="reduce.313 \n bf16[] reduce(bf16[4]"];
	"sqrt.314" [label="sqrt.314 \n bf16[] sqrt(bf16[] %reduce.313), metadata="];
	"multiply.316" [label="multiply.316 \n bf16[] multiply(bf16[] %sqrt.314, bf16[] %sqrt.314), metadata="];
	"reshape.52" [label="reshape.52 \n bf16[1]"];
	"add.613" [label="add.613 \n bf16[1]"];
	"p14.232" [label="p14.232 \n bf16[4]"];
	"constant.215" [label="constant.215 \n bf16[] constant(0), metadata="];
	"reduce.221" [label="reduce.221 \n bf16[4]"];
	"add.233" [label="add.233 \n bf16[4]"];
	"convert.234" [label="convert.234 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.246" [label="multiply.246 \n bf16[4]"];
	"constant.247" [label="constant.247 \n bf16[] constant(0), metadata="];
	"reduce.253" [label="reduce.253 \n bf16[] reduce(bf16[4]"];
	"sqrt.254" [label="sqrt.254 \n bf16[] sqrt(bf16[] %reduce.253), metadata="];
	"multiply.256" [label="multiply.256 \n bf16[] multiply(bf16[] %sqrt.254, bf16[] %sqrt.254), metadata="];
	"reshape.56" [label="reshape.56 \n bf16[1]"];
	"add.615" [label="add.615 \n bf16[1]"];
	"p12.172" [label="p12.172 \n bf16[4]"];
	"constant.155" [label="constant.155 \n bf16[] constant(0), metadata="];
	"reduce.161" [label="reduce.161 \n bf16[4]"];
	"add.173" [label="add.173 \n bf16[4]"];
	"convert.174" [label="convert.174 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.186" [label="multiply.186 \n bf16[4]"];
	"constant.187" [label="constant.187 \n bf16[] constant(0), metadata="];
	"reduce.193" [label="reduce.193 \n bf16[] reduce(bf16[4]"];
	"sqrt.194" [label="sqrt.194 \n bf16[] sqrt(bf16[] %reduce.193), metadata="];
	"multiply.196" [label="multiply.196 \n bf16[] multiply(bf16[] %sqrt.194, bf16[] %sqrt.194), metadata="];
	"reshape.60" [label="reshape.60 \n bf16[1]"];
	"add.617" [label="add.617 \n bf16[1]"];
	"p10.112" [label="p10.112 \n bf16[4]"];
	"constant.95" [label="constant.95 \n bf16[] constant(0), metadata="];
	"reduce.101" [label="reduce.101 \n bf16[4]"];
	"add.113" [label="add.113 \n bf16[4]"];
	"convert.114" [label="convert.114 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.126" [label="multiply.126 \n bf16[4]"];
	"constant.127" [label="constant.127 \n bf16[] constant(0), metadata="];
	"reduce.133" [label="reduce.133 \n bf16[] reduce(bf16[4]"];
	"sqrt.134" [label="sqrt.134 \n bf16[] sqrt(bf16[] %reduce.133), metadata="];
	"multiply.136" [label="multiply.136 \n bf16[] multiply(bf16[] %sqrt.134, bf16[] %sqrt.134), metadata="];
	"reshape.64" [label="reshape.64 \n bf16[1]"];
	"add.619" [label="add.619 \n bf16[1]"];
	"p8.52" [label="p8.52 \n bf16[1]"];
	"broadcast.1" [label="broadcast.1 \n bf16[4,1]"];
	"constant.35" [label="constant.35 \n bf16[] constant(0), metadata="];
	"reduce.41" [label="reduce.41 \n bf16[1]"];
	"add.53" [label="add.53 \n bf16[1]"];
	"convert.54" [label="convert.54 \n bf16[] convert(f32[] %p0.1), metadata="];
	"multiply.25" [label="multiply.25 \n bf16[1]"];
	"add.621" [label="add.621 \n bf16[1]"];
	"constant.5" [label="constant.5 \n bf16[1]"];
	"power.624" [label="power.624 \n bf16[1]"];
	"p5.13" [label="p5.13 \n bf16[] parameter(5), frontend_attributes="];
	"reshape.71" [label="reshape.71 \n bf16[1]"];
	"add.626" [label="add.626 \n bf16[1]"];
	"divide.629" [label="divide.629 \n bf16[1]"];
	"constant.9" [label="constant.9 \n bf16[1]"];
	"compare.636" [label="compare.636 \n pred[1]"];
	"constant.10" [label="constant.10 \n bf16[1]"];
	"select.638" [label="select.638 \n bf16[1]"];
	"reshape.640" [label="reshape.640 \n bf16[] reshape(bf16[1]"];
	"broadcast.642" [label="broadcast.642 \n bf16[4,4]"];
	"multiply.643" [label="multiply.643 \n bf16[4,4]"];
	"p31.658" [label="p31.658 \n bf16[] parameter(31), frontend_attributes="];
	"broadcast.662" [label="broadcast.662 \n bf16[4,4]"];
	"multiply.663" [label="multiply.663 \n bf16[4,4]"];
	"add.668" [label="add.668 \n bf16[4,4]"];
	"p30.645" [label="p30.645 \n bf16[4,4]"];
	"p29.644" [label="p29.644 \n bf16[] parameter(29), frontend_attributes="];
	"broadcast.646" [label="broadcast.646 \n bf16[4,4]"];
	"multiply.647" [label="multiply.647 \n bf16[4,4]"];
	"multiply.649" [label="multiply.649 \n bf16[4,4]"];
	"p4.7" [label="p4.7 \n f32[] parameter(4), frontend_attributes="];
	"convert.648" [label="convert.648 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.650" [label="broadcast.650 \n bf16[4,4]"];
	"multiply.651" [label="multiply.651 \n bf16[4,4]"];
	"add.652" [label="add.652 \n bf16[4,4]"];
	"sqrt.653" [label="sqrt.653 \n bf16[4,4]"];
	"p3.6" [label="p3.6 \n bf16[] parameter(3), frontend_attributes="];
	"broadcast.654" [label="broadcast.654 \n bf16[4,4]"];
	"divide.655" [label="divide.655 \n bf16[4,4]"];
	"p2.4" [label="p2.4 \n bf16[] parameter(2), frontend_attributes="];
	"broadcast.656" [label="broadcast.656 \n bf16[4,4]"];
	"add.657" [label="add.657 \n bf16[4,4]"];
	"divide.684" [label="divide.684 \n bf16[4,4]"];
	"p1.2" [label="p1.2 \n f32[] parameter(1), frontend_attributes="];
	"convert.683" [label="convert.683 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.685" [label="broadcast.685 \n bf16[4,4]"];
	"multiply.686" [label="multiply.686 \n bf16[4,4]"];
	"add.687" [label="add.687 \n bf16[4,4]"];
	"convert.688" [label="convert.688 \n bf16[] convert(f32[] %p0.1), metadata="];
	"p51.997" [label="p51.997 \n bf16[4]"];
	"broadcast.998" [label="broadcast.998 \n bf16[4]"];
	"multiply.999" [label="multiply.999 \n bf16[4]"];
	"broadcast.12" [label="broadcast.12 \n bf16[4]"];
	"multiply.1002" [label="multiply.1002 \n bf16[4]"];
	"subtract.1003" [label="subtract.1003 \n bf16[4]"];
	"p50.987" [label="p50.987 \n bf16[4]"];
	"broadcast.988" [label="broadcast.988 \n bf16[4]"];
	"multiply.989" [label="multiply.989 \n bf16[4]"];
	"constant.17" [label="constant.17 \n bf16[1]"];
	"compare.962" [label="compare.962 \n pred[1]"];
	"constant.22" [label="constant.22 \n bf16[1]"];
	"select.964" [label="select.964 \n bf16[1]"];
	"reshape.966" [label="reshape.966 \n bf16[] reshape(bf16[1]"];
	"broadcast.967" [label="broadcast.967 \n bf16[4]"];
	"multiply.968" [label="multiply.968 \n bf16[4]"];
	"broadcast.985" [label="broadcast.985 \n bf16[4]"];
	"multiply.986" [label="multiply.986 \n bf16[4]"];
	"add.990" [label="add.990 \n bf16[4]"];
	"p49.969" [label="p49.969 \n bf16[4]"];
	"broadcast.970" [label="broadcast.970 \n bf16[4]"];
	"multiply.971" [label="multiply.971 \n bf16[4]"];
	"multiply.973" [label="multiply.973 \n bf16[4]"];
	"convert.972" [label="convert.972 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.974" [label="broadcast.974 \n bf16[4]"];
	"multiply.975" [label="multiply.975 \n bf16[4]"];
	"add.976" [label="add.976 \n bf16[4]"];
	"sqrt.977" [label="sqrt.977 \n bf16[4]"];
	"broadcast.978" [label="broadcast.978 \n bf16[4]"];
	"divide.979" [label="divide.979 \n bf16[4]"];
	"broadcast.980" [label="broadcast.980 \n bf16[4]"];
	"add.981" [label="add.981 \n bf16[4]"];
	"divide.1005" [label="divide.1005 \n bf16[4]"];
	"convert.1004" [label="convert.1004 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.1006" [label="broadcast.1006 \n bf16[4]"];
	"multiply.1007" [label="multiply.1007 \n bf16[4]"];
	"add.1008" [label="add.1008 \n bf16[4]"];
	"p48.933" [label="p48.933 \n bf16[1,4]"];
	"broadcast.934" [label="broadcast.934 \n bf16[1,4]"];
	"multiply.935" [label="multiply.935 \n bf16[1,4]"];
	"broadcast.936" [label="broadcast.936 \n bf16[1,4]"];
	"multiply.938" [label="multiply.938 \n bf16[1,4]"];
	"subtract.939" [label="subtract.939 \n bf16[1,4]"];
	"p47.924" [label="p47.924 \n bf16[1,4]"];
	"broadcast.925" [label="broadcast.925 \n bf16[1,4]"];
	"multiply.926" [label="multiply.926 \n bf16[1,4]"];
	"constant.24" [label="constant.24 \n bf16[1]"];
	"compare.898" [label="compare.898 \n pred[1]"];
	"constant.25" [label="constant.25 \n bf16[1]"];
	"select.900" [label="select.900 \n bf16[1]"];
	"reshape.902" [label="reshape.902 \n bf16[] reshape(bf16[1]"];
	"broadcast.48" [label="broadcast.48 \n bf16[1,4]"];
	"multiply.905" [label="multiply.905 \n bf16[1,4]"];
	"broadcast.922" [label="broadcast.922 \n bf16[1,4]"];
	"multiply.923" [label="multiply.923 \n bf16[1,4]"];
	"add.927" [label="add.927 \n bf16[1,4]"];
	"p46.906" [label="p46.906 \n bf16[1,4]"];
	"broadcast.907" [label="broadcast.907 \n bf16[1,4]"];
	"multiply.908" [label="multiply.908 \n bf16[1,4]"];
	"multiply.910" [label="multiply.910 \n bf16[1,4]"];
	"convert.909" [label="convert.909 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.911" [label="broadcast.911 \n bf16[1,4]"];
	"multiply.912" [label="multiply.912 \n bf16[1,4]"];
	"add.913" [label="add.913 \n bf16[1,4]"];
	"sqrt.914" [label="sqrt.914 \n bf16[1,4]"];
	"broadcast.915" [label="broadcast.915 \n bf16[1,4]"];
	"divide.916" [label="divide.916 \n bf16[1,4]"];
	"broadcast.917" [label="broadcast.917 \n bf16[1,4]"];
	"add.918" [label="add.918 \n bf16[1,4]"];
	"divide.941" [label="divide.941 \n bf16[1,4]"];
	"convert.940" [label="convert.940 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.942" [label="broadcast.942 \n bf16[1,4]"];
	"multiply.943" [label="multiply.943 \n bf16[1,4]"];
	"add.944" [label="add.944 \n bf16[1,4]"];
	"p45.869" [label="p45.869 \n bf16[4,4]"];
	"broadcast.870" [label="broadcast.870 \n bf16[4,4]"];
	"multiply.871" [label="multiply.871 \n bf16[4,4]"];
	"broadcast.872" [label="broadcast.872 \n bf16[4,4]"];
	"multiply.874" [label="multiply.874 \n bf16[4,4]"];
	"subtract.875" [label="subtract.875 \n bf16[4,4]"];
	"p44.860" [label="p44.860 \n bf16[4,4]"];
	"broadcast.861" [label="broadcast.861 \n bf16[4,4]"];
	"multiply.862" [label="multiply.862 \n bf16[4,4]"];
	"constant.28" [label="constant.28 \n bf16[1]"];
	"compare.834" [label="compare.834 \n pred[1]"];
	"constant.29" [label="constant.29 \n bf16[1]"];
	"select.836" [label="select.836 \n bf16[1]"];
	"reshape.838" [label="reshape.838 \n bf16[] reshape(bf16[1]"];
	"broadcast.840" [label="broadcast.840 \n bf16[4,4]"];
	"multiply.841" [label="multiply.841 \n bf16[4,4]"];
	"broadcast.858" [label="broadcast.858 \n bf16[4,4]"];
	"multiply.859" [label="multiply.859 \n bf16[4,4]"];
	"add.863" [label="add.863 \n bf16[4,4]"];
	"p43.842" [label="p43.842 \n bf16[4,4]"];
	"broadcast.843" [label="broadcast.843 \n bf16[4,4]"];
	"multiply.844" [label="multiply.844 \n bf16[4,4]"];
	"multiply.846" [label="multiply.846 \n bf16[4,4]"];
	"convert.845" [label="convert.845 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.847" [label="broadcast.847 \n bf16[4,4]"];
	"multiply.848" [label="multiply.848 \n bf16[4,4]"];
	"add.849" [label="add.849 \n bf16[4,4]"];
	"sqrt.850" [label="sqrt.850 \n bf16[4,4]"];
	"broadcast.851" [label="broadcast.851 \n bf16[4,4]"];
	"divide.852" [label="divide.852 \n bf16[4,4]"];
	"broadcast.853" [label="broadcast.853 \n bf16[4,4]"];
	"add.854" [label="add.854 \n bf16[4,4]"];
	"divide.877" [label="divide.877 \n bf16[4,4]"];
	"convert.876" [label="convert.876 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.878" [label="broadcast.878 \n bf16[4,4]"];
	"multiply.879" [label="multiply.879 \n bf16[4,4]"];
	"add.880" [label="add.880 \n bf16[4,4]"];
	"p42.805" [label="p42.805 \n bf16[4,4]"];
	"broadcast.806" [label="broadcast.806 \n bf16[4,4]"];
	"multiply.807" [label="multiply.807 \n bf16[4,4]"];
	"broadcast.808" [label="broadcast.808 \n bf16[4,4]"];
	"multiply.810" [label="multiply.810 \n bf16[4,4]"];
	"subtract.811" [label="subtract.811 \n bf16[4,4]"];
	"p41.796" [label="p41.796 \n bf16[4,4]"];
	"broadcast.797" [label="broadcast.797 \n bf16[4,4]"];
	"multiply.798" [label="multiply.798 \n bf16[4,4]"];
	"constant.31" [label="constant.31 \n bf16[1]"];
	"compare.770" [label="compare.770 \n pred[1]"];
	"constant.32" [label="constant.32 \n bf16[1]"];
	"select.772" [label="select.772 \n bf16[1]"];
	"reshape.774" [label="reshape.774 \n bf16[] reshape(bf16[1]"];
	"broadcast.776" [label="broadcast.776 \n bf16[4,4]"];
	"multiply.777" [label="multiply.777 \n bf16[4,4]"];
	"broadcast.794" [label="broadcast.794 \n bf16[4,4]"];
	"multiply.795" [label="multiply.795 \n bf16[4,4]"];
	"add.799" [label="add.799 \n bf16[4,4]"];
	"p40.778" [label="p40.778 \n bf16[4,4]"];
	"broadcast.779" [label="broadcast.779 \n bf16[4,4]"];
	"multiply.780" [label="multiply.780 \n bf16[4,4]"];
	"multiply.782" [label="multiply.782 \n bf16[4,4]"];
	"convert.781" [label="convert.781 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.783" [label="broadcast.783 \n bf16[4,4]"];
	"multiply.784" [label="multiply.784 \n bf16[4,4]"];
	"add.785" [label="add.785 \n bf16[4,4]"];
	"sqrt.786" [label="sqrt.786 \n bf16[4,4]"];
	"broadcast.787" [label="broadcast.787 \n bf16[4,4]"];
	"divide.788" [label="divide.788 \n bf16[4,4]"];
	"broadcast.789" [label="broadcast.789 \n bf16[4,4]"];
	"add.790" [label="add.790 \n bf16[4,4]"];
	"divide.813" [label="divide.813 \n bf16[4,4]"];
	"convert.812" [label="convert.812 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.814" [label="broadcast.814 \n bf16[4,4]"];
	"multiply.815" [label="multiply.815 \n bf16[4,4]"];
	"add.816" [label="add.816 \n bf16[4,4]"];
	"p39.741" [label="p39.741 \n bf16[4,4]"];
	"broadcast.742" [label="broadcast.742 \n bf16[4,4]"];
	"multiply.743" [label="multiply.743 \n bf16[4,4]"];
	"broadcast.744" [label="broadcast.744 \n bf16[4,4]"];
	"multiply.746" [label="multiply.746 \n bf16[4,4]"];
	"subtract.747" [label="subtract.747 \n bf16[4,4]"];
	"p38.732" [label="p38.732 \n bf16[4,4]"];
	"broadcast.733" [label="broadcast.733 \n bf16[4,4]"];
	"multiply.734" [label="multiply.734 \n bf16[4,4]"];
	"constant.34" [label="constant.34 \n bf16[1]"];
	"compare.706" [label="compare.706 \n pred[1]"];
	"constant.37" [label="constant.37 \n bf16[1]"];
	"select.708" [label="select.708 \n bf16[1]"];
	"reshape.710" [label="reshape.710 \n bf16[] reshape(bf16[1]"];
	"broadcast.712" [label="broadcast.712 \n bf16[4,4]"];
	"multiply.713" [label="multiply.713 \n bf16[4,4]"];
	"broadcast.730" [label="broadcast.730 \n bf16[4,4]"];
	"multiply.731" [label="multiply.731 \n bf16[4,4]"];
	"add.735" [label="add.735 \n bf16[4,4]"];
	"p37.714" [label="p37.714 \n bf16[4,4]"];
	"broadcast.715" [label="broadcast.715 \n bf16[4,4]"];
	"multiply.716" [label="multiply.716 \n bf16[4,4]"];
	"multiply.718" [label="multiply.718 \n bf16[4,4]"];
	"convert.717" [label="convert.717 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.719" [label="broadcast.719 \n bf16[4,4]"];
	"multiply.720" [label="multiply.720 \n bf16[4,4]"];
	"add.721" [label="add.721 \n bf16[4,4]"];
	"sqrt.722" [label="sqrt.722 \n bf16[4,4]"];
	"broadcast.723" [label="broadcast.723 \n bf16[4,4]"];
	"divide.724" [label="divide.724 \n bf16[4,4]"];
	"broadcast.725" [label="broadcast.725 \n bf16[4,4]"];
	"add.726" [label="add.726 \n bf16[4,4]"];
	"divide.749" [label="divide.749 \n bf16[4,4]"];
	"convert.748" [label="convert.748 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.750" [label="broadcast.750 \n bf16[4,4]"];
	"multiply.751" [label="multiply.751 \n bf16[4,4]"];
	"add.752" [label="add.752 \n bf16[4,4]"];
	"p54.1063" [label="p54.1063 \n bf16[4]"];
	"broadcast.1064" [label="broadcast.1064 \n bf16[4]"];
	"multiply.1065" [label="multiply.1065 \n bf16[4]"];
	"broadcast.19" [label="broadcast.19 \n bf16[4]"];
	"multiply.1068" [label="multiply.1068 \n bf16[4]"];
	"subtract.1069" [label="subtract.1069 \n bf16[4]"];
	"p53.1053" [label="p53.1053 \n bf16[4]"];
	"broadcast.1054" [label="broadcast.1054 \n bf16[4]"];
	"multiply.1055" [label="multiply.1055 \n bf16[4]"];
	"constant.41" [label="constant.41 \n bf16[1]"];
	"compare.1028" [label="compare.1028 \n pred[1]"];
	"constant.42" [label="constant.42 \n bf16[1]"];
	"select.1030" [label="select.1030 \n bf16[1]"];
	"reshape.1032" [label="reshape.1032 \n bf16[] reshape(bf16[1]"];
	"broadcast.1033" [label="broadcast.1033 \n bf16[4]"];
	"multiply.1034" [label="multiply.1034 \n bf16[4]"];
	"broadcast.1051" [label="broadcast.1051 \n bf16[4]"];
	"multiply.1052" [label="multiply.1052 \n bf16[4]"];
	"add.1056" [label="add.1056 \n bf16[4]"];
	"p52.1035" [label="p52.1035 \n bf16[4]"];
	"broadcast.1036" [label="broadcast.1036 \n bf16[4]"];
	"multiply.1037" [label="multiply.1037 \n bf16[4]"];
	"multiply.1039" [label="multiply.1039 \n bf16[4]"];
	"convert.1038" [label="convert.1038 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.1040" [label="broadcast.1040 \n bf16[4]"];
	"multiply.1041" [label="multiply.1041 \n bf16[4]"];
	"add.1042" [label="add.1042 \n bf16[4]"];
	"sqrt.1043" [label="sqrt.1043 \n bf16[4]"];
	"broadcast.1044" [label="broadcast.1044 \n bf16[4]"];
	"divide.1045" [label="divide.1045 \n bf16[4]"];
	"broadcast.1046" [label="broadcast.1046 \n bf16[4]"];
	"add.1047" [label="add.1047 \n bf16[4]"];
	"divide.1071" [label="divide.1071 \n bf16[4]"];
	"convert.1070" [label="convert.1070 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.1072" [label="broadcast.1072 \n bf16[4]"];
	"multiply.1073" [label="multiply.1073 \n bf16[4]"];
	"add.1074" [label="add.1074 \n bf16[4]"];
	"p57.1129" [label="p57.1129 \n bf16[4]"];
	"broadcast.1130" [label="broadcast.1130 \n bf16[4]"];
	"multiply.1131" [label="multiply.1131 \n bf16[4]"];
	"broadcast.20" [label="broadcast.20 \n bf16[4]"];
	"multiply.1134" [label="multiply.1134 \n bf16[4]"];
	"subtract.1135" [label="subtract.1135 \n bf16[4]"];
	"p56.1119" [label="p56.1119 \n bf16[4]"];
	"broadcast.1120" [label="broadcast.1120 \n bf16[4]"];
	"multiply.1121" [label="multiply.1121 \n bf16[4]"];
	"constant.46" [label="constant.46 \n bf16[1]"];
	"compare.1094" [label="compare.1094 \n pred[1]"];
	"constant.47" [label="constant.47 \n bf16[1]"];
	"select.1096" [label="select.1096 \n bf16[1]"];
	"reshape.1098" [label="reshape.1098 \n bf16[] reshape(bf16[1]"];
	"broadcast.1099" [label="broadcast.1099 \n bf16[4]"];
	"multiply.1100" [label="multiply.1100 \n bf16[4]"];
	"broadcast.1117" [label="broadcast.1117 \n bf16[4]"];
	"multiply.1118" [label="multiply.1118 \n bf16[4]"];
	"add.1122" [label="add.1122 \n bf16[4]"];
	"p55.1101" [label="p55.1101 \n bf16[4]"];
	"broadcast.1102" [label="broadcast.1102 \n bf16[4]"];
	"multiply.1103" [label="multiply.1103 \n bf16[4]"];
	"multiply.1105" [label="multiply.1105 \n bf16[4]"];
	"convert.1104" [label="convert.1104 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.1106" [label="broadcast.1106 \n bf16[4]"];
	"multiply.1107" [label="multiply.1107 \n bf16[4]"];
	"add.1108" [label="add.1108 \n bf16[4]"];
	"sqrt.1109" [label="sqrt.1109 \n bf16[4]"];
	"broadcast.1110" [label="broadcast.1110 \n bf16[4]"];
	"divide.1111" [label="divide.1111 \n bf16[4]"];
	"broadcast.1112" [label="broadcast.1112 \n bf16[4]"];
	"add.1113" [label="add.1113 \n bf16[4]"];
	"divide.1137" [label="divide.1137 \n bf16[4]"];
	"convert.1136" [label="convert.1136 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.1138" [label="broadcast.1138 \n bf16[4]"];
	"multiply.1139" [label="multiply.1139 \n bf16[4]"];
	"add.1140" [label="add.1140 \n bf16[4]"];
	"p60.1195" [label="p60.1195 \n bf16[4]"];
	"broadcast.1196" [label="broadcast.1196 \n bf16[4]"];
	"multiply.1197" [label="multiply.1197 \n bf16[4]"];
	"broadcast.21" [label="broadcast.21 \n bf16[4]"];
	"multiply.1200" [label="multiply.1200 \n bf16[4]"];
	"subtract.1201" [label="subtract.1201 \n bf16[4]"];
	"p59.1185" [label="p59.1185 \n bf16[4]"];
	"broadcast.1186" [label="broadcast.1186 \n bf16[4]"];
	"multiply.1187" [label="multiply.1187 \n bf16[4]"];
	"constant.51" [label="constant.51 \n bf16[1]"];
	"compare.1160" [label="compare.1160 \n pred[1]"];
	"constant.52" [label="constant.52 \n bf16[1]"];
	"select.1162" [label="select.1162 \n bf16[1]"];
	"reshape.1164" [label="reshape.1164 \n bf16[] reshape(bf16[1]"];
	"broadcast.1165" [label="broadcast.1165 \n bf16[4]"];
	"multiply.1166" [label="multiply.1166 \n bf16[4]"];
	"broadcast.1183" [label="broadcast.1183 \n bf16[4]"];
	"multiply.1184" [label="multiply.1184 \n bf16[4]"];
	"add.1188" [label="add.1188 \n bf16[4]"];
	"p58.1167" [label="p58.1167 \n bf16[4]"];
	"broadcast.1168" [label="broadcast.1168 \n bf16[4]"];
	"multiply.1169" [label="multiply.1169 \n bf16[4]"];
	"multiply.1171" [label="multiply.1171 \n bf16[4]"];
	"convert.1170" [label="convert.1170 \n bf16[] convert(f32[] %p4.7), metadata="];
	"broadcast.1172" [label="broadcast.1172 \n bf16[4]"];
	"multiply.1173" [label="multiply.1173 \n bf16[4]"];
	"add.1174" [label="add.1174 \n bf16[4]"];
	"sqrt.1175" [label="sqrt.1175 \n bf16[4]"];
	"broadcast.1176" [label="broadcast.1176 \n bf16[4]"];
	"divide.1177" [label="divide.1177 \n bf16[4]"];
	"broadcast.1178" [label="broadcast.1178 \n bf16[4]"];
	"add.1179" [label="add.1179 \n bf16[4]"];
	"divide.1203" [label="divide.1203 \n bf16[4]"];
	"convert.1202" [label="convert.1202 \n bf16[] convert(f32[] %p1.2), metadata="];
	"broadcast.1204" [label="broadcast.1204 \n bf16[4]"];
	"multiply.1205" [label="multiply.1205 \n bf16[4]"];
	"add.1206" [label="add.1206 \n bf16[4]"];
	"p63.1254" [label="p63.1254 \n bf16[1]"];
	"reshape.172" [label="reshape.172 \n bf16[1]"];
	"multiply.1256" [label="multiply.1256 \n bf16[1]"];
	"constant.53" [label="constant.53 \n bf16[1]"];
	"multiply.1259" [label="multiply.1259 \n bf16[1]"];
	"subtract.1260" [label="subtract.1260 \n bf16[1]"];
	"p62.1246" [label="p62.1246 \n bf16[1]"];
	"reshape.175" [label="reshape.175 \n bf16[1]"];
	"multiply.1248" [label="multiply.1248 \n bf16[1]"];
	"constant.56" [label="constant.56 \n bf16[1]"];
	"compare.1226" [label="compare.1226 \n pred[1]"];
	"constant.57" [label="constant.57 \n bf16[1]"];
	"select.1228" [label="select.1228 \n bf16[1]"];
	"multiply.1229" [label="multiply.1229 \n bf16[1]"];
	"reshape.180" [label="reshape.180 \n bf16[1]"];
	"multiply.1245" [label="multiply.1245 \n bf16[1]"];
	"add.1249" [label="add.1249 \n bf16[1]"];
	"p61.1230" [label="p61.1230 \n bf16[1]"];
	"reshape.181" [label="reshape.181 \n bf16[1]"];
	"multiply.1232" [label="multiply.1232 \n bf16[1]"];
	"multiply.1234" [label="multiply.1234 \n bf16[1]"];
	"convert.1233" [label="convert.1233 \n bf16[] convert(f32[] %p4.7), metadata="];
	"reshape.182" [label="reshape.182 \n bf16[1]"];
	"multiply.1236" [label="multiply.1236 \n bf16[1]"];
	"add.1237" [label="add.1237 \n bf16[1]"];
	"sqrt.1238" [label="sqrt.1238 \n bf16[1]"];
	"reshape.183" [label="reshape.183 \n bf16[1]"];
	"divide.1240" [label="divide.1240 \n bf16[1]"];
	"reshape.184" [label="reshape.184 \n bf16[1]"];
	"add.1242" [label="add.1242 \n bf16[1]"];
	"divide.1262" [label="divide.1262 \n bf16[1]"];
	"convert.1261" [label="convert.1261 \n bf16[] convert(f32[] %p1.2), metadata="];
	"reshape.185" [label="reshape.185 \n bf16[1]"];
	"multiply.1264" [label="multiply.1264 \n bf16[1]"];
	"add.1265" [label="add.1265 \n bf16[1]"];
	"tuple.1275" [label="tuple.1275 \n (bf16[4,4]"]; 
 	"p35.675" -> "broadcast.677";
	"p36.676" -> "multiply.678";
	"broadcast.677" -> "multiply.678";
	"p34.674" -> "broadcast.679";
	"multiply.678" -> "multiply.681";
	"broadcast.679" -> "multiply.681";
	"p36.676" -> "subtract.682";
	"multiply.681" -> "subtract.682";
	"p32.664" -> "broadcast.666";
	"p33.665" -> "multiply.667";
	"broadcast.666" -> "multiply.667";
	"p7.25" -> "divide.1";
	"p6.24" -> "divide.1";
	"divide.1" -> "broadcast.61";
	"p9.84" -> "custom-call.20";
	"broadcast.61" -> "multiply.23";
	"custom-call.20" -> "multiply.23";
	"multiply.23" -> "reshape.232";
	"reshape.232" -> "broadcast.9";
	"p11.144" -> "custom-call.22";
	"broadcast.9" -> "dot.154";
	"custom-call.22" -> "dot.154";
	"p13.204" -> "custom-call.24";
	"dot.154" -> "dot.214";
	"custom-call.24" -> "dot.214";
	"p15.264" -> "custom-call.26";
	"dot.214" -> "dot.274";
	"custom-call.26" -> "dot.274";
	"p22.368" -> "transpose.565";
	"dot.274" -> "dot.1";
	"transpose.565" -> "dot.1";
	"dot.1" -> "custom-call.37";
	"p27.576" -> "add.577";
	"custom-call.37" -> "add.577";
	"p0.1" -> "convert.578";
	"add.577" -> "reduce-scatter.586";
	"convert.578" -> "reduce-scatter.586";
	"AddComputation.582" -> "reduce-scatter.586";
	"reduce-scatter.586" -> "get-tuple-element.587";
	"get-tuple-element.587" -> "multiply.590";
	"get-tuple-element.587" -> "multiply.590";
	"multiply.590" -> "reduce.597";
	"constant.591" -> "reduce.597";
	"AddComputation.593" -> "reduce.597";
	"reduce.597" -> "sqrt.598";
	"sqrt.598" -> "multiply.600";
	"sqrt.598" -> "multiply.600";
	"multiply.600" -> "reshape.13";
	"p28.601" -> "add.603";
	"reshape.13" -> "add.603";
	"p21.359" -> "custom-call.28";
	"custom-call.28" -> "transpose.367";
	"p22.368" -> "dot.369";
	"transpose.367" -> "dot.369";
	"p20.351" -> "custom-call.29";
	"custom-call.29" -> "broadcast.373";
	"dot.369" -> "add.374";
	"broadcast.373" -> "add.374";
	"add.374" -> "transpose.522";
	"dot.214" -> "dot.2";
	"transpose.522" -> "dot.2";
	"dot.2" -> "custom-call.36";
	"p26.533" -> "add.534";
	"custom-call.36" -> "add.534";
	"p0.1" -> "convert.535";
	"add.534" -> "reduce-scatter.543";
	"convert.535" -> "reduce-scatter.543";
	"AddComputation.539" -> "reduce-scatter.543";
	"reduce-scatter.543" -> "get-tuple-element.544";
	"get-tuple-element.544" -> "multiply.547";
	"get-tuple-element.544" -> "multiply.547";
	"multiply.547" -> "reduce.554";
	"constant.548" -> "reduce.554";
	"AddComputation.550" -> "reduce.554";
	"reduce.554" -> "sqrt.555";
	"sqrt.555" -> "multiply.557";
	"sqrt.555" -> "multiply.557";
	"multiply.557" -> "reshape.19";
	"add.603" -> "add.605";
	"reshape.19" -> "add.605";
	"custom-call.26" -> "transpose.350";
	"add.374" -> "dot.375";
	"transpose.350" -> "dot.375";
	"p19.342" -> "custom-call.30";
	"custom-call.30" -> "broadcast.379";
	"dot.375" -> "add.380";
	"broadcast.379" -> "add.380";
	"add.380" -> "transpose.479";
	"dot.154" -> "dot.3";
	"transpose.479" -> "dot.3";
	"dot.3" -> "custom-call.35";
	"p25.490" -> "add.491";
	"custom-call.35" -> "add.491";
	"p0.1" -> "convert.492";
	"add.491" -> "reduce-scatter.500";
	"convert.492" -> "reduce-scatter.500";
	"AddComputation.496" -> "reduce-scatter.500";
	"reduce-scatter.500" -> "get-tuple-element.501";
	"get-tuple-element.501" -> "multiply.504";
	"get-tuple-element.501" -> "multiply.504";
	"multiply.504" -> "reduce.511";
	"constant.505" -> "reduce.511";
	"AddComputation.507" -> "reduce.511";
	"reduce.511" -> "sqrt.512";
	"sqrt.512" -> "multiply.514";
	"sqrt.512" -> "multiply.514";
	"multiply.514" -> "reshape.25";
	"add.605" -> "add.607";
	"reshape.25" -> "add.607";
	"custom-call.24" -> "transpose.341";
	"add.380" -> "dot.381";
	"transpose.341" -> "dot.381";
	"p18.333" -> "custom-call.31";
	"custom-call.31" -> "broadcast.385";
	"dot.381" -> "add.386";
	"broadcast.385" -> "add.386";
	"add.386" -> "transpose.436";
	"broadcast.9" -> "dot.4";
	"transpose.436" -> "dot.4";
	"dot.4" -> "custom-call.34";
	"p24.447" -> "add.448";
	"custom-call.34" -> "add.448";
	"p0.1" -> "convert.449";
	"add.448" -> "reduce-scatter.457";
	"convert.449" -> "reduce-scatter.457";
	"AddComputation.453" -> "reduce-scatter.457";
	"reduce-scatter.457" -> "get-tuple-element.458";
	"get-tuple-element.458" -> "multiply.461";
	"get-tuple-element.458" -> "multiply.461";
	"multiply.461" -> "reduce.468";
	"constant.462" -> "reduce.468";
	"AddComputation.464" -> "reduce.468";
	"reduce.468" -> "sqrt.469";
	"sqrt.469" -> "multiply.471";
	"sqrt.469" -> "multiply.471";
	"multiply.471" -> "reshape.37";
	"add.607" -> "add.609";
	"reshape.37" -> "add.609";
	"custom-call.22" -> "transpose.332";
	"add.386" -> "dot.387";
	"transpose.332" -> "dot.387";
	"p17.324" -> "custom-call.32";
	"custom-call.32" -> "broadcast.391";
	"dot.387" -> "add.392";
	"broadcast.391" -> "add.392";
	"divide.1" -> "broadcast.63";
	"add.392" -> "multiply.24";
	"broadcast.63" -> "multiply.24";
	"multiply.24" -> "convert.2";
	"convert.2" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"convert.1" -> "reshape.44";
	"reshape.44" -> "custom-call.33";
	"p23.404" -> "add.405";
	"custom-call.33" -> "add.405";
	"p0.1" -> "convert.406";
	"add.405" -> "reduce-scatter.414";
	"convert.406" -> "reduce-scatter.414";
	"AddComputation.410" -> "reduce-scatter.414";
	"reduce-scatter.414" -> "get-tuple-element.415";
	"get-tuple-element.415" -> "multiply.418";
	"get-tuple-element.415" -> "multiply.418";
	"multiply.418" -> "reduce.425";
	"constant.419" -> "reduce.425";
	"AddComputation.421" -> "reduce.425";
	"reduce.425" -> "sqrt.426";
	"sqrt.426" -> "multiply.428";
	"sqrt.426" -> "multiply.428";
	"multiply.428" -> "reshape.48";
	"add.609" -> "add.611";
	"reshape.48" -> "add.611";
	"dot.274" -> "reduce.281";
	"constant.275" -> "reduce.281";
	"AddComputation.277" -> "reduce.281";
	"reduce.281" -> "custom-call.27";
	"p16.292" -> "add.293";
	"custom-call.27" -> "add.293";
	"p0.1" -> "convert.294";
	"add.293" -> "reduce-scatter.302";
	"convert.294" -> "reduce-scatter.302";
	"AddComputation.298" -> "reduce-scatter.302";
	"reduce-scatter.302" -> "get-tuple-element.303";
	"get-tuple-element.303" -> "multiply.306";
	"get-tuple-element.303" -> "multiply.306";
	"multiply.306" -> "reduce.313";
	"constant.307" -> "reduce.313";
	"AddComputation.309" -> "reduce.313";
	"reduce.313" -> "sqrt.314";
	"sqrt.314" -> "multiply.316";
	"sqrt.314" -> "multiply.316";
	"multiply.316" -> "reshape.52";
	"add.611" -> "add.613";
	"reshape.52" -> "add.613";
	"dot.214" -> "reduce.221";
	"constant.215" -> "reduce.221";
	"AddComputation.217" -> "reduce.221";
	"reduce.221" -> "custom-call.25";
	"p14.232" -> "add.233";
	"custom-call.25" -> "add.233";
	"p0.1" -> "convert.234";
	"add.233" -> "reduce-scatter.242";
	"convert.234" -> "reduce-scatter.242";
	"AddComputation.238" -> "reduce-scatter.242";
	"reduce-scatter.242" -> "get-tuple-element.243";
	"get-tuple-element.243" -> "multiply.246";
	"get-tuple-element.243" -> "multiply.246";
	"multiply.246" -> "reduce.253";
	"constant.247" -> "reduce.253";
	"AddComputation.249" -> "reduce.253";
	"reduce.253" -> "sqrt.254";
	"sqrt.254" -> "multiply.256";
	"sqrt.254" -> "multiply.256";
	"multiply.256" -> "reshape.56";
	"add.613" -> "add.615";
	"reshape.56" -> "add.615";
	"dot.154" -> "reduce.161";
	"constant.155" -> "reduce.161";
	"AddComputation.157" -> "reduce.161";
	"reduce.161" -> "custom-call.23";
	"p12.172" -> "add.173";
	"custom-call.23" -> "add.173";
	"p0.1" -> "convert.174";
	"add.173" -> "reduce-scatter.182";
	"convert.174" -> "reduce-scatter.182";
	"AddComputation.178" -> "reduce-scatter.182";
	"reduce-scatter.182" -> "get-tuple-element.183";
	"get-tuple-element.183" -> "multiply.186";
	"get-tuple-element.183" -> "multiply.186";
	"multiply.186" -> "reduce.193";
	"constant.187" -> "reduce.193";
	"AddComputation.189" -> "reduce.193";
	"reduce.193" -> "sqrt.194";
	"sqrt.194" -> "multiply.196";
	"sqrt.194" -> "multiply.196";
	"multiply.196" -> "reshape.60";
	"add.615" -> "add.617";
	"reshape.60" -> "add.617";
	"broadcast.9" -> "reduce.101";
	"constant.95" -> "reduce.101";
	"AddComputation.97" -> "reduce.101";
	"reduce.101" -> "custom-call.21";
	"p10.112" -> "add.113";
	"custom-call.21" -> "add.113";
	"p0.1" -> "convert.114";
	"add.113" -> "reduce-scatter.122";
	"convert.114" -> "reduce-scatter.122";
	"AddComputation.118" -> "reduce-scatter.122";
	"reduce-scatter.122" -> "get-tuple-element.123";
	"get-tuple-element.123" -> "multiply.126";
	"get-tuple-element.123" -> "multiply.126";
	"multiply.126" -> "reduce.133";
	"constant.127" -> "reduce.133";
	"AddComputation.129" -> "reduce.133";
	"reduce.133" -> "sqrt.134";
	"sqrt.134" -> "multiply.136";
	"sqrt.134" -> "multiply.136";
	"multiply.136" -> "reshape.64";
	"add.617" -> "add.619";
	"reshape.64" -> "add.619";
	"divide.1" -> "broadcast.1";
	"broadcast.1" -> "reduce.41";
	"constant.35" -> "reduce.41";
	"AddComputation.37" -> "reduce.41";
	"reduce.41" -> "custom-call.19";
	"p8.52" -> "add.53";
	"custom-call.19" -> "add.53";
	"p0.1" -> "convert.54";
	"add.53" -> "reduce-scatter.62";
	"convert.54" -> "reduce-scatter.62";
	"AddComputation.58" -> "reduce-scatter.62";
	"reduce-scatter.62" -> "get-tuple-element.63";
	"get-tuple-element.63" -> "multiply.25";
	"get-tuple-element.63" -> "multiply.25";
	"add.619" -> "add.621";
	"multiply.25" -> "add.621";
	"add.621" -> "power.624";
	"constant.5" -> "power.624";
	"p5.13" -> "reshape.71";
	"power.624" -> "add.626";
	"reshape.71" -> "add.626";
	"constant.1" -> "divide.629";
	"add.626" -> "divide.629";
	"divide.629" -> "compare.636";
	"constant.9" -> "compare.636";
	"compare.636" -> "select.638";
	"divide.629" -> "select.638";
	"constant.10" -> "select.638";
	"select.638" -> "reshape.640";
	"reshape.640" -> "broadcast.642";
	"get-tuple-element.587" -> "multiply.643";
	"broadcast.642" -> "multiply.643";
	"p31.658" -> "broadcast.662";
	"multiply.643" -> "multiply.663";
	"broadcast.662" -> "multiply.663";
	"multiply.667" -> "add.668";
	"multiply.663" -> "add.668";
	"p29.644" -> "broadcast.646";
	"p30.645" -> "multiply.647";
	"broadcast.646" -> "multiply.647";
	"multiply.643" -> "multiply.649";
	"multiply.643" -> "multiply.649";
	"p4.7" -> "convert.648";
	"convert.648" -> "broadcast.650";
	"multiply.649" -> "multiply.651";
	"broadcast.650" -> "multiply.651";
	"multiply.647" -> "add.652";
	"multiply.651" -> "add.652";
	"add.652" -> "sqrt.653";
	"p3.6" -> "broadcast.654";
	"sqrt.653" -> "divide.655";
	"broadcast.654" -> "divide.655";
	"p2.4" -> "broadcast.656";
	"divide.655" -> "add.657";
	"broadcast.656" -> "add.657";
	"add.668" -> "divide.684";
	"add.657" -> "divide.684";
	"p1.2" -> "convert.683";
	"convert.683" -> "broadcast.685";
	"divide.684" -> "multiply.686";
	"broadcast.685" -> "multiply.686";
	"subtract.682" -> "add.687";
	"multiply.686" -> "add.687";
	"p0.1" -> "convert.688";
	"add.687" -> "all-gather.692";
	"convert.688" -> "all-gather.692";
	"all-gather.692" -> "get-tuple-element.693";
	"p35.675" -> "broadcast.998";
	"p51.997" -> "multiply.999";
	"broadcast.998" -> "multiply.999";
	"constant.14" -> "broadcast.12";
	"multiply.999" -> "multiply.1002";
	"broadcast.12" -> "multiply.1002";
	"p51.997" -> "subtract.1003";
	"multiply.1002" -> "subtract.1003";
	"p32.664" -> "broadcast.988";
	"p50.987" -> "multiply.989";
	"broadcast.988" -> "multiply.989";
	"divide.629" -> "compare.962";
	"constant.17" -> "compare.962";
	"compare.962" -> "select.964";
	"divide.629" -> "select.964";
	"constant.22" -> "select.964";
	"select.964" -> "reshape.966";
	"reshape.966" -> "broadcast.967";
	"get-tuple-element.303" -> "multiply.968";
	"broadcast.967" -> "multiply.968";
	"p31.658" -> "broadcast.985";
	"multiply.968" -> "multiply.986";
	"broadcast.985" -> "multiply.986";
	"multiply.989" -> "add.990";
	"multiply.986" -> "add.990";
	"p29.644" -> "broadcast.970";
	"p49.969" -> "multiply.971";
	"broadcast.970" -> "multiply.971";
	"multiply.968" -> "multiply.973";
	"multiply.968" -> "multiply.973";
	"p4.7" -> "convert.972";
	"convert.972" -> "broadcast.974";
	"multiply.973" -> "multiply.975";
	"broadcast.974" -> "multiply.975";
	"multiply.971" -> "add.976";
	"multiply.975" -> "add.976";
	"add.976" -> "sqrt.977";
	"p3.6" -> "broadcast.978";
	"sqrt.977" -> "divide.979";
	"broadcast.978" -> "divide.979";
	"p2.4" -> "broadcast.980";
	"divide.979" -> "add.981";
	"broadcast.980" -> "add.981";
	"add.990" -> "divide.1005";
	"add.981" -> "divide.1005";
	"p1.2" -> "convert.1004";
	"convert.1004" -> "broadcast.1006";
	"divide.1005" -> "multiply.1007";
	"broadcast.1006" -> "multiply.1007";
	"subtract.1003" -> "add.1008";
	"multiply.1007" -> "add.1008";
	"p35.675" -> "broadcast.934";
	"p48.933" -> "multiply.935";
	"broadcast.934" -> "multiply.935";
	"p34.674" -> "broadcast.936";
	"multiply.935" -> "multiply.938";
	"broadcast.936" -> "multiply.938";
	"p48.933" -> "subtract.939";
	"multiply.938" -> "subtract.939";
	"p32.664" -> "broadcast.925";
	"p47.924" -> "multiply.926";
	"broadcast.925" -> "multiply.926";
	"divide.629" -> "compare.898";
	"constant.24" -> "compare.898";
	"compare.898" -> "select.900";
	"divide.629" -> "select.900";
	"constant.25" -> "select.900";
	"select.900" -> "reshape.902";
	"reshape.902" -> "broadcast.48";
	"get-tuple-element.415" -> "multiply.905";
	"broadcast.48" -> "multiply.905";
	"p31.658" -> "broadcast.922";
	"multiply.905" -> "multiply.923";
	"broadcast.922" -> "multiply.923";
	"multiply.926" -> "add.927";
	"multiply.923" -> "add.927";
	"p29.644" -> "broadcast.907";
	"p46.906" -> "multiply.908";
	"broadcast.907" -> "multiply.908";
	"multiply.905" -> "multiply.910";
	"multiply.905" -> "multiply.910";
	"p4.7" -> "convert.909";
	"convert.909" -> "broadcast.911";
	"multiply.910" -> "multiply.912";
	"broadcast.911" -> "multiply.912";
	"multiply.908" -> "add.913";
	"multiply.912" -> "add.913";
	"add.913" -> "sqrt.914";
	"p3.6" -> "broadcast.915";
	"sqrt.914" -> "divide.916";
	"broadcast.915" -> "divide.916";
	"p2.4" -> "broadcast.917";
	"divide.916" -> "add.918";
	"broadcast.917" -> "add.918";
	"add.927" -> "divide.941";
	"add.918" -> "divide.941";
	"p1.2" -> "convert.940";
	"convert.940" -> "broadcast.942";
	"divide.941" -> "multiply.943";
	"broadcast.942" -> "multiply.943";
	"subtract.939" -> "add.944";
	"multiply.943" -> "add.944";
	"p35.675" -> "broadcast.870";
	"p45.869" -> "multiply.871";
	"broadcast.870" -> "multiply.871";
	"p34.674" -> "broadcast.872";
	"multiply.871" -> "multiply.874";
	"broadcast.872" -> "multiply.874";
	"p45.869" -> "subtract.875";
	"multiply.874" -> "subtract.875";
	"p32.664" -> "broadcast.861";
	"p44.860" -> "multiply.862";
	"broadcast.861" -> "multiply.862";
	"divide.629" -> "compare.834";
	"constant.28" -> "compare.834";
	"compare.834" -> "select.836";
	"divide.629" -> "select.836";
	"constant.29" -> "select.836";
	"select.836" -> "reshape.838";
	"reshape.838" -> "broadcast.840";
	"get-tuple-element.458" -> "multiply.841";
	"broadcast.840" -> "multiply.841";
	"p31.658" -> "broadcast.858";
	"multiply.841" -> "multiply.859";
	"broadcast.858" -> "multiply.859";
	"multiply.862" -> "add.863";
	"multiply.859" -> "add.863";
	"p29.644" -> "broadcast.843";
	"p43.842" -> "multiply.844";
	"broadcast.843" -> "multiply.844";
	"multiply.841" -> "multiply.846";
	"multiply.841" -> "multiply.846";
	"p4.7" -> "convert.845";
	"convert.845" -> "broadcast.847";
	"multiply.846" -> "multiply.848";
	"broadcast.847" -> "multiply.848";
	"multiply.844" -> "add.849";
	"multiply.848" -> "add.849";
	"add.849" -> "sqrt.850";
	"p3.6" -> "broadcast.851";
	"sqrt.850" -> "divide.852";
	"broadcast.851" -> "divide.852";
	"p2.4" -> "broadcast.853";
	"divide.852" -> "add.854";
	"broadcast.853" -> "add.854";
	"add.863" -> "divide.877";
	"add.854" -> "divide.877";
	"p1.2" -> "convert.876";
	"convert.876" -> "broadcast.878";
	"divide.877" -> "multiply.879";
	"broadcast.878" -> "multiply.879";
	"subtract.875" -> "add.880";
	"multiply.879" -> "add.880";
	"p35.675" -> "broadcast.806";
	"p42.805" -> "multiply.807";
	"broadcast.806" -> "multiply.807";
	"p34.674" -> "broadcast.808";
	"multiply.807" -> "multiply.810";
	"broadcast.808" -> "multiply.810";
	"p42.805" -> "subtract.811";
	"multiply.810" -> "subtract.811";
	"p32.664" -> "broadcast.797";
	"p41.796" -> "multiply.798";
	"broadcast.797" -> "multiply.798";
	"divide.629" -> "compare.770";
	"constant.31" -> "compare.770";
	"compare.770" -> "select.772";
	"divide.629" -> "select.772";
	"constant.32" -> "select.772";
	"select.772" -> "reshape.774";
	"reshape.774" -> "broadcast.776";
	"get-tuple-element.501" -> "multiply.777";
	"broadcast.776" -> "multiply.777";
	"p31.658" -> "broadcast.794";
	"multiply.777" -> "multiply.795";
	"broadcast.794" -> "multiply.795";
	"multiply.798" -> "add.799";
	"multiply.795" -> "add.799";
	"p29.644" -> "broadcast.779";
	"p40.778" -> "multiply.780";
	"broadcast.779" -> "multiply.780";
	"multiply.777" -> "multiply.782";
	"multiply.777" -> "multiply.782";
	"p4.7" -> "convert.781";
	"convert.781" -> "broadcast.783";
	"multiply.782" -> "multiply.784";
	"broadcast.783" -> "multiply.784";
	"multiply.780" -> "add.785";
	"multiply.784" -> "add.785";
	"add.785" -> "sqrt.786";
	"p3.6" -> "broadcast.787";
	"sqrt.786" -> "divide.788";
	"broadcast.787" -> "divide.788";
	"p2.4" -> "broadcast.789";
	"divide.788" -> "add.790";
	"broadcast.789" -> "add.790";
	"add.799" -> "divide.813";
	"add.790" -> "divide.813";
	"p1.2" -> "convert.812";
	"convert.812" -> "broadcast.814";
	"divide.813" -> "multiply.815";
	"broadcast.814" -> "multiply.815";
	"subtract.811" -> "add.816";
	"multiply.815" -> "add.816";
	"p35.675" -> "broadcast.742";
	"p39.741" -> "multiply.743";
	"broadcast.742" -> "multiply.743";
	"p34.674" -> "broadcast.744";
	"multiply.743" -> "multiply.746";
	"broadcast.744" -> "multiply.746";
	"p39.741" -> "subtract.747";
	"multiply.746" -> "subtract.747";
	"p32.664" -> "broadcast.733";
	"p38.732" -> "multiply.734";
	"broadcast.733" -> "multiply.734";
	"divide.629" -> "compare.706";
	"constant.34" -> "compare.706";
	"compare.706" -> "select.708";
	"divide.629" -> "select.708";
	"constant.37" -> "select.708";
	"select.708" -> "reshape.710";
	"reshape.710" -> "broadcast.712";
	"get-tuple-element.544" -> "multiply.713";
	"broadcast.712" -> "multiply.713";
	"p31.658" -> "broadcast.730";
	"multiply.713" -> "multiply.731";
	"broadcast.730" -> "multiply.731";
	"multiply.734" -> "add.735";
	"multiply.731" -> "add.735";
	"p29.644" -> "broadcast.715";
	"p37.714" -> "multiply.716";
	"broadcast.715" -> "multiply.716";
	"multiply.713" -> "multiply.718";
	"multiply.713" -> "multiply.718";
	"p4.7" -> "convert.717";
	"convert.717" -> "broadcast.719";
	"multiply.718" -> "multiply.720";
	"broadcast.719" -> "multiply.720";
	"multiply.716" -> "add.721";
	"multiply.720" -> "add.721";
	"add.721" -> "sqrt.722";
	"p3.6" -> "broadcast.723";
	"sqrt.722" -> "divide.724";
	"broadcast.723" -> "divide.724";
	"p2.4" -> "broadcast.725";
	"divide.724" -> "add.726";
	"broadcast.725" -> "add.726";
	"add.735" -> "divide.749";
	"add.726" -> "divide.749";
	"p1.2" -> "convert.748";
	"convert.748" -> "broadcast.750";
	"divide.749" -> "multiply.751";
	"broadcast.750" -> "multiply.751";
	"subtract.747" -> "add.752";
	"multiply.751" -> "add.752";
	"all-gather.692" -> "get-tuple-element.756";
	"add.752" -> "all-gather.757";
	"get-tuple-element.756" -> "all-gather.757";
	"all-gather.757" -> "get-tuple-element.820";
	"add.816" -> "all-gather.821";
	"get-tuple-element.820" -> "all-gather.821";
	"all-gather.821" -> "get-tuple-element.884";
	"add.880" -> "all-gather.885";
	"get-tuple-element.884" -> "all-gather.885";
	"all-gather.885" -> "get-tuple-element.948";
	"add.944" -> "all-gather.949";
	"get-tuple-element.948" -> "all-gather.949";
	"all-gather.949" -> "get-tuple-element.1012";
	"add.1008" -> "all-gather.1013";
	"get-tuple-element.1012" -> "all-gather.1013";
	"all-gather.1013" -> "get-tuple-element.1014";
	"all-gather.757" -> "get-tuple-element.758";
	"p35.675" -> "broadcast.1064";
	"p54.1063" -> "multiply.1065";
	"broadcast.1064" -> "multiply.1065";
	"constant.39" -> "broadcast.19";
	"multiply.1065" -> "multiply.1068";
	"broadcast.19" -> "multiply.1068";
	"p54.1063" -> "subtract.1069";
	"multiply.1068" -> "subtract.1069";
	"p32.664" -> "broadcast.1054";
	"p53.1053" -> "multiply.1055";
	"broadcast.1054" -> "multiply.1055";
	"divide.629" -> "compare.1028";
	"constant.41" -> "compare.1028";
	"compare.1028" -> "select.1030";
	"divide.629" -> "select.1030";
	"constant.42" -> "select.1030";
	"select.1030" -> "reshape.1032";
	"reshape.1032" -> "broadcast.1033";
	"get-tuple-element.243" -> "multiply.1034";
	"broadcast.1033" -> "multiply.1034";
	"p31.658" -> "broadcast.1051";
	"multiply.1034" -> "multiply.1052";
	"broadcast.1051" -> "multiply.1052";
	"multiply.1055" -> "add.1056";
	"multiply.1052" -> "add.1056";
	"p29.644" -> "broadcast.1036";
	"p52.1035" -> "multiply.1037";
	"broadcast.1036" -> "multiply.1037";
	"multiply.1034" -> "multiply.1039";
	"multiply.1034" -> "multiply.1039";
	"p4.7" -> "convert.1038";
	"convert.1038" -> "broadcast.1040";
	"multiply.1039" -> "multiply.1041";
	"broadcast.1040" -> "multiply.1041";
	"multiply.1037" -> "add.1042";
	"multiply.1041" -> "add.1042";
	"add.1042" -> "sqrt.1043";
	"p3.6" -> "broadcast.1044";
	"sqrt.1043" -> "divide.1045";
	"broadcast.1044" -> "divide.1045";
	"p2.4" -> "broadcast.1046";
	"divide.1045" -> "add.1047";
	"broadcast.1046" -> "add.1047";
	"add.1056" -> "divide.1071";
	"add.1047" -> "divide.1071";
	"p1.2" -> "convert.1070";
	"convert.1070" -> "broadcast.1072";
	"divide.1071" -> "multiply.1073";
	"broadcast.1072" -> "multiply.1073";
	"subtract.1069" -> "add.1074";
	"multiply.1073" -> "add.1074";
	"all-gather.1013" -> "get-tuple-element.1078";
	"add.1074" -> "all-gather.1079";
	"get-tuple-element.1078" -> "all-gather.1079";
	"all-gather.1079" -> "get-tuple-element.1080";
	"all-gather.821" -> "get-tuple-element.822";
	"p35.675" -> "broadcast.1130";
	"p57.1129" -> "multiply.1131";
	"broadcast.1130" -> "multiply.1131";
	"constant.44" -> "broadcast.20";
	"multiply.1131" -> "multiply.1134";
	"broadcast.20" -> "multiply.1134";
	"p57.1129" -> "subtract.1135";
	"multiply.1134" -> "subtract.1135";
	"p32.664" -> "broadcast.1120";
	"p56.1119" -> "multiply.1121";
	"broadcast.1120" -> "multiply.1121";
	"divide.629" -> "compare.1094";
	"constant.46" -> "compare.1094";
	"compare.1094" -> "select.1096";
	"divide.629" -> "select.1096";
	"constant.47" -> "select.1096";
	"select.1096" -> "reshape.1098";
	"reshape.1098" -> "broadcast.1099";
	"get-tuple-element.183" -> "multiply.1100";
	"broadcast.1099" -> "multiply.1100";
	"p31.658" -> "broadcast.1117";
	"multiply.1100" -> "multiply.1118";
	"broadcast.1117" -> "multiply.1118";
	"multiply.1121" -> "add.1122";
	"multiply.1118" -> "add.1122";
	"p29.644" -> "broadcast.1102";
	"p55.1101" -> "multiply.1103";
	"broadcast.1102" -> "multiply.1103";
	"multiply.1100" -> "multiply.1105";
	"multiply.1100" -> "multiply.1105";
	"p4.7" -> "convert.1104";
	"convert.1104" -> "broadcast.1106";
	"multiply.1105" -> "multiply.1107";
	"broadcast.1106" -> "multiply.1107";
	"multiply.1103" -> "add.1108";
	"multiply.1107" -> "add.1108";
	"add.1108" -> "sqrt.1109";
	"p3.6" -> "broadcast.1110";
	"sqrt.1109" -> "divide.1111";
	"broadcast.1110" -> "divide.1111";
	"p2.4" -> "broadcast.1112";
	"divide.1111" -> "add.1113";
	"broadcast.1112" -> "add.1113";
	"add.1122" -> "divide.1137";
	"add.1113" -> "divide.1137";
	"p1.2" -> "convert.1136";
	"convert.1136" -> "broadcast.1138";
	"divide.1137" -> "multiply.1139";
	"broadcast.1138" -> "multiply.1139";
	"subtract.1135" -> "add.1140";
	"multiply.1139" -> "add.1140";
	"all-gather.1079" -> "get-tuple-element.1144";
	"add.1140" -> "all-gather.1145";
	"get-tuple-element.1144" -> "all-gather.1145";
	"all-gather.1145" -> "get-tuple-element.1146";
	"all-gather.885" -> "get-tuple-element.886";
	"p35.675" -> "broadcast.1196";
	"p60.1195" -> "multiply.1197";
	"broadcast.1196" -> "multiply.1197";
	"constant.49" -> "broadcast.21";
	"multiply.1197" -> "multiply.1200";
	"broadcast.21" -> "multiply.1200";
	"p60.1195" -> "subtract.1201";
	"multiply.1200" -> "subtract.1201";
	"p32.664" -> "broadcast.1186";
	"p59.1185" -> "multiply.1187";
	"broadcast.1186" -> "multiply.1187";
	"divide.629" -> "compare.1160";
	"constant.51" -> "compare.1160";
	"compare.1160" -> "select.1162";
	"divide.629" -> "select.1162";
	"constant.52" -> "select.1162";
	"select.1162" -> "reshape.1164";
	"reshape.1164" -> "broadcast.1165";
	"get-tuple-element.123" -> "multiply.1166";
	"broadcast.1165" -> "multiply.1166";
	"p31.658" -> "broadcast.1183";
	"multiply.1166" -> "multiply.1184";
	"broadcast.1183" -> "multiply.1184";
	"multiply.1187" -> "add.1188";
	"multiply.1184" -> "add.1188";
	"p29.644" -> "broadcast.1168";
	"p58.1167" -> "multiply.1169";
	"broadcast.1168" -> "multiply.1169";
	"multiply.1166" -> "multiply.1171";
	"multiply.1166" -> "multiply.1171";
	"p4.7" -> "convert.1170";
	"convert.1170" -> "broadcast.1172";
	"multiply.1171" -> "multiply.1173";
	"broadcast.1172" -> "multiply.1173";
	"multiply.1169" -> "add.1174";
	"multiply.1173" -> "add.1174";
	"add.1174" -> "sqrt.1175";
	"p3.6" -> "broadcast.1176";
	"sqrt.1175" -> "divide.1177";
	"broadcast.1176" -> "divide.1177";
	"p2.4" -> "broadcast.1178";
	"divide.1177" -> "add.1179";
	"broadcast.1178" -> "add.1179";
	"add.1188" -> "divide.1203";
	"add.1179" -> "divide.1203";
	"p1.2" -> "convert.1202";
	"convert.1202" -> "broadcast.1204";
	"divide.1203" -> "multiply.1205";
	"broadcast.1204" -> "multiply.1205";
	"subtract.1201" -> "add.1206";
	"multiply.1205" -> "add.1206";
	"all-gather.1145" -> "get-tuple-element.1210";
	"add.1206" -> "all-gather.1211";
	"get-tuple-element.1210" -> "all-gather.1211";
	"all-gather.1211" -> "get-tuple-element.1212";
	"all-gather.949" -> "get-tuple-element.950";
	"p35.675" -> "reshape.172";
	"p63.1254" -> "multiply.1256";
	"reshape.172" -> "multiply.1256";
	"multiply.1256" -> "multiply.1259";
	"constant.53" -> "multiply.1259";
	"p63.1254" -> "subtract.1260";
	"multiply.1259" -> "subtract.1260";
	"p32.664" -> "reshape.175";
	"p62.1246" -> "multiply.1248";
	"reshape.175" -> "multiply.1248";
	"divide.629" -> "compare.1226";
	"constant.56" -> "compare.1226";
	"compare.1226" -> "select.1228";
	"divide.629" -> "select.1228";
	"constant.57" -> "select.1228";
	"get-tuple-element.63" -> "multiply.1229";
	"select.1228" -> "multiply.1229";
	"p31.658" -> "reshape.180";
	"multiply.1229" -> "multiply.1245";
	"reshape.180" -> "multiply.1245";
	"multiply.1248" -> "add.1249";
	"multiply.1245" -> "add.1249";
	"p29.644" -> "reshape.181";
	"p61.1230" -> "multiply.1232";
	"reshape.181" -> "multiply.1232";
	"multiply.1229" -> "multiply.1234";
	"multiply.1229" -> "multiply.1234";
	"p4.7" -> "convert.1233";
	"convert.1233" -> "reshape.182";
	"multiply.1234" -> "multiply.1236";
	"reshape.182" -> "multiply.1236";
	"multiply.1232" -> "add.1237";
	"multiply.1236" -> "add.1237";
	"add.1237" -> "sqrt.1238";
	"p3.6" -> "reshape.183";
	"sqrt.1238" -> "divide.1240";
	"reshape.183" -> "divide.1240";
	"p2.4" -> "reshape.184";
	"divide.1240" -> "add.1242";
	"reshape.184" -> "add.1242";
	"add.1249" -> "divide.1262";
	"add.1242" -> "divide.1262";
	"p1.2" -> "convert.1261";
	"convert.1261" -> "reshape.185";
	"divide.1262" -> "multiply.1264";
	"reshape.185" -> "multiply.1264";
	"subtract.1260" -> "add.1265";
	"multiply.1264" -> "add.1265";
	"all-gather.1211" -> "get-tuple-element.1269";
	"add.1265" -> "all-gather.1270";
	"get-tuple-element.1269" -> "all-gather.1270";
	"all-gather.1270" -> "get-tuple-element.1271";
	"get-tuple-element.693" -> "tuple.1275";
	"get-tuple-element.1014" -> "tuple.1275";
	"get-tuple-element.758" -> "tuple.1275";
	"get-tuple-element.1080" -> "tuple.1275";
	"get-tuple-element.822" -> "tuple.1275";
	"get-tuple-element.1146" -> "tuple.1275";
	"get-tuple-element.886" -> "tuple.1275";
	"get-tuple-element.1212" -> "tuple.1275";
	"get-tuple-element.950" -> "tuple.1275";
	"get-tuple-element.1271" -> "tuple.1275";
	"add.687" -> "tuple.1275";
	"add.752" -> "tuple.1275";
	"add.816" -> "tuple.1275";
	"add.880" -> "tuple.1275";
	"add.944" -> "tuple.1275";
	"add.1008" -> "tuple.1275";
	"add.1074" -> "tuple.1275";
	"add.1140" -> "tuple.1275";
	"add.1206" -> "tuple.1275";
	"add.1265" -> "tuple.1275";
	"add.53" -> "tuple.1275";
	"add.405" -> "tuple.1275";
	"add.113" -> "tuple.1275";
	"add.448" -> "tuple.1275";
	"add.173" -> "tuple.1275";
	"add.491" -> "tuple.1275";
	"add.233" -> "tuple.1275";
	"add.534" -> "tuple.1275";
	"add.293" -> "tuple.1275";
	"add.577" -> "tuple.1275";
	"add.668" -> "tuple.1275";
	"add.652" -> "tuple.1275";
	"add.735" -> "tuple.1275";
	"add.721" -> "tuple.1275";
	"add.799" -> "tuple.1275";
	"add.785" -> "tuple.1275";
	"add.863" -> "tuple.1275";
	"add.849" -> "tuple.1275";
	"add.927" -> "tuple.1275";
	"add.913" -> "tuple.1275";
	"add.990" -> "tuple.1275";
	"add.976" -> "tuple.1275";
	"add.1056" -> "tuple.1275";
	"add.1042" -> "tuple.1275";
	"add.1122" -> "tuple.1275";
	"add.1108" -> "tuple.1275";
	"add.1188" -> "tuple.1275";
	"add.1174" -> "tuple.1275";
	"add.1249" -> "tuple.1275";
	"add.1237" -> "tuple.1275";
	"p22.368" -> "tuple.1275";
	"power.624" -> "tuple.1275";
}