digraph HloModule {
	"p8.109" [label="p8.109 \n s64[] parameter(8), frontend_attributes="];
	"p47.1381" [label="p47.1381 \n s64[] parameter(47), frontend_attributes="];
	"p87.4536" [label="p87.4536 \n bf16[32000,32]"];
	"p86.4535" [label="p86.4535 \n bf16[] parameter(86), frontend_attributes="];
	"broadcast.4537" [label="broadcast.4537 \n bf16[32000,32]"];
	"multiply.4538" [label="multiply.4538 \n bf16[32000,32]"];
	"p85.4534" [label="p85.4534 \n bf16[] parameter(85), frontend_attributes="];
	"broadcast.4539" [label="broadcast.4539 \n bf16[32000,32]"];
	"multiply.4541" [label="multiply.4541 \n bf16[32000,32]"];
	"subtract.4542" [label="subtract.4542 \n bf16[32000,32]"];
	"p84.4525" [label="p84.4525 \n bf16[32000,32]"];
	"p83.4524" [label="p83.4524 \n bf16[] parameter(83), frontend_attributes="];
	"broadcast.4526" [label="broadcast.4526 \n bf16[32000,32]"];
	"multiply.4527" [label="multiply.4527 \n bf16[32000,32]"];
	"p69.4014" [label="p69.4014 \n bf16[32000,32]"];
	"p2.10" [label="p2.10 \n s64[1024,4096]"];
	"reshape.3981" [label="reshape.3981 \n s64[4194304]"];
	"constant.3995" [label="constant.3995 \n s64[] constant(0), metadata="];
	"broadcast.3996" [label="broadcast.3996 \n s64[4194304]"];
	"compare.3997" [label="compare.3997 \n pred[4194304]"];
	"p45.1348" [label="p45.1348 \n s64[] parameter(45), frontend_attributes="];
	"broadcast.3993" [label="broadcast.3993 \n s64[4194304]"];
	"add.3994" [label="add.3994 \n s64[4194304]"];
	"select.3998" [label="select.3998 \n s64[4194304]"];
	"reshape.3999" [label="reshape.3999 \n s64[4194304,1]"];
	"convert.3982" [label="convert.3982 \n f32[4194304]"];
	"constant.3980" [label="constant.3980 \n f32[] constant(-1), metadata="];
	"broadcast.3983" [label="broadcast.3983 \n f32[4194304]"];
	"compare.3984" [label="compare.3984 \n pred[4194304]"];
	"broadcast.3988" [label="broadcast.3988 \n pred[4194304,32]"];
	"constant.51" [label="constant.51 \n pred[4096]"];
	"constant.52" [label="constant.52 \n pred[4096]"];
	"broadcast.1" [label="broadcast.1 \n pred[1024,4096,32000]"];
	"p43.1328" [label="p43.1328 \n bf16[32]"];
	"broadcast.1329" [label="broadcast.1329 \n bf16[4096,1024,32]"];
	"p3.12" [label="p3.12 \n bf16[32000,32]"];
	"convert.8" [label="convert.8 \n u32[1024,4096]"];
	"reshape.1370" [label="reshape.1370 \n u32[4194304]"];
	"gather.14" [label="gather.14 \n bf16[4194304,32]"];
	"reshape.15" [label="reshape.15 \n bf16[1024,4096,32]"];
	"transpose.16" [label="transpose.16 \n bf16[4096,1024,32]"];
	"iota.1" [label="iota.1 \n s32[4096,4096]"];
	"compare.94" [label="compare.94 \n pred[4096,4096]"];
	"constant.85" [label="constant.85 \n bf16[] constant(0), metadata="];
	"broadcast.553" [label="broadcast.553 \n bf16[4096,4096]"];
	"constant.80" [label="constant.80 \n bf16[] constant(1), metadata="];
	"broadcast.555" [label="broadcast.555 \n bf16[4096,4096]"];
	"select.9" [label="select.9 \n bf16[4096,4096]"];
	"convert.40" [label="convert.40 \n pred[4096,4096]"];
	"broadcast.4" [label="broadcast.4 \n pred[1024,32,4096,4096]"];
	"constant.227" [label="constant.227 \n bf16[] constant(-9984), metadata="];
	"broadcast.228" [label="broadcast.228 \n bf16[1024,32,4096,4096]"];
	"p4.45" [label="p4.45 \n bf16[32]"];
	"broadcast.46" [label="broadcast.46 \n bf16[4096,1024,32]"];
	"convert.17" [label="convert.17 \n f32[4096,1024,32]"];
	"multiply.41" [label="multiply.41 \n f32[4096,1024,32]"];
	"constant.19" [label="constant.19 \n f32[] constant(0), metadata="];
	"reduce.25" [label="reduce.25 \n f32[4096,1024]"];
	"broadcast.33" [label="broadcast.33 \n f32[4096,1024]"];
	"multiply.34" [label="multiply.34 \n f32[4096,1024]"];
	"p1.3" [label="p1.3 \n f32[] parameter(1), frontend_attributes="];
	"broadcast.557" [label="broadcast.557 \n f32[4096,1024]"];
	"add.3" [label="add.3 \n f32[4096,1024]"];
	"rsqrt.0" [label="rsqrt.0 \n f32[4096,1024]"];
	"broadcast.42" [label="broadcast.42 \n f32[4096,1024,32]"];
	"multiply.43" [label="multiply.43 \n f32[4096,1024,32]"];
	"convert.44" [label="convert.44 \n bf16[4096,1024,32]"];
	"multiply.47" [label="multiply.47 \n bf16[4096,1024,32]"];
	"p0.1" [label="p0.1 \n f32[] parameter(0), frontend_attributes="];
	"convert.48" [label="convert.48 \n bf16[] convert(f32[] %p0.1), metadata="];
	"reshape.72" [label="reshape.72 \n bf16[4194304,32]"];
	"p6.70" [label="p6.70 \n bf16[96,32]"];
	"transpose.71" [label="transpose.71 \n bf16[32,96]"];
	"dot.73" [label="dot.73 \n bf16[4194304,96]"];
	"reshape.206" [label="reshape.206 \n bf16[4096,1024,96]"];
	"slice.207" [label="slice.207 \n bf16[4096,1024,32]"];
	"reshape.208" [label="reshape.208 \n bf16[4096,1024,32,1]"];
	"transpose.209" [label="transpose.209 \n bf16[1024,32,4096,1]"];
	"reshape.214" [label="reshape.214 \n bf16[1024,32,4096]"];
	"broadcast.215" [label="broadcast.215 \n bf16[1024,32,4096,2]"];
	"p10.159" [label="p10.159 \n bf16[1,1,4096,2]"];
	"reshape.163" [label="reshape.163 \n bf16[4096,2]"];
	"iota.4" [label="iota.4 \n s64[1,4096,1]"];
	"gather.164" [label="gather.164 \n bf16[1,4096,2]"];
	"reshape.211" [label="reshape.211 \n bf16[4096,2]"];
	"broadcast.212" [label="broadcast.212 \n bf16[1024,32,4096,2]"];
	"multiply.216" [label="multiply.216 \n bf16[1024,32,4096,2]"];
	"reshape.191" [label="reshape.191 \n bf16[4096,1024,96]"];
	"slice.192" [label="slice.192 \n bf16[4096,1024,32]"];
	"negate.17" [label="negate.17 \n bf16[4096,1024,32]"];
	"reshape.2172" [label="reshape.2172 \n bf16[4096,1024,32,1]"];
	"transpose.7" [label="transpose.7 \n bf16[1024,32,4096,1]"];
	"reshape.202" [label="reshape.202 \n bf16[1024,32,4096]"];
	"broadcast.203" [label="broadcast.203 \n bf16[1024,32,4096,2]"];
	"p9.121" [label="p9.121 \n bf16[1,1,4096,2]"];
	"reshape.125" [label="reshape.125 \n bf16[4096,2]"];
	"iota.5" [label="iota.5 \n s64[1,4096,1]"];
	"gather.126" [label="gather.126 \n bf16[1,4096,2]"];
	"reshape.199" [label="reshape.199 \n bf16[4096,2]"];
	"broadcast.200" [label="broadcast.200 \n bf16[1024,32,4096,2]"];
	"multiply.205" [label="multiply.205 \n bf16[1024,32,4096,2]"];
	"add.217" [label="add.217 \n bf16[1024,32,4096,2]"];
	"reshape.219" [label="reshape.219 \n bf16[32768,4096,2]"];
	"reshape.166" [label="reshape.166 \n bf16[4096,1024,96]"];
	"slice.167" [label="slice.167 \n bf16[4096,1024,32]"];
	"reshape.168" [label="reshape.168 \n bf16[4096,1024,32,1]"];
	"transpose.169" [label="transpose.169 \n bf16[1024,32,4096,1]"];
	"reshape.174" [label="reshape.174 \n bf16[1024,32,4096]"];
	"broadcast.175" [label="broadcast.175 \n bf16[1024,32,4096,2]"];
	"reshape.171" [label="reshape.171 \n bf16[4096,2]"];
	"broadcast.172" [label="broadcast.172 \n bf16[1024,32,4096,2]"];
	"multiply.176" [label="multiply.176 \n bf16[1024,32,4096,2]"];
	"reshape.133" [label="reshape.133 \n bf16[4096,1024,96]"];
	"slice.134" [label="slice.134 \n bf16[4096,1024,32]"];
	"negate.16" [label="negate.16 \n bf16[4096,1024,32]"];
	"reshape.2170" [label="reshape.2170 \n bf16[4096,1024,32,1]"];
	"transpose.5" [label="transpose.5 \n bf16[1024,32,4096,1]"];
	"reshape.144" [label="reshape.144 \n bf16[1024,32,4096]"];
	"broadcast.145" [label="broadcast.145 \n bf16[1024,32,4096,2]"];
	"reshape.141" [label="reshape.141 \n bf16[4096,2]"];
	"broadcast.142" [label="broadcast.142 \n bf16[1024,32,4096,2]"];
	"multiply.147" [label="multiply.147 \n bf16[1024,32,4096,2]"];
	"add.177" [label="add.177 \n bf16[1024,32,4096,2]"];
	"transpose.178" [label="transpose.178 \n bf16[1024,32,2,4096]"];
	"reshape.180" [label="reshape.180 \n bf16[32768,2,4096]"];
	"dot.220" [label="dot.220 \n bf16[32768,4096,4096]"];
	"p7.101" [label="p7.101 \n bf16[] parameter(7), frontend_attributes="];
	"broadcast.559" [label="broadcast.559 \n bf16[32768,4096,4096]"];
	"divide.10" [label="divide.10 \n bf16[32768,4096,4096]"];
	"reshape.1810" [label="reshape.1810 \n bf16[1024,32,4096,4096]"];
	"select.229" [label="select.229 \n bf16[1024,32,4096,4096]"];
	"convert.230" [label="convert.230 \n f32[1024,32,4096,4096]"];
	"convert.238" [label="convert.238 \n bf16[1024,32,4096,4096]"];
	"reshape.240" [label="reshape.240 \n bf16[32768,4096,4096]"];
	"reshape.74" [label="reshape.74 \n bf16[4096,1024,96]"];
	"slice.75" [label="slice.75 \n bf16[4096,1024,32]"];
	"reshape.76" [label="reshape.76 \n bf16[4096,1024,32,1]"];
	"transpose.77" [label="transpose.77 \n bf16[1024,32,4096,1]"];
	"reshape.62" [label="reshape.62 \n bf16[32768,4096]"];
	"broadcast.206" [label="broadcast.206 \n bf16[32768,4096,4096]"];
	"multiply.20" [label="multiply.20 \n bf16[32768,4096,4096]"];
	"convert.1" [label="convert.1 \n bf16[32768,4096]"];
	"reshape.242" [label="reshape.242 \n bf16[1024,32,4096,1]"];
	"transpose.243" [label="transpose.243 \n bf16[4096,1024,32,1]"];
	"reshape.245" [label="reshape.245 \n bf16[4194304,32]"];
	"p5.68" [label="p5.68 \n bf16[32,32]"];
	"transpose.69" [label="transpose.69 \n bf16[32,32]"];
	"dot.246" [label="dot.246 \n bf16[4194304,32]"];
	"reshape.247" [label="reshape.247 \n bf16[4096,1024,32]"];
	"add.249" [label="add.249 \n bf16[4096,1024,32]"];
	"p11.278" [label="p11.278 \n bf16[32]"];
	"broadcast.279" [label="broadcast.279 \n bf16[4096,1024,32]"];
	"convert.250" [label="convert.250 \n f32[4096,1024,32]"];
	"multiply.42" [label="multiply.42 \n f32[4096,1024,32]"];
	"constant.252" [label="constant.252 \n f32[] constant(0), metadata="];
	"reduce.258" [label="reduce.258 \n f32[4096,1024]"];
	"broadcast.266" [label="broadcast.266 \n f32[4096,1024]"];
	"multiply.267" [label="multiply.267 \n f32[4096,1024]"];
	"broadcast.561" [label="broadcast.561 \n f32[4096,1024]"];
	"add.4" [label="add.4 \n f32[4096,1024]"];
	"rsqrt.1" [label="rsqrt.1 \n f32[4096,1024]"];
	"broadcast.275" [label="broadcast.275 \n f32[4096,1024,32]"];
	"multiply.276" [label="multiply.276 \n f32[4096,1024,32]"];
	"convert.277" [label="convert.277 \n bf16[4096,1024,32]"];
	"multiply.280" [label="multiply.280 \n bf16[4096,1024,32]"];
	"reshape.305" [label="reshape.305 \n bf16[4194304,32]"];
	"p13.303" [label="p13.303 \n bf16[64,32]"];
	"transpose.304" [label="transpose.304 \n bf16[32,64]"];
	"dot.306" [label="dot.306 \n bf16[4194304,64]"];
	"reshape.309" [label="reshape.309 \n bf16[4096,1024,64]"];
	"slice.310" [label="slice.310 \n bf16[4096,1024,32]"];
	"logistic.311" [label="logistic.311 \n bf16[4096,1024,32]"];
	"multiply.312" [label="multiply.312 \n bf16[4096,1024,32]"];
	"reshape.307" [label="reshape.307 \n bf16[4096,1024,64]"];
	"slice.308" [label="slice.308 \n bf16[4096,1024,32]"];
	"multiply.313" [label="multiply.313 \n bf16[4096,1024,32]"];
	"reshape.314" [label="reshape.314 \n bf16[4194304,32]"];
	"p12.301" [label="p12.301 \n bf16[32,32]"];
	"transpose.302" [label="transpose.302 \n bf16[32,32]"];
	"dot.315" [label="dot.315 \n bf16[4194304,32]"];
	"reshape.316" [label="reshape.316 \n bf16[4096,1024,32]"];
	"add.318" [label="add.318 \n bf16[4096,1024,32]"];
	"iota.6" [label="iota.6 \n s32[4096,4096]"];
	"iota.7" [label="iota.7 \n s32[4096,4096]"];
	"compare.396" [label="compare.396 \n pred[4096,4096]"];
	"constant.387" [label="constant.387 \n bf16[] constant(0), metadata="];
	"broadcast.563" [label="broadcast.563 \n bf16[4096,4096]"];
	"constant.382" [label="constant.382 \n bf16[] constant(1), metadata="];
	"broadcast.566" [label="broadcast.566 \n bf16[4096,4096]"];
	"select.10" [label="select.10 \n bf16[4096,4096]"];
	"convert.39" [label="convert.39 \n pred[4096,4096]"];
	"broadcast.13" [label="broadcast.13 \n pred[1024,32,4096,4096]"];
	"constant.525" [label="constant.525 \n bf16[] constant(-9984), metadata="];
	"broadcast.526" [label="broadcast.526 \n bf16[1024,32,4096,4096]"];
	"p14.347" [label="p14.347 \n bf16[32]"];
	"broadcast.348" [label="broadcast.348 \n bf16[4096,1024,32]"];
	"convert.319" [label="convert.319 \n f32[4096,1024,32]"];
	"multiply.44" [label="multiply.44 \n f32[4096,1024,32]"];
	"constant.321" [label="constant.321 \n f32[] constant(0), metadata="];
	"reduce.327" [label="reduce.327 \n f32[4096,1024]"];
	"broadcast.335" [label="broadcast.335 \n f32[4096,1024]"];
	"multiply.336" [label="multiply.336 \n f32[4096,1024]"];
	"broadcast.569" [label="broadcast.569 \n f32[4096,1024]"];
	"add.5" [label="add.5 \n f32[4096,1024]"];
	"rsqrt.2" [label="rsqrt.2 \n f32[4096,1024]"];
	"broadcast.344" [label="broadcast.344 \n f32[4096,1024,32]"];
	"multiply.345" [label="multiply.345 \n f32[4096,1024,32]"];
	"convert.346" [label="convert.346 \n bf16[4096,1024,32]"];
	"multiply.349" [label="multiply.349 \n bf16[4096,1024,32]"];
	"reshape.374" [label="reshape.374 \n bf16[4194304,32]"];
	"p16.372" [label="p16.372 \n bf16[96,32]"];
	"transpose.373" [label="transpose.373 \n bf16[32,96]"];
	"dot.375" [label="dot.375 \n bf16[4194304,96]"];
	"reshape.504" [label="reshape.504 \n bf16[4096,1024,96]"];
	"slice.505" [label="slice.505 \n bf16[4096,1024,32]"];
	"reshape.506" [label="reshape.506 \n bf16[4096,1024,32,1]"];
	"transpose.507" [label="transpose.507 \n bf16[1024,32,4096,1]"];
	"reshape.512" [label="reshape.512 \n bf16[1024,32,4096]"];
	"broadcast.513" [label="broadcast.513 \n bf16[1024,32,4096,2]"];
	"p18.457" [label="p18.457 \n bf16[1,1,4096,2]"];
	"reshape.461" [label="reshape.461 \n bf16[4096,2]"];
	"iota.8" [label="iota.8 \n s64[1,4096,1]"];
	"gather.462" [label="gather.462 \n bf16[1,4096,2]"];
	"reshape.509" [label="reshape.509 \n bf16[4096,2]"];
	"broadcast.510" [label="broadcast.510 \n bf16[1024,32,4096,2]"];
	"multiply.514" [label="multiply.514 \n bf16[1024,32,4096,2]"];
	"reshape.489" [label="reshape.489 \n bf16[4096,1024,96]"];
	"slice.490" [label="slice.490 \n bf16[4096,1024,32]"];
	"negate.19" [label="negate.19 \n bf16[4096,1024,32]"];
	"reshape.2176" [label="reshape.2176 \n bf16[4096,1024,32,1]"];
	"transpose.11" [label="transpose.11 \n bf16[1024,32,4096,1]"];
	"reshape.500" [label="reshape.500 \n bf16[1024,32,4096]"];
	"broadcast.501" [label="broadcast.501 \n bf16[1024,32,4096,2]"];
	"p17.419" [label="p17.419 \n bf16[1,1,4096,2]"];
	"reshape.423" [label="reshape.423 \n bf16[4096,2]"];
	"iota.9" [label="iota.9 \n s64[1,4096,1]"];
	"gather.424" [label="gather.424 \n bf16[1,4096,2]"];
	"reshape.497" [label="reshape.497 \n bf16[4096,2]"];
	"broadcast.498" [label="broadcast.498 \n bf16[1024,32,4096,2]"];
	"multiply.503" [label="multiply.503 \n bf16[1024,32,4096,2]"];
	"add.515" [label="add.515 \n bf16[1024,32,4096,2]"];
	"reshape.517" [label="reshape.517 \n bf16[32768,4096,2]"];
	"reshape.464" [label="reshape.464 \n bf16[4096,1024,96]"];
	"slice.465" [label="slice.465 \n bf16[4096,1024,32]"];
	"reshape.466" [label="reshape.466 \n bf16[4096,1024,32,1]"];
	"transpose.467" [label="transpose.467 \n bf16[1024,32,4096,1]"];
	"reshape.472" [label="reshape.472 \n bf16[1024,32,4096]"];
	"broadcast.473" [label="broadcast.473 \n bf16[1024,32,4096,2]"];
	"reshape.469" [label="reshape.469 \n bf16[4096,2]"];
	"broadcast.470" [label="broadcast.470 \n bf16[1024,32,4096,2]"];
	"multiply.474" [label="multiply.474 \n bf16[1024,32,4096,2]"];
	"reshape.431" [label="reshape.431 \n bf16[4096,1024,96]"];
	"slice.432" [label="slice.432 \n bf16[4096,1024,32]"];
	"negate.18" [label="negate.18 \n bf16[4096,1024,32]"];
	"reshape.2174" [label="reshape.2174 \n bf16[4096,1024,32,1]"];
	"transpose.9" [label="transpose.9 \n bf16[1024,32,4096,1]"];
	"reshape.442" [label="reshape.442 \n bf16[1024,32,4096]"];
	"broadcast.443" [label="broadcast.443 \n bf16[1024,32,4096,2]"];
	"reshape.439" [label="reshape.439 \n bf16[4096,2]"];
	"broadcast.440" [label="broadcast.440 \n bf16[1024,32,4096,2]"];
	"multiply.445" [label="multiply.445 \n bf16[1024,32,4096,2]"];
	"add.475" [label="add.475 \n bf16[1024,32,4096,2]"];
	"transpose.476" [label="transpose.476 \n bf16[1024,32,2,4096]"];
	"reshape.478" [label="reshape.478 \n bf16[32768,2,4096]"];
	"dot.518" [label="dot.518 \n bf16[32768,4096,4096]"];
	"broadcast.572" [label="broadcast.572 \n bf16[32768,4096,4096]"];
	"divide.11" [label="divide.11 \n bf16[32768,4096,4096]"];
	"reshape.1824" [label="reshape.1824 \n bf16[1024,32,4096,4096]"];
	"select.527" [label="select.527 \n bf16[1024,32,4096,4096]"];
	"convert.528" [label="convert.528 \n f32[1024,32,4096,4096]"];
	"convert.536" [label="convert.536 \n bf16[1024,32,4096,4096]"];
	"reshape.538" [label="reshape.538 \n bf16[32768,4096,4096]"];
	"reshape.376" [label="reshape.376 \n bf16[4096,1024,96]"];
	"slice.377" [label="slice.377 \n bf16[4096,1024,32]"];
	"reshape.378" [label="reshape.378 \n bf16[4096,1024,32,1]"];
	"transpose.379" [label="transpose.379 \n bf16[1024,32,4096,1]"];
	"reshape.143" [label="reshape.143 \n bf16[32768,4096]"];
	"broadcast.207" [label="broadcast.207 \n bf16[32768,4096,4096]"];
	"multiply.25" [label="multiply.25 \n bf16[32768,4096,4096]"];
	"convert.2" [label="convert.2 \n f32[32768,4096,4096]"];
	"reduce.1" [label="reduce.1 \n f32[32768,4096]"];
	"convert.3" [label="convert.3 \n bf16[32768,4096]"];
	"reshape.540" [label="reshape.540 \n bf16[1024,32,4096,1]"];
	"transpose.541" [label="transpose.541 \n bf16[4096,1024,32,1]"];
	"reshape.543" [label="reshape.543 \n bf16[4194304,32]"];
	"p15.370" [label="p15.370 \n bf16[32,32]"];
	"transpose.371" [label="transpose.371 \n bf16[32,32]"];
	"dot.544" [label="dot.544 \n bf16[4194304,32]"];
	"reshape.545" [label="reshape.545 \n bf16[4096,1024,32]"];
	"add.547" [label="add.547 \n bf16[4096,1024,32]"];
	"p19.576" [label="p19.576 \n bf16[32]"];
	"broadcast.577" [label="broadcast.577 \n bf16[4096,1024,32]"];
	"convert.548" [label="convert.548 \n f32[4096,1024,32]"];
	"multiply.45" [label="multiply.45 \n f32[4096,1024,32]"];
	"constant.550" [label="constant.550 \n f32[] constant(0), metadata="];
	"reduce.556" [label="reduce.556 \n f32[4096,1024]"];
	"broadcast.564" [label="broadcast.564 \n f32[4096,1024]"];
	"multiply.565" [label="multiply.565 \n f32[4096,1024]"];
	"broadcast.575" [label="broadcast.575 \n f32[4096,1024]"];
	"add.6" [label="add.6 \n f32[4096,1024]"];
	"rsqrt.3" [label="rsqrt.3 \n f32[4096,1024]"];
	"broadcast.573" [label="broadcast.573 \n f32[4096,1024,32]"];
	"multiply.574" [label="multiply.574 \n f32[4096,1024,32]"];
	"convert.575" [label="convert.575 \n bf16[4096,1024,32]"];
	"multiply.578" [label="multiply.578 \n bf16[4096,1024,32]"];
	"reshape.603" [label="reshape.603 \n bf16[4194304,32]"];
	"p21.601" [label="p21.601 \n bf16[64,32]"];
	"transpose.602" [label="transpose.602 \n bf16[32,64]"];
	"dot.604" [label="dot.604 \n bf16[4194304,64]"];
	"reshape.607" [label="reshape.607 \n bf16[4096,1024,64]"];
	"slice.608" [label="slice.608 \n bf16[4096,1024,32]"];
	"logistic.609" [label="logistic.609 \n bf16[4096,1024,32]"];
	"multiply.610" [label="multiply.610 \n bf16[4096,1024,32]"];
	"reshape.605" [label="reshape.605 \n bf16[4096,1024,64]"];
	"slice.606" [label="slice.606 \n bf16[4096,1024,32]"];
	"multiply.611" [label="multiply.611 \n bf16[4096,1024,32]"];
	"reshape.612" [label="reshape.612 \n bf16[4194304,32]"];
	"p20.599" [label="p20.599 \n bf16[32,32]"];
	"transpose.600" [label="transpose.600 \n bf16[32,32]"];
	"dot.613" [label="dot.613 \n bf16[4194304,32]"];
	"reshape.614" [label="reshape.614 \n bf16[4096,1024,32]"];
	"add.616" [label="add.616 \n bf16[4096,1024,32]"];
	"iota.10" [label="iota.10 \n s32[4096,4096]"];
	"iota.11" [label="iota.11 \n s32[4096,4096]"];
	"compare.694" [label="compare.694 \n pred[4096,4096]"];
	"constant.685" [label="constant.685 \n bf16[] constant(0), metadata="];
	"broadcast.578" [label="broadcast.578 \n bf16[4096,4096]"];
	"constant.680" [label="constant.680 \n bf16[] constant(1), metadata="];
	"broadcast.580" [label="broadcast.580 \n bf16[4096,4096]"];
	"select.11" [label="select.11 \n bf16[4096,4096]"];
	"convert.38" [label="convert.38 \n pred[4096,4096]"];
	"broadcast.20" [label="broadcast.20 \n pred[1024,32,4096,4096]"];
	"constant.823" [label="constant.823 \n bf16[] constant(-9984), metadata="];
	"broadcast.824" [label="broadcast.824 \n bf16[1024,32,4096,4096]"];
	"p22.645" [label="p22.645 \n bf16[32]"];
	"broadcast.646" [label="broadcast.646 \n bf16[4096,1024,32]"];
	"convert.617" [label="convert.617 \n f32[4096,1024,32]"];
	"multiply.46" [label="multiply.46 \n f32[4096,1024,32]"];
	"constant.619" [label="constant.619 \n f32[] constant(0), metadata="];
	"reduce.625" [label="reduce.625 \n f32[4096,1024]"];
	"broadcast.633" [label="broadcast.633 \n f32[4096,1024]"];
	"multiply.634" [label="multiply.634 \n f32[4096,1024]"];
	"broadcast.582" [label="broadcast.582 \n f32[4096,1024]"];
	"add.7" [label="add.7 \n f32[4096,1024]"];
	"rsqrt.4" [label="rsqrt.4 \n f32[4096,1024]"];
	"broadcast.642" [label="broadcast.642 \n f32[4096,1024,32]"];
	"multiply.643" [label="multiply.643 \n f32[4096,1024,32]"];
	"convert.644" [label="convert.644 \n bf16[4096,1024,32]"];
	"multiply.647" [label="multiply.647 \n bf16[4096,1024,32]"];
	"reshape.672" [label="reshape.672 \n bf16[4194304,32]"];
	"p24.670" [label="p24.670 \n bf16[96,32]"];
	"transpose.671" [label="transpose.671 \n bf16[32,96]"];
	"dot.673" [label="dot.673 \n bf16[4194304,96]"];
	"reshape.802" [label="reshape.802 \n bf16[4096,1024,96]"];
	"slice.803" [label="slice.803 \n bf16[4096,1024,32]"];
	"reshape.804" [label="reshape.804 \n bf16[4096,1024,32,1]"];
	"transpose.805" [label="transpose.805 \n bf16[1024,32,4096,1]"];
	"reshape.810" [label="reshape.810 \n bf16[1024,32,4096]"];
	"broadcast.811" [label="broadcast.811 \n bf16[1024,32,4096,2]"];
	"p26.755" [label="p26.755 \n bf16[1,1,4096,2]"];
	"reshape.759" [label="reshape.759 \n bf16[4096,2]"];
	"iota.12" [label="iota.12 \n s64[1,4096,1]"];
	"gather.760" [label="gather.760 \n bf16[1,4096,2]"];
	"reshape.807" [label="reshape.807 \n bf16[4096,2]"];
	"broadcast.808" [label="broadcast.808 \n bf16[1024,32,4096,2]"];
	"multiply.812" [label="multiply.812 \n bf16[1024,32,4096,2]"];
	"reshape.787" [label="reshape.787 \n bf16[4096,1024,96]"];
	"slice.788" [label="slice.788 \n bf16[4096,1024,32]"];
	"negate.21" [label="negate.21 \n bf16[4096,1024,32]"];
	"reshape.2180" [label="reshape.2180 \n bf16[4096,1024,32,1]"];
	"transpose.15" [label="transpose.15 \n bf16[1024,32,4096,1]"];
	"reshape.798" [label="reshape.798 \n bf16[1024,32,4096]"];
	"broadcast.799" [label="broadcast.799 \n bf16[1024,32,4096,2]"];
	"p25.717" [label="p25.717 \n bf16[1,1,4096,2]"];
	"reshape.721" [label="reshape.721 \n bf16[4096,2]"];
	"iota.13" [label="iota.13 \n s64[1,4096,1]"];
	"gather.722" [label="gather.722 \n bf16[1,4096,2]"];
	"reshape.795" [label="reshape.795 \n bf16[4096,2]"];
	"broadcast.796" [label="broadcast.796 \n bf16[1024,32,4096,2]"];
	"multiply.801" [label="multiply.801 \n bf16[1024,32,4096,2]"];
	"add.813" [label="add.813 \n bf16[1024,32,4096,2]"];
	"reshape.815" [label="reshape.815 \n bf16[32768,4096,2]"];
	"reshape.762" [label="reshape.762 \n bf16[4096,1024,96]"];
	"slice.763" [label="slice.763 \n bf16[4096,1024,32]"];
	"reshape.764" [label="reshape.764 \n bf16[4096,1024,32,1]"];
	"transpose.765" [label="transpose.765 \n bf16[1024,32,4096,1]"];
	"reshape.770" [label="reshape.770 \n bf16[1024,32,4096]"];
	"broadcast.771" [label="broadcast.771 \n bf16[1024,32,4096,2]"];
	"reshape.767" [label="reshape.767 \n bf16[4096,2]"];
	"broadcast.768" [label="broadcast.768 \n bf16[1024,32,4096,2]"];
	"multiply.772" [label="multiply.772 \n bf16[1024,32,4096,2]"];
	"reshape.729" [label="reshape.729 \n bf16[4096,1024,96]"];
	"slice.730" [label="slice.730 \n bf16[4096,1024,32]"];
	"negate.20" [label="negate.20 \n bf16[4096,1024,32]"];
	"reshape.2178" [label="reshape.2178 \n bf16[4096,1024,32,1]"];
	"transpose.13" [label="transpose.13 \n bf16[1024,32,4096,1]"];
	"reshape.740" [label="reshape.740 \n bf16[1024,32,4096]"];
	"broadcast.741" [label="broadcast.741 \n bf16[1024,32,4096,2]"];
	"reshape.737" [label="reshape.737 \n bf16[4096,2]"];
	"broadcast.738" [label="broadcast.738 \n bf16[1024,32,4096,2]"];
	"multiply.743" [label="multiply.743 \n bf16[1024,32,4096,2]"];
	"add.773" [label="add.773 \n bf16[1024,32,4096,2]"];
	"transpose.774" [label="transpose.774 \n bf16[1024,32,2,4096]"];
	"reshape.776" [label="reshape.776 \n bf16[32768,2,4096]"];
	"dot.816" [label="dot.816 \n bf16[32768,4096,4096]"];
	"broadcast.584" [label="broadcast.584 \n bf16[32768,4096,4096]"];
	"divide.12" [label="divide.12 \n bf16[32768,4096,4096]"];
	"reshape.1837" [label="reshape.1837 \n bf16[1024,32,4096,4096]"];
	"select.825" [label="select.825 \n bf16[1024,32,4096,4096]"];
	"convert.826" [label="convert.826 \n f32[1024,32,4096,4096]"];
	"convert.834" [label="convert.834 \n bf16[1024,32,4096,4096]"];
	"reshape.836" [label="reshape.836 \n bf16[32768,4096,4096]"];
	"reshape.674" [label="reshape.674 \n bf16[4096,1024,96]"];
	"slice.675" [label="slice.675 \n bf16[4096,1024,32]"];
	"reshape.676" [label="reshape.676 \n bf16[4096,1024,32,1]"];
	"transpose.677" [label="transpose.677 \n bf16[1024,32,4096,1]"];
	"reshape.227" [label="reshape.227 \n bf16[32768,4096]"];
	"broadcast.208" [label="broadcast.208 \n bf16[32768,4096,4096]"];
	"multiply.30" [label="multiply.30 \n bf16[32768,4096,4096]"];
	"convert.4" [label="convert.4 \n f32[32768,4096,4096]"];
	"reduce.2" [label="reduce.2 \n f32[32768,4096]"];
	"convert.5" [label="convert.5 \n bf16[32768,4096]"];
	"reshape.838" [label="reshape.838 \n bf16[1024,32,4096,1]"];
	"transpose.839" [label="transpose.839 \n bf16[4096,1024,32,1]"];
	"reshape.841" [label="reshape.841 \n bf16[4194304,32]"];
	"p23.668" [label="p23.668 \n bf16[32,32]"];
	"transpose.669" [label="transpose.669 \n bf16[32,32]"];
	"dot.842" [label="dot.842 \n bf16[4194304,32]"];
	"reshape.843" [label="reshape.843 \n bf16[4096,1024,32]"];
	"add.845" [label="add.845 \n bf16[4096,1024,32]"];
	"p27.874" [label="p27.874 \n bf16[32]"];
	"broadcast.875" [label="broadcast.875 \n bf16[4096,1024,32]"];
	"convert.846" [label="convert.846 \n f32[4096,1024,32]"];
	"multiply.48" [label="multiply.48 \n f32[4096,1024,32]"];
	"constant.848" [label="constant.848 \n f32[] constant(0), metadata="];
	"reduce.854" [label="reduce.854 \n f32[4096,1024]"];
	"broadcast.862" [label="broadcast.862 \n f32[4096,1024]"];
	"multiply.863" [label="multiply.863 \n f32[4096,1024]"];
	"broadcast.586" [label="broadcast.586 \n f32[4096,1024]"];
	"add.8" [label="add.8 \n f32[4096,1024]"];
	"rsqrt.5" [label="rsqrt.5 \n f32[4096,1024]"];
	"broadcast.871" [label="broadcast.871 \n f32[4096,1024,32]"];
	"multiply.872" [label="multiply.872 \n f32[4096,1024,32]"];
	"convert.873" [label="convert.873 \n bf16[4096,1024,32]"];
	"multiply.876" [label="multiply.876 \n bf16[4096,1024,32]"];
	"reshape.901" [label="reshape.901 \n bf16[4194304,32]"];
	"p29.899" [label="p29.899 \n bf16[64,32]"];
	"transpose.900" [label="transpose.900 \n bf16[32,64]"];
	"dot.902" [label="dot.902 \n bf16[4194304,64]"];
	"reshape.905" [label="reshape.905 \n bf16[4096,1024,64]"];
	"slice.906" [label="slice.906 \n bf16[4096,1024,32]"];
	"logistic.907" [label="logistic.907 \n bf16[4096,1024,32]"];
	"multiply.908" [label="multiply.908 \n bf16[4096,1024,32]"];
	"reshape.903" [label="reshape.903 \n bf16[4096,1024,64]"];
	"slice.904" [label="slice.904 \n bf16[4096,1024,32]"];
	"multiply.909" [label="multiply.909 \n bf16[4096,1024,32]"];
	"reshape.910" [label="reshape.910 \n bf16[4194304,32]"];
	"p28.897" [label="p28.897 \n bf16[32,32]"];
	"transpose.898" [label="transpose.898 \n bf16[32,32]"];
	"dot.911" [label="dot.911 \n bf16[4194304,32]"];
	"reshape.912" [label="reshape.912 \n bf16[4096,1024,32]"];
	"add.914" [label="add.914 \n bf16[4096,1024,32]"];
	"iota.14" [label="iota.14 \n s32[4096,4096]"];
	"iota.15" [label="iota.15 \n s32[4096,4096]"];
	"compare.992" [label="compare.992 \n pred[4096,4096]"];
	"constant.983" [label="constant.983 \n bf16[] constant(0), metadata="];
	"broadcast.588" [label="broadcast.588 \n bf16[4096,4096]"];
	"constant.978" [label="constant.978 \n bf16[] constant(1), metadata="];
	"broadcast.590" [label="broadcast.590 \n bf16[4096,4096]"];
	"select.12" [label="select.12 \n bf16[4096,4096]"];
	"convert.37" [label="convert.37 \n pred[4096,4096]"];
	"broadcast.27" [label="broadcast.27 \n pred[1024,32,4096,4096]"];
	"constant.1121" [label="constant.1121 \n bf16[] constant(-9984), metadata="];
	"broadcast.1122" [label="broadcast.1122 \n bf16[1024,32,4096,4096]"];
	"p30.943" [label="p30.943 \n bf16[32]"];
	"broadcast.944" [label="broadcast.944 \n bf16[4096,1024,32]"];
	"convert.915" [label="convert.915 \n f32[4096,1024,32]"];
	"multiply.49" [label="multiply.49 \n f32[4096,1024,32]"];
	"constant.917" [label="constant.917 \n f32[] constant(0), metadata="];
	"reduce.923" [label="reduce.923 \n f32[4096,1024]"];
	"broadcast.931" [label="broadcast.931 \n f32[4096,1024]"];
	"multiply.932" [label="multiply.932 \n f32[4096,1024]"];
	"broadcast.594" [label="broadcast.594 \n f32[4096,1024]"];
	"add.9" [label="add.9 \n f32[4096,1024]"];
	"rsqrt.6" [label="rsqrt.6 \n f32[4096,1024]"];
	"broadcast.940" [label="broadcast.940 \n f32[4096,1024,32]"];
	"multiply.941" [label="multiply.941 \n f32[4096,1024,32]"];
	"convert.942" [label="convert.942 \n bf16[4096,1024,32]"];
	"multiply.945" [label="multiply.945 \n bf16[4096,1024,32]"];
	"reshape.970" [label="reshape.970 \n bf16[4194304,32]"];
	"p32.968" [label="p32.968 \n bf16[96,32]"];
	"transpose.969" [label="transpose.969 \n bf16[32,96]"];
	"dot.971" [label="dot.971 \n bf16[4194304,96]"];
	"reshape.1100" [label="reshape.1100 \n bf16[4096,1024,96]"];
	"slice.1101" [label="slice.1101 \n bf16[4096,1024,32]"];
	"reshape.1102" [label="reshape.1102 \n bf16[4096,1024,32,1]"];
	"transpose.1103" [label="transpose.1103 \n bf16[1024,32,4096,1]"];
	"reshape.1108" [label="reshape.1108 \n bf16[1024,32,4096]"];
	"broadcast.1109" [label="broadcast.1109 \n bf16[1024,32,4096,2]"];
	"p34.1053" [label="p34.1053 \n bf16[1,1,4096,2]"];
	"reshape.1057" [label="reshape.1057 \n bf16[4096,2]"];
	"iota.16" [label="iota.16 \n s64[1,4096,1]"];
	"gather.1058" [label="gather.1058 \n bf16[1,4096,2]"];
	"reshape.1105" [label="reshape.1105 \n bf16[4096,2]"];
	"broadcast.1106" [label="broadcast.1106 \n bf16[1024,32,4096,2]"];
	"multiply.1110" [label="multiply.1110 \n bf16[1024,32,4096,2]"];
	"reshape.1085" [label="reshape.1085 \n bf16[4096,1024,96]"];
	"slice.1086" [label="slice.1086 \n bf16[4096,1024,32]"];
	"negate.23" [label="negate.23 \n bf16[4096,1024,32]"];
	"reshape.2184" [label="reshape.2184 \n bf16[4096,1024,32,1]"];
	"transpose.20" [label="transpose.20 \n bf16[1024,32,4096,1]"];
	"reshape.1096" [label="reshape.1096 \n bf16[1024,32,4096]"];
	"broadcast.1097" [label="broadcast.1097 \n bf16[1024,32,4096,2]"];
	"p33.1015" [label="p33.1015 \n bf16[1,1,4096,2]"];
	"reshape.1019" [label="reshape.1019 \n bf16[4096,2]"];
	"iota.17" [label="iota.17 \n s64[1,4096,1]"];
	"gather.1020" [label="gather.1020 \n bf16[1,4096,2]"];
	"reshape.1093" [label="reshape.1093 \n bf16[4096,2]"];
	"broadcast.1094" [label="broadcast.1094 \n bf16[1024,32,4096,2]"];
	"multiply.1099" [label="multiply.1099 \n bf16[1024,32,4096,2]"];
	"add.1111" [label="add.1111 \n bf16[1024,32,4096,2]"];
	"reshape.1113" [label="reshape.1113 \n bf16[32768,4096,2]"];
	"reshape.1060" [label="reshape.1060 \n bf16[4096,1024,96]"];
	"slice.1061" [label="slice.1061 \n bf16[4096,1024,32]"];
	"reshape.1062" [label="reshape.1062 \n bf16[4096,1024,32,1]"];
	"transpose.1063" [label="transpose.1063 \n bf16[1024,32,4096,1]"];
	"reshape.1068" [label="reshape.1068 \n bf16[1024,32,4096]"];
	"broadcast.1069" [label="broadcast.1069 \n bf16[1024,32,4096,2]"];
	"reshape.1065" [label="reshape.1065 \n bf16[4096,2]"];
	"broadcast.1066" [label="broadcast.1066 \n bf16[1024,32,4096,2]"];
	"multiply.1070" [label="multiply.1070 \n bf16[1024,32,4096,2]"];
	"reshape.1027" [label="reshape.1027 \n bf16[4096,1024,96]"];
	"slice.1028" [label="slice.1028 \n bf16[4096,1024,32]"];
	"negate.22" [label="negate.22 \n bf16[4096,1024,32]"];
	"reshape.2182" [label="reshape.2182 \n bf16[4096,1024,32,1]"];
	"transpose.18" [label="transpose.18 \n bf16[1024,32,4096,1]"];
	"reshape.1038" [label="reshape.1038 \n bf16[1024,32,4096]"];
	"broadcast.1039" [label="broadcast.1039 \n bf16[1024,32,4096,2]"];
	"reshape.1035" [label="reshape.1035 \n bf16[4096,2]"];
	"broadcast.1036" [label="broadcast.1036 \n bf16[1024,32,4096,2]"];
	"multiply.1041" [label="multiply.1041 \n bf16[1024,32,4096,2]"];
	"add.1071" [label="add.1071 \n bf16[1024,32,4096,2]"];
	"transpose.1072" [label="transpose.1072 \n bf16[1024,32,2,4096]"];
	"reshape.1074" [label="reshape.1074 \n bf16[32768,2,4096]"];
	"dot.1114" [label="dot.1114 \n bf16[32768,4096,4096]"];
	"broadcast.597" [label="broadcast.597 \n bf16[32768,4096,4096]"];
	"divide.13" [label="divide.13 \n bf16[32768,4096,4096]"];
	"reshape.1856" [label="reshape.1856 \n bf16[1024,32,4096,4096]"];
	"select.1123" [label="select.1123 \n bf16[1024,32,4096,4096]"];
	"convert.1124" [label="convert.1124 \n f32[1024,32,4096,4096]"];
	"convert.1132" [label="convert.1132 \n bf16[1024,32,4096,4096]"];
	"reshape.1134" [label="reshape.1134 \n bf16[32768,4096,4096]"];
	"reshape.972" [label="reshape.972 \n bf16[4096,1024,96]"];
	"slice.973" [label="slice.973 \n bf16[4096,1024,32]"];
	"reshape.974" [label="reshape.974 \n bf16[4096,1024,32,1]"];
	"transpose.975" [label="transpose.975 \n bf16[1024,32,4096,1]"];
	"reshape.293" [label="reshape.293 \n bf16[32768,4096]"];
	"broadcast.209" [label="broadcast.209 \n bf16[32768,4096,4096]"];
	"multiply.36" [label="multiply.36 \n bf16[32768,4096,4096]"];
	"convert.6" [label="convert.6 \n f32[32768,4096,4096]"];
	"reduce.3" [label="reduce.3 \n f32[32768,4096]"];
	"convert.7" [label="convert.7 \n bf16[32768,4096]"];
	"reshape.1136" [label="reshape.1136 \n bf16[1024,32,4096,1]"];
	"transpose.1137" [label="transpose.1137 \n bf16[4096,1024,32,1]"];
	"reshape.1139" [label="reshape.1139 \n bf16[4194304,32]"];
	"p31.966" [label="p31.966 \n bf16[32,32]"];
	"transpose.967" [label="transpose.967 \n bf16[32,32]"];
	"dot.1140" [label="dot.1140 \n bf16[4194304,32]"];
	"reshape.1141" [label="reshape.1141 \n bf16[4096,1024,32]"];
	"add.1143" [label="add.1143 \n bf16[4096,1024,32]"];
	"p35.1172" [label="p35.1172 \n bf16[32]"];
	"broadcast.1173" [label="broadcast.1173 \n bf16[4096,1024,32]"];
	"convert.1144" [label="convert.1144 \n f32[4096,1024,32]"];
	"multiply.50" [label="multiply.50 \n f32[4096,1024,32]"];
	"constant.1146" [label="constant.1146 \n f32[] constant(0), metadata="];
	"reduce.1152" [label="reduce.1152 \n f32[4096,1024]"];
	"broadcast.1160" [label="broadcast.1160 \n f32[4096,1024]"];
	"multiply.1161" [label="multiply.1161 \n f32[4096,1024]"];
	"broadcast.600" [label="broadcast.600 \n f32[4096,1024]"];
	"add.10" [label="add.10 \n f32[4096,1024]"];
	"rsqrt.7" [label="rsqrt.7 \n f32[4096,1024]"];
	"broadcast.1169" [label="broadcast.1169 \n f32[4096,1024,32]"];
	"multiply.1170" [label="multiply.1170 \n f32[4096,1024,32]"];
	"convert.1171" [label="convert.1171 \n bf16[4096,1024,32]"];
	"multiply.1174" [label="multiply.1174 \n bf16[4096,1024,32]"];
	"reshape.1286" [label="reshape.1286 \n bf16[4194304,32]"];
	"p42.1284" [label="p42.1284 \n bf16[64,32]"];
	"transpose.1285" [label="transpose.1285 \n bf16[32,64]"];
	"dot.1287" [label="dot.1287 \n bf16[4194304,64]"];
	"reshape.1290" [label="reshape.1290 \n bf16[4096,1024,64]"];
	"slice.1291" [label="slice.1291 \n bf16[4096,1024,32]"];
	"logistic.1292" [label="logistic.1292 \n bf16[4096,1024,32]"];
	"multiply.1293" [label="multiply.1293 \n bf16[4096,1024,32]"];
	"reshape.1288" [label="reshape.1288 \n bf16[4096,1024,64]"];
	"slice.1289" [label="slice.1289 \n bf16[4096,1024,32]"];
	"multiply.1294" [label="multiply.1294 \n bf16[4096,1024,32]"];
	"reshape.1295" [label="reshape.1295 \n bf16[4194304,32]"];
	"p41.1282" [label="p41.1282 \n bf16[32,32]"];
	"transpose.1283" [label="transpose.1283 \n bf16[32,32]"];
	"dot.1296" [label="dot.1296 \n bf16[4194304,32]"];
	"reshape.1297" [label="reshape.1297 \n bf16[4096,1024,32]"];
	"add.1299" [label="add.1299 \n bf16[4096,1024,32]"];
	"convert.1300" [label="convert.1300 \n f32[4096,1024,32]"];
	"multiply.51" [label="multiply.51 \n f32[4096,1024,32]"];
	"constant.1302" [label="constant.1302 \n f32[] constant(0), metadata="];
	"reduce.1308" [label="reduce.1308 \n f32[4096,1024]"];
	"broadcast.1316" [label="broadcast.1316 \n f32[4096,1024]"];
	"multiply.1317" [label="multiply.1317 \n f32[4096,1024]"];
	"broadcast.602" [label="broadcast.602 \n f32[4096,1024]"];
	"add.11" [label="add.11 \n f32[4096,1024]"];
	"rsqrt.8" [label="rsqrt.8 \n f32[4096,1024]"];
	"broadcast.1325" [label="broadcast.1325 \n f32[4096,1024,32]"];
	"multiply.1326" [label="multiply.1326 \n f32[4096,1024,32]"];
	"convert.1327" [label="convert.1327 \n bf16[4096,1024,32]"];
	"multiply.1330" [label="multiply.1330 \n bf16[4096,1024,32]"];
	"transpose.1401" [label="transpose.1401 \n bf16[1024,4096,32]"];
	"reshape.1402" [label="reshape.1402 \n bf16[4194304,32]"];
	"p48.1399" [label="p48.1399 \n bf16[32000,32]"];
	"transpose.1400" [label="transpose.1400 \n bf16[32,32000]"];
	"dot.1403" [label="dot.1403 \n bf16[4194304,32000]"];
	"convert.286" [label="convert.286 \n f32[4194304,32000]"];
	"reshape.2820" [label="reshape.2820 \n f32[1024,4096,32000]"];
	"slice.1407" [label="slice.1407 \n f32[1024,4095,32000]"];
	"reshape.1408" [label="reshape.1408 \n f32[4193280,32000]"];
	"constant.1409" [label="constant.1409 \n f32[] constant(-3.40282347e+38), metadata="];
	"reduce.1415" [label="reduce.1415 \n f32[4193280]"];
	"broadcast.1438" [label="broadcast.1438 \n f32[4193280,32000]"];
	"subtract.1439" [label="subtract.1439 \n f32[4193280,32000]"];
	"reshape.1440" [label="reshape.1440 \n f32[1024,4095,32000]"];
	"constant.1445" [label="constant.1445 \n f32[] constant(0), metadata="];
	"pad.1446" [label="pad.1446 \n f32[1024,4096,32000]"];
	"select.1448" [label="select.1448 \n f32[1024,4096,32000]"];
	"slice.1450" [label="slice.1450 \n f32[1024,4095,32000]"];
	"exponential.0" [label="exponential.0 \n f32[1024,4095,32000]"];
	"reshape.1873" [label="reshape.1873 \n f32[4193280,32000]"];
	"constant.1453" [label="constant.1453 \n f32[] constant(0), metadata="];
	"reduce.1459" [label="reduce.1459 \n f32[4193280]"];
	"broadcast.1463" [label="broadcast.1463 \n f32[4193280,32000]"];
	"divide.1464" [label="divide.1464 \n f32[4193280,32000]"];
	"iota.19" [label="iota.19 \n s64[4193280,1]"];
	"p46.1349" [label="p46.1349 \n s64[1024,4096]"];
	"slice.1350" [label="slice.1350 \n s64[1024,4095]"];
	"reshape.1351" [label="reshape.1351 \n s64[4193280]"];
	"constant.1354" [label="constant.1354 \n s64[] constant(0), metadata="];
	"broadcast.1355" [label="broadcast.1355 \n s64[4193280]"];
	"compare.1356" [label="compare.1356 \n pred[4193280]"];
	"convert.1357" [label="convert.1357 \n u8[4193280]"];
	"broadcast.1352" [label="broadcast.1352 \n s64[4193280]"];
	"compare.1353" [label="compare.1353 \n pred[4193280]"];
	"convert.1358" [label="convert.1358 \n u8[4193280]"];
	"and.1359" [label="and.1359 \n u8[4193280]"];
	"convert.1360" [label="convert.1360 \n pred[4193280]"];
	"broadcast.35" [label="broadcast.35 \n s64[4193280]"];
	"constant.1472" [label="constant.1472 \n s64[] constant(0), metadata="];
	"broadcast.1473" [label="broadcast.1473 \n s64[4193280]"];
	"compare.1474" [label="compare.1474 \n pred[4193280]"];
	"broadcast.1470" [label="broadcast.1470 \n s64[4193280]"];
	"add.1471" [label="add.1471 \n s64[4193280]"];
	"select.1475" [label="select.1475 \n s64[4193280]"];
	"reshape.1486" [label="reshape.1486 \n s64[4193280,1]"];
	"concatenate.1487" [label="concatenate.1487 \n s64[4193280,2]"];
	"iota.20" [label="iota.20 \n s64[4193280,1]"];
	"constant.1376" [label="constant.1376 \n s64[] constant(0), metadata="];
	"broadcast.1377" [label="broadcast.1377 \n s64[4193280]"];
	"compare.1378" [label="compare.1378 \n pred[4193280]"];
	"broadcast.1374" [label="broadcast.1374 \n s64[4193280]"];
	"add.1375" [label="add.1375 \n s64[4193280]"];
	"select.1379" [label="select.1379 \n s64[4193280]"];
	"reshape.1392" [label="reshape.1392 \n s64[4193280,1]"];
	"concatenate.1393" [label="concatenate.1393 \n s64[4193280,2]"];
	"gather.1465" [label="gather.1465 \n f32[4193280]"];
	"convert.1362" [label="convert.1362 \n f32[4193280]"];
	"subtract.1466" [label="subtract.1466 \n f32[4193280]"];
	"scatter.1492" [label="scatter.1492 \n f32[4193280,32000]"];
	"p44.1333" [label="p44.1333 \n f32[] parameter(44), frontend_attributes="];
	"divide.0" [label="divide.0 \n f32[] divide(f32[] %constant.95, f32[] %p44.1333), metadata="];
	"broadcast.1496" [label="broadcast.1496 \n f32[4193280,32000]"];
	"multiply.1497" [label="multiply.1497 \n f32[4193280,32000]"];
	"reshape.1498" [label="reshape.1498 \n f32[1024,4095,32000]"];
	"constant.1512" [label="constant.1512 \n f32[] constant(0), metadata="];
	"pad.1513" [label="pad.1513 \n f32[1024,4096,32000]"];
	"constant.1504" [label="constant.1504 \n f32[] constant(0), metadata="];
	"broadcast.1508" [label="broadcast.1508 \n f32[1024,4096,32000]"];
	"select.1515" [label="select.1515 \n f32[1024,4096,32000]"];
	"convert.1516" [label="convert.1516 \n bf16[1024,4096,32000]"];
	"reshape.1583" [label="reshape.1583 \n bf16[4194304,32000]"];
	"dot.1584" [label="dot.1584 \n bf16[4194304,32]"];
	"reshape.1585" [label="reshape.1585 \n bf16[1024,4096,32]"];
	"transpose.1586" [label="transpose.1586 \n bf16[4096,1024,32]"];
	"broadcast.1587" [label="broadcast.1587 \n bf16[4096,1024,32]"];
	"multiply.1588" [label="multiply.1588 \n bf16[4096,1024,32]"];
	"convert.1589" [label="convert.1589 \n f32[4096,1024,32]"];
	"broadcast.1610" [label="broadcast.1610 \n f32[4096,1024,32]"];
	"multiply.1611" [label="multiply.1611 \n f32[4096,1024,32]"];
	"multiply.1590" [label="multiply.1590 \n f32[4096,1024,32]"];
	"constant.1591" [label="constant.1591 \n f32[] constant(0), metadata="];
	"reduce.1597" [label="reduce.1597 \n f32[4096,1024]"];
	"p52.1578" [label="p52.1578 \n f32[] parameter(52), frontend_attributes="];
	"broadcast.604" [label="broadcast.604 \n f32[4096,1024]"];
	"multiply.79" [label="multiply.79 \n f32[4096,1024]"];
	"reshape.1876" [label="reshape.1876 \n f32[4096,1024,1]"];
	"reshape.2131" [label="reshape.2131 \n f32[4096,1024,1]"];
	"multiply.52" [label="multiply.52 \n f32[4096,1024,1]"];
	"multiply.53" [label="multiply.53 \n f32[4096,1024,1]"];
	"multiply.1600" [label="multiply.1600 \n f32[4096,1024,1]"];
	"p51.1571" [label="p51.1571 \n f32[] parameter(51), frontend_attributes="];
	"broadcast.606" [label="broadcast.606 \n f32[4096,1024,1]"];
	"divide.18" [label="divide.18 \n f32[4096,1024,1]"];
	"reshape.1977" [label="reshape.1977 \n f32[4096,1024]"];
	"broadcast.48" [label="broadcast.48 \n f32[4096,1024,32]"];
	"p50.1559" [label="p50.1559 \n f32[] parameter(50), frontend_attributes="];
	"broadcast.1563" [label="broadcast.1563 \n f32[4096,1024,32]"];
	"multiply.1570" [label="multiply.1570 \n f32[4096,1024,32]"];
	"multiply.1607" [label="multiply.1607 \n f32[4096,1024,32]"];
	"add.1612" [label="add.1612 \n f32[4096,1024,32]"];
	"convert.1613" [label="convert.1613 \n bf16[4096,1024,32]"];
	"reshape.1651" [label="reshape.1651 \n bf16[4194304,32]"];
	"dot.1652" [label="dot.1652 \n bf16[4194304,32]"];
	"reshape.1653" [label="reshape.1653 \n bf16[4096,1024,32]"];
	"tuple.1654" [label="tuple.1654 \n (bf16[4096,1024,32]"];
	"constant.96" [label="constant.96 \n pred[64]"];
	"broadcast.49" [label="broadcast.49 \n pred[4096,1024,64]"];
	"constant.1672" [label="constant.1672 \n bf16[] constant(0), metadata="];
	"pad.1673" [label="pad.1673 \n bf16[4096,1024,64]"];
	"constant.97" [label="constant.97 \n pred[64]"];
	"broadcast.50" [label="broadcast.50 \n pred[4096,1024,64]"];
	"constant.1663" [label="constant.1663 \n bf16[] constant(0), metadata="];
	"pad.1664" [label="pad.1664 \n bf16[4096,1024,64]"];
	"reshape.1659" [label="reshape.1659 \n bf16[4096,1024,64]"];
	"select.1666" [label="select.1666 \n bf16[4096,1024,64]"];
	"select.1675" [label="select.1675 \n bf16[4096,1024,64]"];
	"slice.1685" [label="slice.1685 \n bf16[4096,1024,32]"];
	"multiply.1686" [label="multiply.1686 \n bf16[4096,1024,32]"];
	"logistic.0" [label="logistic.0 \n bf16[4096,1024,64]"];
	"slice.1" [label="slice.1 \n bf16[4096,1024,32]"];
	"constant.1687" [label="constant.1687 \n bf16[] constant(1), metadata="];
	"broadcast.1692" [label="broadcast.1692 \n bf16[4096,1024,32]"];
	"slice.1678" [label="slice.1678 \n bf16[4096,1024,32]"];
	"broadcast.1689" [label="broadcast.1689 \n bf16[4096,1024,32]"];
	"subtract.1690" [label="subtract.1690 \n bf16[4096,1024,32]"];
	"multiply.1691" [label="multiply.1691 \n bf16[4096,1024,32]"];
	"add.1693" [label="add.1693 \n bf16[4096,1024,32]"];
	"multiply.1694" [label="multiply.1694 \n bf16[4096,1024,32]"];
	"multiply.1695" [label="multiply.1695 \n bf16[4096,1024,32]"];
	"slice.0" [label="slice.0 \n bf16[4096,1024,32]"];
	"multiply.1680" [label="multiply.1680 \n bf16[4096,1024,32]"];
	"multiply.1683" [label="multiply.1683 \n bf16[4096,1024,32]"];
	"concatenate.1696" [label="concatenate.1696 \n bf16[4096,1024,64]"];
	"reshape.1768" [label="reshape.1768 \n bf16[4194304,64]"];
	"dot.1769" [label="dot.1769 \n bf16[4194304,32]"];
	"reshape.1770" [label="reshape.1770 \n bf16[4096,1024,32]"];
	"broadcast.1783" [label="broadcast.1783 \n bf16[4096,1024,32]"];
	"multiply.1784" [label="multiply.1784 \n bf16[4096,1024,32]"];
	"convert.1785" [label="convert.1785 \n f32[4096,1024,32]"];
	"broadcast.1806" [label="broadcast.1806 \n f32[4096,1024,32]"];
	"multiply.1807" [label="multiply.1807 \n f32[4096,1024,32]"];
	"multiply.1786" [label="multiply.1786 \n f32[4096,1024,32]"];
	"constant.1787" [label="constant.1787 \n f32[] constant(0), metadata="];
	"reduce.1793" [label="reduce.1793 \n f32[4096,1024]"];
	"broadcast.608" [label="broadcast.608 \n f32[4096,1024]"];
	"multiply.80" [label="multiply.80 \n f32[4096,1024]"];
	"reshape.1879" [label="reshape.1879 \n f32[4096,1024,1]"];
	"reshape.2127" [label="reshape.2127 \n f32[4096,1024,1]"];
	"multiply.54" [label="multiply.54 \n f32[4096,1024,1]"];
	"multiply.55" [label="multiply.55 \n f32[4096,1024,1]"];
	"multiply.1796" [label="multiply.1796 \n f32[4096,1024,1]"];
	"broadcast.610" [label="broadcast.610 \n f32[4096,1024,1]"];
	"divide.19" [label="divide.19 \n f32[4096,1024,1]"];
	"reshape.1980" [label="reshape.1980 \n f32[4096,1024]"];
	"broadcast.54" [label="broadcast.54 \n f32[4096,1024,32]"];
	"broadcast.1750" [label="broadcast.1750 \n f32[4096,1024,32]"];
	"multiply.1757" [label="multiply.1757 \n f32[4096,1024,32]"];
	"multiply.1803" [label="multiply.1803 \n f32[4096,1024,32]"];
	"add.1808" [label="add.1808 \n f32[4096,1024,32]"];
	"convert.1809" [label="convert.1809 \n bf16[4096,1024,32]"];
	"add.1811" [label="add.1811 \n bf16[4096,1024,32]"];
	"iota.21" [label="iota.21 \n s32[4096,4096]"];
	"iota.22" [label="iota.22 \n s32[4096,4096]"];
	"compare.1881" [label="compare.1881 \n pred[4096,4096]"];
	"constant.1872" [label="constant.1872 \n bf16[] constant(0), metadata="];
	"broadcast.612" [label="broadcast.612 \n bf16[4096,4096]"];
	"constant.1867" [label="constant.1867 \n bf16[] constant(1), metadata="];
	"broadcast.614" [label="broadcast.614 \n bf16[4096,4096]"];
	"select.13" [label="select.13 \n bf16[4096,4096]"];
	"convert.35" [label="convert.35 \n pred[4096,4096]"];
	"broadcast.57" [label="broadcast.57 \n pred[1024,32,4096,4096]"];
	"constant.1961" [label="constant.1961 \n bf16[] constant(0), metadata="];
	"broadcast.1962" [label="broadcast.1962 \n bf16[1024,32,4096,4096]"];
	"reshape.1849" [label="reshape.1849 \n bf16[4194304,32]"];
	"dot.1850" [label="dot.1850 \n bf16[4194304,32]"];
	"reshape.1852" [label="reshape.1852 \n bf16[4096,1024,32,1]"];
	"transpose.1853" [label="transpose.1853 \n bf16[1024,32,4096,1]"];
	"tuple.1854" [label="tuple.1854 \n (bf16[1024,32,4096,2]"];
	"reshape.412" [label="reshape.412 \n bf16[32768,4096]"];
	"broadcast.303" [label="broadcast.303 \n bf16[32768,4096,4096]"];
	"constant.98" [label="constant.98 \n pred[96]"];
	"broadcast.58" [label="broadcast.58 \n pred[4096,1024,96]"];
	"transpose.1927" [label="transpose.1927 \n bf16[4096,1024,32,1]"];
	"reshape.1928" [label="reshape.1928 \n bf16[4096,1024,32]"];
	"constant.1933" [label="constant.1933 \n bf16[] constant(0), metadata="];
	"pad.1934" [label="pad.1934 \n bf16[4096,1024,96]"];
	"reshape.1929" [label="reshape.1929 \n bf16[4096,1024,96]"];
	"select.1936" [label="select.1936 \n bf16[4096,1024,96]"];
	"slice.1939" [label="slice.1939 \n bf16[4096,1024,32]"];
	"reshape.1940" [label="reshape.1940 \n bf16[4096,1024,32,1]"];
	"transpose.1941" [label="transpose.1941 \n bf16[1024,32,4096,1]"];
	"reshape.413" [label="reshape.413 \n bf16[32768,4096]"];
	"broadcast.304" [label="broadcast.304 \n bf16[32768,4096,4096]"];
	"multiply.56" [label="multiply.56 \n bf16[32768,4096,4096]"];
	"convert.287" [label="convert.287 \n f32[32768,4096,4096]"];
	"reshape.2822" [label="reshape.2822 \n f32[1024,32,4096,4096]"];
	"broadcast.61" [label="broadcast.61 \n pred[1024,32,4096,4096]"];
	"constant.1900" [label="constant.1900 \n bf16[] constant(-9984), metadata="];
	"broadcast.1901" [label="broadcast.1901 \n bf16[1024,32,4096,4096]"];
	"reshape.1892" [label="reshape.1892 \n bf16[32768,4096,2]"];
	"transpose.1888" [label="transpose.1888 \n bf16[1024,32,2,4096]"];
	"reshape.1890" [label="reshape.1890 \n bf16[32768,2,4096]"];
	"dot.1893" [label="dot.1893 \n bf16[32768,4096,4096]"];
	"broadcast.616" [label="broadcast.616 \n bf16[32768,4096,4096]"];
	"divide.14" [label="divide.14 \n bf16[32768,4096,4096]"];
	"reshape.1887" [label="reshape.1887 \n bf16[1024,32,4096,4096]"];
	"select.1902" [label="select.1902 \n bf16[1024,32,4096,4096]"];
	"convert.1903" [label="convert.1903 \n f32[1024,32,4096,4096]"];
	"convert.1957" [label="convert.1957 \n bf16[1024,32,4096,4096]"];
	"select.1963" [label="select.1963 \n bf16[1024,32,4096,4096]"];
	"broadcast.1964" [label="broadcast.1964 \n bf16[1024,32,4096,4096]"];
	"divide.1965" [label="divide.1965 \n bf16[1024,32,4096,4096]"];
	"reshape.1966" [label="reshape.1966 \n bf16[32768,4096,4096]"];
	"reshape.2032" [label="reshape.2032 \n bf16[32768,2,4096]"];
	"transpose.2033" [label="transpose.2033 \n bf16[32768,4096,2]"];
	"dot.2034" [label="dot.2034 \n bf16[32768,4096,2]"];
	"reshape.2035" [label="reshape.2035 \n bf16[1024,32,4096,2]"];
	"reshape.2055" [label="reshape.2055 \n bf16[4096,2]"];
	"broadcast.2056" [label="broadcast.2056 \n bf16[1024,32,4096,2]"];
	"multiply.2057" [label="multiply.2057 \n bf16[1024,32,4096,2]"];
	"constant.2058" [label="constant.2058 \n bf16[] constant(0), metadata="];
	"reduce.2064" [label="reduce.2064 \n bf16[1024,32,4096]"];
	"negate.9" [label="negate.9 \n bf16[1024,32,4096]"];
	"reshape.2037" [label="reshape.2037 \n bf16[4096,2]"];
	"broadcast.2038" [label="broadcast.2038 \n bf16[1024,32,4096,2]"];
	"multiply.2039" [label="multiply.2039 \n bf16[1024,32,4096,2]"];
	"constant.2040" [label="constant.2040 \n bf16[] constant(0), metadata="];
	"reduce.2046" [label="reduce.2046 \n bf16[1024,32,4096]"];
	"add.13" [label="add.13 \n bf16[1024,32,4096]"];
	"reshape.2142" [label="reshape.2142 \n bf16[1024,32,4096,1]"];
	"transpose.2089" [label="transpose.2089 \n bf16[4096,1024,32,1]"];
	"reshape.2090" [label="reshape.2090 \n bf16[4096,1024,32]"];
	"reshape.1967" [label="reshape.1967 \n bf16[32768,4096,2]"];
	"transpose.1968" [label="transpose.1968 \n bf16[32768,2,4096]"];
	"dot.1969" [label="dot.1969 \n bf16[32768,2,4096]"];
	"reshape.1970" [label="reshape.1970 \n bf16[1024,32,2,4096]"];
	"transpose.1971" [label="transpose.1971 \n bf16[1024,32,4096,2]"];
	"reshape.1991" [label="reshape.1991 \n bf16[4096,2]"];
	"broadcast.1992" [label="broadcast.1992 \n bf16[1024,32,4096,2]"];
	"multiply.1993" [label="multiply.1993 \n bf16[1024,32,4096,2]"];
	"constant.1994" [label="constant.1994 \n bf16[] constant(0), metadata="];
	"reduce.2000" [label="reduce.2000 \n bf16[1024,32,4096]"];
	"negate.8" [label="negate.8 \n bf16[1024,32,4096]"];
	"reshape.1973" [label="reshape.1973 \n bf16[4096,2]"];
	"broadcast.1974" [label="broadcast.1974 \n bf16[1024,32,4096,2]"];
	"multiply.1975" [label="multiply.1975 \n bf16[1024,32,4096,2]"];
	"constant.1976" [label="constant.1976 \n bf16[] constant(0), metadata="];
	"reduce.1982" [label="reduce.1982 \n bf16[1024,32,4096]"];
	"add.12" [label="add.12 \n bf16[1024,32,4096]"];
	"reshape.2136" [label="reshape.2136 \n bf16[1024,32,4096,1]"];
	"transpose.2025" [label="transpose.2025 \n bf16[4096,1024,32,1]"];
	"reshape.2026" [label="reshape.2026 \n bf16[4096,1024,32]"];
	"convert.1911" [label="convert.1911 \n bf16[1024,32,4096,4096]"];
	"reshape.1913" [label="reshape.1913 \n bf16[32768,4096,4096]"];
	"reshape.457" [label="reshape.457 \n bf16[32768,4096]"];
	"broadcast.618" [label="broadcast.618 \n bf16[32768,4096,4096]"];
	"multiply.88" [label="multiply.88 \n bf16[32768,4096,4096]"];
	"convert.41" [label="convert.41 \n f32[32768,4096,4096]"];
	"reduce.4" [label="reduce.4 \n f32[32768,4096]"];
	"convert.10" [label="convert.10 \n bf16[32768,4096]"];
	"reshape.1916" [label="reshape.1916 \n bf16[1024,32,4096,1]"];
	"transpose.1917" [label="transpose.1917 \n bf16[4096,1024,32,1]"];
	"reshape.1918" [label="reshape.1918 \n bf16[4096,1024,32]"];
	"concatenate.2091" [label="concatenate.2091 \n bf16[4096,1024,96]"];
	"reshape.2160" [label="reshape.2160 \n bf16[4194304,96]"];
	"dot.2161" [label="dot.2161 \n bf16[4194304,32]"];
	"reshape.2162" [label="reshape.2162 \n bf16[4096,1024,32]"];
	"broadcast.2175" [label="broadcast.2175 \n bf16[4096,1024,32]"];
	"multiply.2176" [label="multiply.2176 \n bf16[4096,1024,32]"];
	"convert.2177" [label="convert.2177 \n f32[4096,1024,32]"];
	"broadcast.2198" [label="broadcast.2198 \n f32[4096,1024,32]"];
	"multiply.2199" [label="multiply.2199 \n f32[4096,1024,32]"];
	"multiply.2178" [label="multiply.2178 \n f32[4096,1024,32]"];
	"constant.2179" [label="constant.2179 \n f32[] constant(0), metadata="];
	"reduce.2185" [label="reduce.2185 \n f32[4096,1024]"];
	"broadcast.619" [label="broadcast.619 \n f32[4096,1024]"];
	"multiply.81" [label="multiply.81 \n f32[4096,1024]"];
	"reshape.1899" [label="reshape.1899 \n f32[4096,1024,1]"];
	"reshape.2123" [label="reshape.2123 \n f32[4096,1024,1]"];
	"multiply.59" [label="multiply.59 \n f32[4096,1024,1]"];
	"multiply.60" [label="multiply.60 \n f32[4096,1024,1]"];
	"multiply.2188" [label="multiply.2188 \n f32[4096,1024,1]"];
	"broadcast.621" [label="broadcast.621 \n f32[4096,1024,1]"];
	"divide.20" [label="divide.20 \n f32[4096,1024,1]"];
	"reshape.1984" [label="reshape.1984 \n f32[4096,1024]"];
	"broadcast.85" [label="broadcast.85 \n f32[4096,1024,32]"];
	"broadcast.2142" [label="broadcast.2142 \n f32[4096,1024,32]"];
	"multiply.2149" [label="multiply.2149 \n f32[4096,1024,32]"];
	"multiply.2195" [label="multiply.2195 \n f32[4096,1024,32]"];
	"add.2200" [label="add.2200 \n f32[4096,1024,32]"];
	"convert.2201" [label="convert.2201 \n bf16[4096,1024,32]"];
	"add.2203" [label="add.2203 \n bf16[4096,1024,32]"];
	"reshape.2241" [label="reshape.2241 \n bf16[4194304,32]"];
	"dot.2242" [label="dot.2242 \n bf16[4194304,32]"];
	"reshape.2243" [label="reshape.2243 \n bf16[4096,1024,32]"];
	"tuple.2244" [label="tuple.2244 \n (bf16[4096,1024,32]"];
	"constant.116" [label="constant.116 \n pred[64]"];
	"broadcast.87" [label="broadcast.87 \n pred[4096,1024,64]"];
	"constant.2262" [label="constant.2262 \n bf16[] constant(0), metadata="];
	"pad.2263" [label="pad.2263 \n bf16[4096,1024,64]"];
	"constant.117" [label="constant.117 \n pred[64]"];
	"broadcast.88" [label="broadcast.88 \n pred[4096,1024,64]"];
	"constant.2253" [label="constant.2253 \n bf16[] constant(0), metadata="];
	"pad.2254" [label="pad.2254 \n bf16[4096,1024,64]"];
	"reshape.2249" [label="reshape.2249 \n bf16[4096,1024,64]"];
	"select.2256" [label="select.2256 \n bf16[4096,1024,64]"];
	"select.2265" [label="select.2265 \n bf16[4096,1024,64]"];
	"slice.2275" [label="slice.2275 \n bf16[4096,1024,32]"];
	"multiply.2276" [label="multiply.2276 \n bf16[4096,1024,32]"];
	"logistic.1" [label="logistic.1 \n bf16[4096,1024,64]"];
	"slice.3" [label="slice.3 \n bf16[4096,1024,32]"];
	"constant.2277" [label="constant.2277 \n bf16[] constant(1), metadata="];
	"broadcast.2282" [label="broadcast.2282 \n bf16[4096,1024,32]"];
	"slice.2268" [label="slice.2268 \n bf16[4096,1024,32]"];
	"broadcast.2279" [label="broadcast.2279 \n bf16[4096,1024,32]"];
	"subtract.2280" [label="subtract.2280 \n bf16[4096,1024,32]"];
	"multiply.2281" [label="multiply.2281 \n bf16[4096,1024,32]"];
	"add.2283" [label="add.2283 \n bf16[4096,1024,32]"];
	"multiply.2284" [label="multiply.2284 \n bf16[4096,1024,32]"];
	"multiply.2285" [label="multiply.2285 \n bf16[4096,1024,32]"];
	"slice.2" [label="slice.2 \n bf16[4096,1024,32]"];
	"multiply.2270" [label="multiply.2270 \n bf16[4096,1024,32]"];
	"multiply.2273" [label="multiply.2273 \n bf16[4096,1024,32]"];
	"concatenate.2286" [label="concatenate.2286 \n bf16[4096,1024,64]"];
	"reshape.2358" [label="reshape.2358 \n bf16[4194304,64]"];
	"dot.2359" [label="dot.2359 \n bf16[4194304,32]"];
	"reshape.2360" [label="reshape.2360 \n bf16[4096,1024,32]"];
	"broadcast.2373" [label="broadcast.2373 \n bf16[4096,1024,32]"];
	"multiply.2374" [label="multiply.2374 \n bf16[4096,1024,32]"];
	"convert.2375" [label="convert.2375 \n f32[4096,1024,32]"];
	"broadcast.2396" [label="broadcast.2396 \n f32[4096,1024,32]"];
	"multiply.2397" [label="multiply.2397 \n f32[4096,1024,32]"];
	"multiply.2376" [label="multiply.2376 \n f32[4096,1024,32]"];
	"constant.2377" [label="constant.2377 \n f32[] constant(0), metadata="];
	"reduce.2383" [label="reduce.2383 \n f32[4096,1024]"];
	"broadcast.623" [label="broadcast.623 \n f32[4096,1024]"];
	"multiply.82" [label="multiply.82 \n f32[4096,1024]"];
	"reshape.1902" [label="reshape.1902 \n f32[4096,1024,1]"];
	"reshape.2121" [label="reshape.2121 \n f32[4096,1024,1]"];
	"multiply.61" [label="multiply.61 \n f32[4096,1024,1]"];
	"multiply.62" [label="multiply.62 \n f32[4096,1024,1]"];
	"multiply.2386" [label="multiply.2386 \n f32[4096,1024,1]"];
	"broadcast.625" [label="broadcast.625 \n f32[4096,1024,1]"];
	"divide.21" [label="divide.21 \n f32[4096,1024,1]"];
	"reshape.1989" [label="reshape.1989 \n f32[4096,1024]"];
	"broadcast.96" [label="broadcast.96 \n f32[4096,1024,32]"];
	"broadcast.2340" [label="broadcast.2340 \n f32[4096,1024,32]"];
	"multiply.2347" [label="multiply.2347 \n f32[4096,1024,32]"];
	"multiply.2393" [label="multiply.2393 \n f32[4096,1024,32]"];
	"add.2398" [label="add.2398 \n f32[4096,1024,32]"];
	"convert.2399" [label="convert.2399 \n bf16[4096,1024,32]"];
	"add.2401" [label="add.2401 \n bf16[4096,1024,32]"];
	"iota.23" [label="iota.23 \n s32[4096,4096]"];
	"iota.24" [label="iota.24 \n s32[4096,4096]"];
	"compare.2471" [label="compare.2471 \n pred[4096,4096]"];
	"constant.2462" [label="constant.2462 \n bf16[] constant(0), metadata="];
	"broadcast.627" [label="broadcast.627 \n bf16[4096,4096]"];
	"constant.2457" [label="constant.2457 \n bf16[] constant(1), metadata="];
	"broadcast.629" [label="broadcast.629 \n bf16[4096,4096]"];
	"select.14" [label="select.14 \n bf16[4096,4096]"];
	"convert.34" [label="convert.34 \n pred[4096,4096]"];
	"broadcast.101" [label="broadcast.101 \n pred[1024,32,4096,4096]"];
	"constant.2551" [label="constant.2551 \n bf16[] constant(0), metadata="];
	"broadcast.2552" [label="broadcast.2552 \n bf16[1024,32,4096,4096]"];
	"reshape.2439" [label="reshape.2439 \n bf16[4194304,32]"];
	"dot.2440" [label="dot.2440 \n bf16[4194304,32]"];
	"reshape.2442" [label="reshape.2442 \n bf16[4096,1024,32,1]"];
	"transpose.2443" [label="transpose.2443 \n bf16[1024,32,4096,1]"];
	"tuple.2444" [label="tuple.2444 \n (bf16[1024,32,4096,2]"];
	"reshape.536" [label="reshape.536 \n bf16[32768,4096]"];
	"broadcast.327" [label="broadcast.327 \n bf16[32768,4096,4096]"];
	"constant.118" [label="constant.118 \n pred[96]"];
	"broadcast.102" [label="broadcast.102 \n pred[4096,1024,96]"];
	"transpose.2517" [label="transpose.2517 \n bf16[4096,1024,32,1]"];
	"reshape.2518" [label="reshape.2518 \n bf16[4096,1024,32]"];
	"constant.2523" [label="constant.2523 \n bf16[] constant(0), metadata="];
	"pad.2524" [label="pad.2524 \n bf16[4096,1024,96]"];
	"reshape.2519" [label="reshape.2519 \n bf16[4096,1024,96]"];
	"select.2526" [label="select.2526 \n bf16[4096,1024,96]"];
	"slice.2529" [label="slice.2529 \n bf16[4096,1024,32]"];
	"reshape.2530" [label="reshape.2530 \n bf16[4096,1024,32,1]"];
	"transpose.2531" [label="transpose.2531 \n bf16[1024,32,4096,1]"];
	"reshape.537" [label="reshape.537 \n bf16[32768,4096]"];
	"broadcast.328" [label="broadcast.328 \n bf16[32768,4096,4096]"];
	"multiply.63" [label="multiply.63 \n bf16[32768,4096,4096]"];
	"convert.289" [label="convert.289 \n f32[32768,4096,4096]"];
	"reshape.2824" [label="reshape.2824 \n f32[1024,32,4096,4096]"];
	"broadcast.105" [label="broadcast.105 \n pred[1024,32,4096,4096]"];
	"constant.2490" [label="constant.2490 \n bf16[] constant(-9984), metadata="];
	"broadcast.2491" [label="broadcast.2491 \n bf16[1024,32,4096,4096]"];
	"reshape.2482" [label="reshape.2482 \n bf16[32768,4096,2]"];
	"transpose.2478" [label="transpose.2478 \n bf16[1024,32,2,4096]"];
	"reshape.2480" [label="reshape.2480 \n bf16[32768,2,4096]"];
	"dot.2483" [label="dot.2483 \n bf16[32768,4096,4096]"];
	"broadcast.631" [label="broadcast.631 \n bf16[32768,4096,4096]"];
	"divide.15" [label="divide.15 \n bf16[32768,4096,4096]"];
	"reshape.1909" [label="reshape.1909 \n bf16[1024,32,4096,4096]"];
	"select.2492" [label="select.2492 \n bf16[1024,32,4096,4096]"];
	"convert.2493" [label="convert.2493 \n f32[1024,32,4096,4096]"];
	"convert.2547" [label="convert.2547 \n bf16[1024,32,4096,4096]"];
	"select.2553" [label="select.2553 \n bf16[1024,32,4096,4096]"];
	"broadcast.2554" [label="broadcast.2554 \n bf16[1024,32,4096,4096]"];
	"divide.2555" [label="divide.2555 \n bf16[1024,32,4096,4096]"];
	"reshape.2556" [label="reshape.2556 \n bf16[32768,4096,4096]"];
	"reshape.2622" [label="reshape.2622 \n bf16[32768,2,4096]"];
	"transpose.2623" [label="transpose.2623 \n bf16[32768,4096,2]"];
	"dot.2624" [label="dot.2624 \n bf16[32768,4096,2]"];
	"reshape.2625" [label="reshape.2625 \n bf16[1024,32,4096,2]"];
	"reshape.2645" [label="reshape.2645 \n bf16[4096,2]"];
	"broadcast.2646" [label="broadcast.2646 \n bf16[1024,32,4096,2]"];
	"multiply.2647" [label="multiply.2647 \n bf16[1024,32,4096,2]"];
	"constant.2648" [label="constant.2648 \n bf16[] constant(0), metadata="];
	"reduce.2654" [label="reduce.2654 \n bf16[1024,32,4096]"];
	"negate.11" [label="negate.11 \n bf16[1024,32,4096]"];
	"reshape.2627" [label="reshape.2627 \n bf16[4096,2]"];
	"broadcast.2628" [label="broadcast.2628 \n bf16[1024,32,4096,2]"];
	"multiply.2629" [label="multiply.2629 \n bf16[1024,32,4096,2]"];
	"constant.2630" [label="constant.2630 \n bf16[] constant(0), metadata="];
	"reduce.2636" [label="reduce.2636 \n bf16[1024,32,4096]"];
	"add.15" [label="add.15 \n bf16[1024,32,4096]"];
	"reshape.2150" [label="reshape.2150 \n bf16[1024,32,4096,1]"];
	"transpose.2679" [label="transpose.2679 \n bf16[4096,1024,32,1]"];
	"reshape.2680" [label="reshape.2680 \n bf16[4096,1024,32]"];
	"reshape.2557" [label="reshape.2557 \n bf16[32768,4096,2]"];
	"transpose.2558" [label="transpose.2558 \n bf16[32768,2,4096]"];
	"dot.2559" [label="dot.2559 \n bf16[32768,2,4096]"];
	"reshape.2560" [label="reshape.2560 \n bf16[1024,32,2,4096]"];
	"transpose.2561" [label="transpose.2561 \n bf16[1024,32,4096,2]"];
	"reshape.2581" [label="reshape.2581 \n bf16[4096,2]"];
	"broadcast.2582" [label="broadcast.2582 \n bf16[1024,32,4096,2]"];
	"multiply.2583" [label="multiply.2583 \n bf16[1024,32,4096,2]"];
	"constant.2584" [label="constant.2584 \n bf16[] constant(0), metadata="];
	"reduce.2590" [label="reduce.2590 \n bf16[1024,32,4096]"];
	"negate.10" [label="negate.10 \n bf16[1024,32,4096]"];
	"reshape.2563" [label="reshape.2563 \n bf16[4096,2]"];
	"broadcast.2564" [label="broadcast.2564 \n bf16[1024,32,4096,2]"];
	"multiply.2565" [label="multiply.2565 \n bf16[1024,32,4096,2]"];
	"constant.2566" [label="constant.2566 \n bf16[] constant(0), metadata="];
	"reduce.2572" [label="reduce.2572 \n bf16[1024,32,4096]"];
	"add.14" [label="add.14 \n bf16[1024,32,4096]"];
	"reshape.2147" [label="reshape.2147 \n bf16[1024,32,4096,1]"];
	"transpose.2615" [label="transpose.2615 \n bf16[4096,1024,32,1]"];
	"reshape.2616" [label="reshape.2616 \n bf16[4096,1024,32]"];
	"convert.2501" [label="convert.2501 \n bf16[1024,32,4096,4096]"];
	"reshape.2503" [label="reshape.2503 \n bf16[32768,4096,4096]"];
	"reshape.575" [label="reshape.575 \n bf16[32768,4096]"];
	"broadcast.634" [label="broadcast.634 \n bf16[32768,4096,4096]"];
	"multiply.89" [label="multiply.89 \n bf16[32768,4096,4096]"];
	"convert.42" [label="convert.42 \n f32[32768,4096,4096]"];
	"reduce.5" [label="reduce.5 \n f32[32768,4096]"];
	"convert.12" [label="convert.12 \n bf16[32768,4096]"];
	"reshape.2506" [label="reshape.2506 \n bf16[1024,32,4096,1]"];
	"transpose.2507" [label="transpose.2507 \n bf16[4096,1024,32,1]"];
	"reshape.2508" [label="reshape.2508 \n bf16[4096,1024,32]"];
	"concatenate.2681" [label="concatenate.2681 \n bf16[4096,1024,96]"];
	"reshape.2750" [label="reshape.2750 \n bf16[4194304,96]"];
	"dot.2751" [label="dot.2751 \n bf16[4194304,32]"];
	"reshape.2752" [label="reshape.2752 \n bf16[4096,1024,32]"];
	"broadcast.2765" [label="broadcast.2765 \n bf16[4096,1024,32]"];
	"multiply.2766" [label="multiply.2766 \n bf16[4096,1024,32]"];
	"convert.2767" [label="convert.2767 \n f32[4096,1024,32]"];
	"broadcast.2788" [label="broadcast.2788 \n f32[4096,1024,32]"];
	"multiply.2789" [label="multiply.2789 \n f32[4096,1024,32]"];
	"multiply.2768" [label="multiply.2768 \n f32[4096,1024,32]"];
	"constant.2769" [label="constant.2769 \n f32[] constant(0), metadata="];
	"reduce.2775" [label="reduce.2775 \n f32[4096,1024]"];
	"broadcast.635" [label="broadcast.635 \n f32[4096,1024]"];
	"multiply.83" [label="multiply.83 \n f32[4096,1024]"];
	"reshape.1923" [label="reshape.1923 \n f32[4096,1024,1]"];
	"reshape.2119" [label="reshape.2119 \n f32[4096,1024,1]"];
	"multiply.65" [label="multiply.65 \n f32[4096,1024,1]"];
	"multiply.66" [label="multiply.66 \n f32[4096,1024,1]"];
	"multiply.2778" [label="multiply.2778 \n f32[4096,1024,1]"];
	"broadcast.638" [label="broadcast.638 \n f32[4096,1024,1]"];
	"divide.22" [label="divide.22 \n f32[4096,1024,1]"];
	"reshape.1993" [label="reshape.1993 \n f32[4096,1024]"];
	"broadcast.127" [label="broadcast.127 \n f32[4096,1024,32]"];
	"broadcast.2732" [label="broadcast.2732 \n f32[4096,1024,32]"];
	"multiply.2739" [label="multiply.2739 \n f32[4096,1024,32]"];
	"multiply.2785" [label="multiply.2785 \n f32[4096,1024,32]"];
	"add.2790" [label="add.2790 \n f32[4096,1024,32]"];
	"convert.2791" [label="convert.2791 \n bf16[4096,1024,32]"];
	"add.2793" [label="add.2793 \n bf16[4096,1024,32]"];
	"reshape.2831" [label="reshape.2831 \n bf16[4194304,32]"];
	"dot.2832" [label="dot.2832 \n bf16[4194304,32]"];
	"reshape.2833" [label="reshape.2833 \n bf16[4096,1024,32]"];
	"tuple.2834" [label="tuple.2834 \n (bf16[4096,1024,32]"];
	"constant.133" [label="constant.133 \n pred[64]"];
	"broadcast.128" [label="broadcast.128 \n pred[4096,1024,64]"];
	"constant.2852" [label="constant.2852 \n bf16[] constant(0), metadata="];
	"pad.2853" [label="pad.2853 \n bf16[4096,1024,64]"];
	"constant.134" [label="constant.134 \n pred[64]"];
	"broadcast.129" [label="broadcast.129 \n pred[4096,1024,64]"];
	"constant.2843" [label="constant.2843 \n bf16[] constant(0), metadata="];
	"pad.2844" [label="pad.2844 \n bf16[4096,1024,64]"];
	"reshape.2839" [label="reshape.2839 \n bf16[4096,1024,64]"];
	"select.2846" [label="select.2846 \n bf16[4096,1024,64]"];
	"select.2855" [label="select.2855 \n bf16[4096,1024,64]"];
	"slice.2865" [label="slice.2865 \n bf16[4096,1024,32]"];
	"multiply.2866" [label="multiply.2866 \n bf16[4096,1024,32]"];
	"logistic.2" [label="logistic.2 \n bf16[4096,1024,64]"];
	"slice.5" [label="slice.5 \n bf16[4096,1024,32]"];
	"constant.2867" [label="constant.2867 \n bf16[] constant(1), metadata="];
	"broadcast.2872" [label="broadcast.2872 \n bf16[4096,1024,32]"];
	"slice.2858" [label="slice.2858 \n bf16[4096,1024,32]"];
	"broadcast.2869" [label="broadcast.2869 \n bf16[4096,1024,32]"];
	"subtract.2870" [label="subtract.2870 \n bf16[4096,1024,32]"];
	"multiply.2871" [label="multiply.2871 \n bf16[4096,1024,32]"];
	"add.2873" [label="add.2873 \n bf16[4096,1024,32]"];
	"multiply.2874" [label="multiply.2874 \n bf16[4096,1024,32]"];
	"multiply.2875" [label="multiply.2875 \n bf16[4096,1024,32]"];
	"slice.4" [label="slice.4 \n bf16[4096,1024,32]"];
	"multiply.2860" [label="multiply.2860 \n bf16[4096,1024,32]"];
	"multiply.2863" [label="multiply.2863 \n bf16[4096,1024,32]"];
	"concatenate.2876" [label="concatenate.2876 \n bf16[4096,1024,64]"];
	"reshape.2948" [label="reshape.2948 \n bf16[4194304,64]"];
	"dot.2949" [label="dot.2949 \n bf16[4194304,32]"];
	"reshape.2950" [label="reshape.2950 \n bf16[4096,1024,32]"];
	"broadcast.2963" [label="broadcast.2963 \n bf16[4096,1024,32]"];
	"multiply.2964" [label="multiply.2964 \n bf16[4096,1024,32]"];
	"convert.2965" [label="convert.2965 \n f32[4096,1024,32]"];
	"broadcast.2986" [label="broadcast.2986 \n f32[4096,1024,32]"];
	"multiply.2987" [label="multiply.2987 \n f32[4096,1024,32]"];
	"multiply.2966" [label="multiply.2966 \n f32[4096,1024,32]"];
	"constant.2967" [label="constant.2967 \n f32[] constant(0), metadata="];
	"reduce.2973" [label="reduce.2973 \n f32[4096,1024]"];
	"broadcast.641" [label="broadcast.641 \n f32[4096,1024]"];
	"multiply.84" [label="multiply.84 \n f32[4096,1024]"];
	"reshape.1927" [label="reshape.1927 \n f32[4096,1024,1]"];
	"reshape.2117" [label="reshape.2117 \n f32[4096,1024,1]"];
	"multiply.67" [label="multiply.67 \n f32[4096,1024,1]"];
	"multiply.68" [label="multiply.68 \n f32[4096,1024,1]"];
	"multiply.2976" [label="multiply.2976 \n f32[4096,1024,1]"];
	"broadcast.644" [label="broadcast.644 \n f32[4096,1024,1]"];
	"divide.23" [label="divide.23 \n f32[4096,1024,1]"];
	"reshape.1996" [label="reshape.1996 \n f32[4096,1024]"];
	"broadcast.133" [label="broadcast.133 \n f32[4096,1024,32]"];
	"broadcast.2930" [label="broadcast.2930 \n f32[4096,1024,32]"];
	"multiply.2937" [label="multiply.2937 \n f32[4096,1024,32]"];
	"multiply.2983" [label="multiply.2983 \n f32[4096,1024,32]"];
	"add.2988" [label="add.2988 \n f32[4096,1024,32]"];
	"convert.2989" [label="convert.2989 \n bf16[4096,1024,32]"];
	"add.2991" [label="add.2991 \n bf16[4096,1024,32]"];
	"iota.25" [label="iota.25 \n s32[4096,4096]"];
	"iota.26" [label="iota.26 \n s32[4096,4096]"];
	"compare.3061" [label="compare.3061 \n pred[4096,4096]"];
	"constant.3052" [label="constant.3052 \n bf16[] constant(0), metadata="];
	"broadcast.647" [label="broadcast.647 \n bf16[4096,4096]"];
	"constant.3047" [label="constant.3047 \n bf16[] constant(1), metadata="];
	"broadcast.649" [label="broadcast.649 \n bf16[4096,4096]"];
	"select.15" [label="select.15 \n bf16[4096,4096]"];
	"convert.33" [label="convert.33 \n pred[4096,4096]"];
	"broadcast.136" [label="broadcast.136 \n pred[1024,32,4096,4096]"];
	"constant.3141" [label="constant.3141 \n bf16[] constant(0), metadata="];
	"broadcast.3142" [label="broadcast.3142 \n bf16[1024,32,4096,4096]"];
	"reshape.3029" [label="reshape.3029 \n bf16[4194304,32]"];
	"dot.3030" [label="dot.3030 \n bf16[4194304,32]"];
	"reshape.3032" [label="reshape.3032 \n bf16[4096,1024,32,1]"];
	"transpose.3033" [label="transpose.3033 \n bf16[1024,32,4096,1]"];
	"tuple.3034" [label="tuple.3034 \n (bf16[1024,32,4096,2]"];
	"reshape.643" [label="reshape.643 \n bf16[32768,4096]"];
	"broadcast.356" [label="broadcast.356 \n bf16[32768,4096,4096]"];
	"constant.135" [label="constant.135 \n pred[96]"];
	"broadcast.137" [label="broadcast.137 \n pred[4096,1024,96]"];
	"transpose.3107" [label="transpose.3107 \n bf16[4096,1024,32,1]"];
	"reshape.3108" [label="reshape.3108 \n bf16[4096,1024,32]"];
	"constant.3113" [label="constant.3113 \n bf16[] constant(0), metadata="];
	"pad.3114" [label="pad.3114 \n bf16[4096,1024,96]"];
	"reshape.3109" [label="reshape.3109 \n bf16[4096,1024,96]"];
	"select.3116" [label="select.3116 \n bf16[4096,1024,96]"];
	"slice.3119" [label="slice.3119 \n bf16[4096,1024,32]"];
	"reshape.3120" [label="reshape.3120 \n bf16[4096,1024,32,1]"];
	"transpose.3121" [label="transpose.3121 \n bf16[1024,32,4096,1]"];
	"reshape.644" [label="reshape.644 \n bf16[32768,4096]"];
	"broadcast.357" [label="broadcast.357 \n bf16[32768,4096,4096]"];
	"multiply.69" [label="multiply.69 \n bf16[32768,4096,4096]"];
	"convert.290" [label="convert.290 \n f32[32768,4096,4096]"];
	"reshape.2827" [label="reshape.2827 \n f32[1024,32,4096,4096]"];
	"broadcast.139" [label="broadcast.139 \n pred[1024,32,4096,4096]"];
	"constant.3080" [label="constant.3080 \n bf16[] constant(-9984), metadata="];
	"broadcast.3081" [label="broadcast.3081 \n bf16[1024,32,4096,4096]"];
	"reshape.3072" [label="reshape.3072 \n bf16[32768,4096,2]"];
	"transpose.3068" [label="transpose.3068 \n bf16[1024,32,2,4096]"];
	"reshape.3070" [label="reshape.3070 \n bf16[32768,2,4096]"];
	"dot.3073" [label="dot.3073 \n bf16[32768,4096,4096]"];
	"broadcast.651" [label="broadcast.651 \n bf16[32768,4096,4096]"];
	"divide.16" [label="divide.16 \n bf16[32768,4096,4096]"];
	"reshape.1936" [label="reshape.1936 \n bf16[1024,32,4096,4096]"];
	"select.3082" [label="select.3082 \n bf16[1024,32,4096,4096]"];
	"convert.3083" [label="convert.3083 \n f32[1024,32,4096,4096]"];
	"convert.3137" [label="convert.3137 \n bf16[1024,32,4096,4096]"];
	"select.3143" [label="select.3143 \n bf16[1024,32,4096,4096]"];
	"broadcast.3144" [label="broadcast.3144 \n bf16[1024,32,4096,4096]"];
	"divide.3145" [label="divide.3145 \n bf16[1024,32,4096,4096]"];
	"reshape.3146" [label="reshape.3146 \n bf16[32768,4096,4096]"];
	"reshape.3212" [label="reshape.3212 \n bf16[32768,2,4096]"];
	"transpose.3213" [label="transpose.3213 \n bf16[32768,4096,2]"];
	"dot.3214" [label="dot.3214 \n bf16[32768,4096,2]"];
	"reshape.3215" [label="reshape.3215 \n bf16[1024,32,4096,2]"];
	"reshape.3235" [label="reshape.3235 \n bf16[4096,2]"];
	"broadcast.3236" [label="broadcast.3236 \n bf16[1024,32,4096,2]"];
	"multiply.3237" [label="multiply.3237 \n bf16[1024,32,4096,2]"];
	"constant.3238" [label="constant.3238 \n bf16[] constant(0), metadata="];
	"reduce.3244" [label="reduce.3244 \n bf16[1024,32,4096]"];
	"negate.13" [label="negate.13 \n bf16[1024,32,4096]"];
	"reshape.3217" [label="reshape.3217 \n bf16[4096,2]"];
	"broadcast.3218" [label="broadcast.3218 \n bf16[1024,32,4096,2]"];
	"multiply.3219" [label="multiply.3219 \n bf16[1024,32,4096,2]"];
	"constant.3220" [label="constant.3220 \n bf16[] constant(0), metadata="];
	"reduce.3226" [label="reduce.3226 \n bf16[1024,32,4096]"];
	"add.17" [label="add.17 \n bf16[1024,32,4096]"];
	"reshape.2161" [label="reshape.2161 \n bf16[1024,32,4096,1]"];
	"transpose.3269" [label="transpose.3269 \n bf16[4096,1024,32,1]"];
	"reshape.3270" [label="reshape.3270 \n bf16[4096,1024,32]"];
	"reshape.3147" [label="reshape.3147 \n bf16[32768,4096,2]"];
	"transpose.3148" [label="transpose.3148 \n bf16[32768,2,4096]"];
	"dot.3149" [label="dot.3149 \n bf16[32768,2,4096]"];
	"reshape.3150" [label="reshape.3150 \n bf16[1024,32,2,4096]"];
	"transpose.3151" [label="transpose.3151 \n bf16[1024,32,4096,2]"];
	"reshape.3171" [label="reshape.3171 \n bf16[4096,2]"];
	"broadcast.3172" [label="broadcast.3172 \n bf16[1024,32,4096,2]"];
	"multiply.3173" [label="multiply.3173 \n bf16[1024,32,4096,2]"];
	"constant.3174" [label="constant.3174 \n bf16[] constant(0), metadata="];
	"reduce.3180" [label="reduce.3180 \n bf16[1024,32,4096]"];
	"negate.12" [label="negate.12 \n bf16[1024,32,4096]"];
	"reshape.3153" [label="reshape.3153 \n bf16[4096,2]"];
	"broadcast.3154" [label="broadcast.3154 \n bf16[1024,32,4096,2]"];
	"multiply.3155" [label="multiply.3155 \n bf16[1024,32,4096,2]"];
	"constant.3156" [label="constant.3156 \n bf16[] constant(0), metadata="];
	"reduce.3162" [label="reduce.3162 \n bf16[1024,32,4096]"];
	"add.16" [label="add.16 \n bf16[1024,32,4096]"];
	"reshape.2155" [label="reshape.2155 \n bf16[1024,32,4096,1]"];
	"transpose.3205" [label="transpose.3205 \n bf16[4096,1024,32,1]"];
	"reshape.3206" [label="reshape.3206 \n bf16[4096,1024,32]"];
	"convert.3091" [label="convert.3091 \n bf16[1024,32,4096,4096]"];
	"reshape.3093" [label="reshape.3093 \n bf16[32768,4096,4096]"];
	"reshape.685" [label="reshape.685 \n bf16[32768,4096]"];
	"broadcast.653" [label="broadcast.653 \n bf16[32768,4096,4096]"];
	"multiply.90" [label="multiply.90 \n bf16[32768,4096,4096]"];
	"convert.43" [label="convert.43 \n f32[32768,4096,4096]"];
	"reduce.6" [label="reduce.6 \n f32[32768,4096]"];
	"convert.15" [label="convert.15 \n bf16[32768,4096]"];
	"reshape.3096" [label="reshape.3096 \n bf16[1024,32,4096,1]"];
	"transpose.3097" [label="transpose.3097 \n bf16[4096,1024,32,1]"];
	"reshape.3098" [label="reshape.3098 \n bf16[4096,1024,32]"];
	"concatenate.3271" [label="concatenate.3271 \n bf16[4096,1024,96]"];
	"reshape.3340" [label="reshape.3340 \n bf16[4194304,96]"];
	"dot.3341" [label="dot.3341 \n bf16[4194304,32]"];
	"reshape.3342" [label="reshape.3342 \n bf16[4096,1024,32]"];
	"broadcast.3355" [label="broadcast.3355 \n bf16[4096,1024,32]"];
	"multiply.3356" [label="multiply.3356 \n bf16[4096,1024,32]"];
	"convert.3357" [label="convert.3357 \n f32[4096,1024,32]"];
	"broadcast.3378" [label="broadcast.3378 \n f32[4096,1024,32]"];
	"multiply.3379" [label="multiply.3379 \n f32[4096,1024,32]"];
	"multiply.3358" [label="multiply.3358 \n f32[4096,1024,32]"];
	"constant.3359" [label="constant.3359 \n f32[] constant(0), metadata="];
	"reduce.3365" [label="reduce.3365 \n f32[4096,1024]"];
	"broadcast.654" [label="broadcast.654 \n f32[4096,1024]"];
	"multiply.85" [label="multiply.85 \n f32[4096,1024]"];
	"reshape.1951" [label="reshape.1951 \n f32[4096,1024,1]"];
	"reshape.2115" [label="reshape.2115 \n f32[4096,1024,1]"];
	"multiply.71" [label="multiply.71 \n f32[4096,1024,1]"];
	"multiply.72" [label="multiply.72 \n f32[4096,1024,1]"];
	"multiply.3368" [label="multiply.3368 \n f32[4096,1024,1]"];
	"broadcast.656" [label="broadcast.656 \n f32[4096,1024,1]"];
	"divide.24" [label="divide.24 \n f32[4096,1024,1]"];
	"reshape.1999" [label="reshape.1999 \n f32[4096,1024]"];
	"broadcast.164" [label="broadcast.164 \n f32[4096,1024,32]"];
	"broadcast.3322" [label="broadcast.3322 \n f32[4096,1024,32]"];
	"multiply.3329" [label="multiply.3329 \n f32[4096,1024,32]"];
	"multiply.3375" [label="multiply.3375 \n f32[4096,1024,32]"];
	"add.3380" [label="add.3380 \n f32[4096,1024,32]"];
	"convert.3381" [label="convert.3381 \n bf16[4096,1024,32]"];
	"add.3383" [label="add.3383 \n bf16[4096,1024,32]"];
	"reshape.3421" [label="reshape.3421 \n bf16[4194304,32]"];
	"dot.3422" [label="dot.3422 \n bf16[4194304,32]"];
	"reshape.3423" [label="reshape.3423 \n bf16[4096,1024,32]"];
	"tuple.3424" [label="tuple.3424 \n (bf16[4096,1024,32]"];
	"constant.150" [label="constant.150 \n pred[64]"];
	"broadcast.165" [label="broadcast.165 \n pred[4096,1024,64]"];
	"constant.3442" [label="constant.3442 \n bf16[] constant(0), metadata="];
	"pad.3443" [label="pad.3443 \n bf16[4096,1024,64]"];
	"constant.151" [label="constant.151 \n pred[64]"];
	"broadcast.166" [label="broadcast.166 \n pred[4096,1024,64]"];
	"constant.3433" [label="constant.3433 \n bf16[] constant(0), metadata="];
	"pad.3434" [label="pad.3434 \n bf16[4096,1024,64]"];
	"reshape.3429" [label="reshape.3429 \n bf16[4096,1024,64]"];
	"select.3436" [label="select.3436 \n bf16[4096,1024,64]"];
	"select.3445" [label="select.3445 \n bf16[4096,1024,64]"];
	"slice.3455" [label="slice.3455 \n bf16[4096,1024,32]"];
	"multiply.3456" [label="multiply.3456 \n bf16[4096,1024,32]"];
	"logistic.3" [label="logistic.3 \n bf16[4096,1024,64]"];
	"slice.7" [label="slice.7 \n bf16[4096,1024,32]"];
	"constant.3457" [label="constant.3457 \n bf16[] constant(1), metadata="];
	"broadcast.3462" [label="broadcast.3462 \n bf16[4096,1024,32]"];
	"slice.3448" [label="slice.3448 \n bf16[4096,1024,32]"];
	"broadcast.3459" [label="broadcast.3459 \n bf16[4096,1024,32]"];
	"subtract.3460" [label="subtract.3460 \n bf16[4096,1024,32]"];
	"multiply.3461" [label="multiply.3461 \n bf16[4096,1024,32]"];
	"add.3463" [label="add.3463 \n bf16[4096,1024,32]"];
	"multiply.3464" [label="multiply.3464 \n bf16[4096,1024,32]"];
	"multiply.3465" [label="multiply.3465 \n bf16[4096,1024,32]"];
	"slice.6" [label="slice.6 \n bf16[4096,1024,32]"];
	"multiply.3450" [label="multiply.3450 \n bf16[4096,1024,32]"];
	"multiply.3453" [label="multiply.3453 \n bf16[4096,1024,32]"];
	"concatenate.3466" [label="concatenate.3466 \n bf16[4096,1024,64]"];
	"reshape.3538" [label="reshape.3538 \n bf16[4194304,64]"];
	"dot.3539" [label="dot.3539 \n bf16[4194304,32]"];
	"reshape.3540" [label="reshape.3540 \n bf16[4096,1024,32]"];
	"broadcast.3553" [label="broadcast.3553 \n bf16[4096,1024,32]"];
	"multiply.3554" [label="multiply.3554 \n bf16[4096,1024,32]"];
	"convert.3555" [label="convert.3555 \n f32[4096,1024,32]"];
	"broadcast.3576" [label="broadcast.3576 \n f32[4096,1024,32]"];
	"multiply.3577" [label="multiply.3577 \n f32[4096,1024,32]"];
	"multiply.3556" [label="multiply.3556 \n f32[4096,1024,32]"];
	"constant.3557" [label="constant.3557 \n f32[] constant(0), metadata="];
	"reduce.3563" [label="reduce.3563 \n f32[4096,1024]"];
	"broadcast.658" [label="broadcast.658 \n f32[4096,1024]"];
	"multiply.86" [label="multiply.86 \n f32[4096,1024]"];
	"reshape.1954" [label="reshape.1954 \n f32[4096,1024,1]"];
	"reshape.2113" [label="reshape.2113 \n f32[4096,1024,1]"];
	"multiply.73" [label="multiply.73 \n f32[4096,1024,1]"];
	"multiply.74" [label="multiply.74 \n f32[4096,1024,1]"];
	"multiply.3566" [label="multiply.3566 \n f32[4096,1024,1]"];
	"broadcast.661" [label="broadcast.661 \n f32[4096,1024,1]"];
	"divide.25" [label="divide.25 \n f32[4096,1024,1]"];
	"reshape.2003" [label="reshape.2003 \n f32[4096,1024]"];
	"broadcast.171" [label="broadcast.171 \n f32[4096,1024,32]"];
	"broadcast.3520" [label="broadcast.3520 \n f32[4096,1024,32]"];
	"multiply.3527" [label="multiply.3527 \n f32[4096,1024,32]"];
	"multiply.3573" [label="multiply.3573 \n f32[4096,1024,32]"];
	"add.3578" [label="add.3578 \n f32[4096,1024,32]"];
	"convert.3579" [label="convert.3579 \n bf16[4096,1024,32]"];
	"add.3581" [label="add.3581 \n bf16[4096,1024,32]"];
	"iota.27" [label="iota.27 \n s32[4096,4096]"];
	"iota.28" [label="iota.28 \n s32[4096,4096]"];
	"compare.3651" [label="compare.3651 \n pred[4096,4096]"];
	"constant.3642" [label="constant.3642 \n bf16[] constant(0), metadata="];
	"broadcast.664" [label="broadcast.664 \n bf16[4096,4096]"];
	"constant.3637" [label="constant.3637 \n bf16[] constant(1), metadata="];
	"broadcast.668" [label="broadcast.668 \n bf16[4096,4096]"];
	"select.16" [label="select.16 \n bf16[4096,4096]"];
	"convert.32" [label="convert.32 \n pred[4096,4096]"];
	"broadcast.177" [label="broadcast.177 \n pred[1024,32,4096,4096]"];
	"constant.3731" [label="constant.3731 \n bf16[] constant(0), metadata="];
	"broadcast.3732" [label="broadcast.3732 \n bf16[1024,32,4096,4096]"];
	"reshape.3619" [label="reshape.3619 \n bf16[4194304,32]"];
	"dot.3620" [label="dot.3620 \n bf16[4194304,32]"];
	"reshape.3622" [label="reshape.3622 \n bf16[4096,1024,32,1]"];
	"transpose.3623" [label="transpose.3623 \n bf16[1024,32,4096,1]"];
	"tuple.3624" [label="tuple.3624 \n (bf16[1024,32,4096,2]"];
	"reshape.765" [label="reshape.765 \n bf16[32768,4096]"];
	"broadcast.387" [label="broadcast.387 \n bf16[32768,4096,4096]"];
	"constant.152" [label="constant.152 \n pred[96]"];
	"broadcast.178" [label="broadcast.178 \n pred[4096,1024,96]"];
	"transpose.3697" [label="transpose.3697 \n bf16[4096,1024,32,1]"];
	"reshape.3698" [label="reshape.3698 \n bf16[4096,1024,32]"];
	"constant.3703" [label="constant.3703 \n bf16[] constant(0), metadata="];
	"pad.3704" [label="pad.3704 \n bf16[4096,1024,96]"];
	"reshape.3699" [label="reshape.3699 \n bf16[4096,1024,96]"];
	"select.3706" [label="select.3706 \n bf16[4096,1024,96]"];
	"slice.3709" [label="slice.3709 \n bf16[4096,1024,32]"];
	"reshape.3710" [label="reshape.3710 \n bf16[4096,1024,32,1]"];
	"transpose.3711" [label="transpose.3711 \n bf16[1024,32,4096,1]"];
	"reshape.766" [label="reshape.766 \n bf16[32768,4096]"];
	"broadcast.389" [label="broadcast.389 \n bf16[32768,4096,4096]"];
	"multiply.75" [label="multiply.75 \n bf16[32768,4096,4096]"];
	"convert.291" [label="convert.291 \n f32[32768,4096,4096]"];
	"reshape.2832" [label="reshape.2832 \n f32[1024,32,4096,4096]"];
	"broadcast.181" [label="broadcast.181 \n pred[1024,32,4096,4096]"];
	"constant.3670" [label="constant.3670 \n bf16[] constant(-9984), metadata="];
	"broadcast.3671" [label="broadcast.3671 \n bf16[1024,32,4096,4096]"];
	"reshape.3662" [label="reshape.3662 \n bf16[32768,4096,2]"];
	"transpose.3658" [label="transpose.3658 \n bf16[1024,32,2,4096]"];
	"reshape.3660" [label="reshape.3660 \n bf16[32768,2,4096]"];
	"dot.3663" [label="dot.3663 \n bf16[32768,4096,4096]"];
	"broadcast.670" [label="broadcast.670 \n bf16[32768,4096,4096]"];
	"divide.17" [label="divide.17 \n bf16[32768,4096,4096]"];
	"reshape.1961" [label="reshape.1961 \n bf16[1024,32,4096,4096]"];
	"select.3672" [label="select.3672 \n bf16[1024,32,4096,4096]"];
	"convert.3673" [label="convert.3673 \n f32[1024,32,4096,4096]"];
	"convert.3727" [label="convert.3727 \n bf16[1024,32,4096,4096]"];
	"select.3733" [label="select.3733 \n bf16[1024,32,4096,4096]"];
	"broadcast.3734" [label="broadcast.3734 \n bf16[1024,32,4096,4096]"];
	"divide.3735" [label="divide.3735 \n bf16[1024,32,4096,4096]"];
	"reshape.3736" [label="reshape.3736 \n bf16[32768,4096,4096]"];
	"reshape.3802" [label="reshape.3802 \n bf16[32768,2,4096]"];
	"transpose.3803" [label="transpose.3803 \n bf16[32768,4096,2]"];
	"dot.3804" [label="dot.3804 \n bf16[32768,4096,2]"];
	"reshape.3805" [label="reshape.3805 \n bf16[1024,32,4096,2]"];
	"reshape.3825" [label="reshape.3825 \n bf16[4096,2]"];
	"broadcast.3826" [label="broadcast.3826 \n bf16[1024,32,4096,2]"];
	"multiply.3827" [label="multiply.3827 \n bf16[1024,32,4096,2]"];
	"constant.3828" [label="constant.3828 \n bf16[] constant(0), metadata="];
	"reduce.3834" [label="reduce.3834 \n bf16[1024,32,4096]"];
	"negate.15" [label="negate.15 \n bf16[1024,32,4096]"];
	"reshape.3807" [label="reshape.3807 \n bf16[4096,2]"];
	"broadcast.3808" [label="broadcast.3808 \n bf16[1024,32,4096,2]"];
	"multiply.3809" [label="multiply.3809 \n bf16[1024,32,4096,2]"];
	"constant.3810" [label="constant.3810 \n bf16[] constant(0), metadata="];
	"reduce.3816" [label="reduce.3816 \n bf16[1024,32,4096]"];
	"add.19" [label="add.19 \n bf16[1024,32,4096]"];
	"reshape.2168" [label="reshape.2168 \n bf16[1024,32,4096,1]"];
	"transpose.3859" [label="transpose.3859 \n bf16[4096,1024,32,1]"];
	"reshape.3860" [label="reshape.3860 \n bf16[4096,1024,32]"];
	"reshape.3737" [label="reshape.3737 \n bf16[32768,4096,2]"];
	"transpose.3738" [label="transpose.3738 \n bf16[32768,2,4096]"];
	"dot.3739" [label="dot.3739 \n bf16[32768,2,4096]"];
	"reshape.3740" [label="reshape.3740 \n bf16[1024,32,2,4096]"];
	"transpose.3741" [label="transpose.3741 \n bf16[1024,32,4096,2]"];
	"reshape.3761" [label="reshape.3761 \n bf16[4096,2]"];
	"broadcast.3762" [label="broadcast.3762 \n bf16[1024,32,4096,2]"];
	"multiply.3763" [label="multiply.3763 \n bf16[1024,32,4096,2]"];
	"constant.3764" [label="constant.3764 \n bf16[] constant(0), metadata="];
	"reduce.3770" [label="reduce.3770 \n bf16[1024,32,4096]"];
	"negate.14" [label="negate.14 \n bf16[1024,32,4096]"];
	"reshape.3743" [label="reshape.3743 \n bf16[4096,2]"];
	"broadcast.3744" [label="broadcast.3744 \n bf16[1024,32,4096,2]"];
	"multiply.3745" [label="multiply.3745 \n bf16[1024,32,4096,2]"];
	"constant.3746" [label="constant.3746 \n bf16[] constant(0), metadata="];
	"reduce.3752" [label="reduce.3752 \n bf16[1024,32,4096]"];
	"add.18" [label="add.18 \n bf16[1024,32,4096]"];
	"reshape.2165" [label="reshape.2165 \n bf16[1024,32,4096,1]"];
	"transpose.3795" [label="transpose.3795 \n bf16[4096,1024,32,1]"];
	"reshape.3796" [label="reshape.3796 \n bf16[4096,1024,32]"];
	"convert.3681" [label="convert.3681 \n bf16[1024,32,4096,4096]"];
	"reshape.3683" [label="reshape.3683 \n bf16[32768,4096,4096]"];
	"reshape.812" [label="reshape.812 \n bf16[32768,4096]"];
	"broadcast.672" [label="broadcast.672 \n bf16[32768,4096,4096]"];
	"multiply.91" [label="multiply.91 \n bf16[32768,4096,4096]"];
	"convert.45" [label="convert.45 \n f32[32768,4096,4096]"];
	"reduce.7" [label="reduce.7 \n f32[32768,4096]"];
	"convert.18" [label="convert.18 \n bf16[32768,4096]"];
	"reshape.3686" [label="reshape.3686 \n bf16[1024,32,4096,1]"];
	"transpose.3687" [label="transpose.3687 \n bf16[4096,1024,32,1]"];
	"reshape.3688" [label="reshape.3688 \n bf16[4096,1024,32]"];
	"concatenate.3861" [label="concatenate.3861 \n bf16[4096,1024,96]"];
	"reshape.3934" [label="reshape.3934 \n bf16[4194304,96]"];
	"dot.3935" [label="dot.3935 \n bf16[4194304,32]"];
	"reshape.3936" [label="reshape.3936 \n bf16[4096,1024,32]"];
	"broadcast.3949" [label="broadcast.3949 \n bf16[4096,1024,32]"];
	"multiply.3950" [label="multiply.3950 \n bf16[4096,1024,32]"];
	"convert.3951" [label="convert.3951 \n f32[4096,1024,32]"];
	"broadcast.3972" [label="broadcast.3972 \n f32[4096,1024,32]"];
	"multiply.3973" [label="multiply.3973 \n f32[4096,1024,32]"];
	"multiply.3952" [label="multiply.3952 \n f32[4096,1024,32]"];
	"constant.3953" [label="constant.3953 \n f32[] constant(0), metadata="];
	"reduce.3959" [label="reduce.3959 \n f32[4096,1024]"];
	"broadcast.673" [label="broadcast.673 \n f32[4096,1024]"];
	"multiply.87" [label="multiply.87 \n f32[4096,1024]"];
	"reshape.1974" [label="reshape.1974 \n f32[4096,1024,1]"];
	"reshape.2111" [label="reshape.2111 \n f32[4096,1024,1]"];
	"multiply.77" [label="multiply.77 \n f32[4096,1024,1]"];
	"multiply.78" [label="multiply.78 \n f32[4096,1024,1]"];
	"multiply.3962" [label="multiply.3962 \n f32[4096,1024,1]"];
	"broadcast.675" [label="broadcast.675 \n f32[4096,1024,1]"];
	"divide.26" [label="divide.26 \n f32[4096,1024,1]"];
	"reshape.2008" [label="reshape.2008 \n f32[4096,1024]"];
	"broadcast.205" [label="broadcast.205 \n f32[4096,1024,32]"];
	"broadcast.3916" [label="broadcast.3916 \n f32[4096,1024,32]"];
	"multiply.3923" [label="multiply.3923 \n f32[4096,1024,32]"];
	"multiply.3969" [label="multiply.3969 \n f32[4096,1024,32]"];
	"add.3974" [label="add.3974 \n f32[4096,1024,32]"];
	"convert.3975" [label="convert.3975 \n bf16[4096,1024,32]"];
	"add.3977" [label="add.3977 \n bf16[4096,1024,32]"];
	"transpose.3978" [label="transpose.3978 \n bf16[1024,4096,32]"];
	"reshape.3979" [label="reshape.3979 \n bf16[4194304,32]"];
	"constant.3898" [label="constant.3898 \n bf16[] constant(0), metadata="];
	"broadcast.3902" [label="broadcast.3902 \n bf16[4194304,32]"];
	"select.3989" [label="select.3989 \n bf16[4194304,32]"];
	"scatter.4011" [label="scatter.4011 \n bf16[32000,32]"];
	"constant.168" [label="constant.168 \n bf16[1]"];
	"p79.4427" [label="p79.4427 \n bf16[1]"];
	"p78.4402" [label="p78.4402 \n bf16[32]"];
	"multiply.4391" [label="multiply.4391 \n bf16[4096,1024,32]"];
	"constant.4392" [label="constant.4392 \n bf16[] constant(0), metadata="];
	"reduce.4398" [label="reduce.4398 \n bf16[32]"];
	"add.4403" [label="add.4403 \n bf16[32]"];
	"multiply.4416" [label="multiply.4416 \n bf16[32]"];
	"constant.4417" [label="constant.4417 \n bf16[] constant(0), metadata="];
	"reduce.4423" [label="reduce.4423 \n bf16[] reduce(bf16[32]"];
	"sqrt.4424" [label="sqrt.4424 \n bf16[] sqrt(bf16[] %reduce.4423), metadata="];
	"multiply.4426" [label="multiply.4426 \n bf16[] multiply(bf16[] %sqrt.4424, bf16[] %sqrt.4424), metadata="];
	"reshape.849" [label="reshape.849 \n bf16[1]"];
	"add.4429" [label="add.4429 \n bf16[1]"];
	"p77.4359" [label="p77.4359 \n bf16[32]"];
	"multiply.4348" [label="multiply.4348 \n bf16[4096,1024,32]"];
	"constant.4349" [label="constant.4349 \n bf16[] constant(0), metadata="];
	"reduce.4355" [label="reduce.4355 \n bf16[32]"];
	"add.4360" [label="add.4360 \n bf16[32]"];
	"multiply.4373" [label="multiply.4373 \n bf16[32]"];
	"constant.4374" [label="constant.4374 \n bf16[] constant(0), metadata="];
	"reduce.4380" [label="reduce.4380 \n bf16[] reduce(bf16[32]"];
	"sqrt.4381" [label="sqrt.4381 \n bf16[] sqrt(bf16[] %reduce.4380), metadata="];
	"multiply.4383" [label="multiply.4383 \n bf16[] multiply(bf16[] %sqrt.4381, bf16[] %sqrt.4381), metadata="];
	"reshape.853" [label="reshape.853 \n bf16[1]"];
	"add.4431" [label="add.4431 \n bf16[1]"];
	"p76.4316" [label="p76.4316 \n bf16[32]"];
	"multiply.4305" [label="multiply.4305 \n bf16[4096,1024,32]"];
	"constant.4306" [label="constant.4306 \n bf16[] constant(0), metadata="];
	"reduce.4312" [label="reduce.4312 \n bf16[32]"];
	"add.4317" [label="add.4317 \n bf16[32]"];
	"multiply.4330" [label="multiply.4330 \n bf16[32]"];
	"constant.4331" [label="constant.4331 \n bf16[] constant(0), metadata="];
	"reduce.4337" [label="reduce.4337 \n bf16[] reduce(bf16[32]"];
	"sqrt.4338" [label="sqrt.4338 \n bf16[] sqrt(bf16[] %reduce.4337), metadata="];
	"multiply.4340" [label="multiply.4340 \n bf16[] multiply(bf16[] %sqrt.4338, bf16[] %sqrt.4338), metadata="];
	"reshape.857" [label="reshape.857 \n bf16[1]"];
	"add.4433" [label="add.4433 \n bf16[1]"];
	"p75.4273" [label="p75.4273 \n bf16[32]"];
	"multiply.4262" [label="multiply.4262 \n bf16[4096,1024,32]"];
	"constant.4263" [label="constant.4263 \n bf16[] constant(0), metadata="];
	"reduce.4269" [label="reduce.4269 \n bf16[32]"];
	"add.4274" [label="add.4274 \n bf16[32]"];
	"multiply.4287" [label="multiply.4287 \n bf16[32]"];
	"constant.4288" [label="constant.4288 \n bf16[] constant(0), metadata="];
	"reduce.4294" [label="reduce.4294 \n bf16[] reduce(bf16[32]"];
	"sqrt.4295" [label="sqrt.4295 \n bf16[] sqrt(bf16[] %reduce.4294), metadata="];
	"multiply.4297" [label="multiply.4297 \n bf16[] multiply(bf16[] %sqrt.4295, bf16[] %sqrt.4295), metadata="];
	"reshape.861" [label="reshape.861 \n bf16[1]"];
	"add.4435" [label="add.4435 \n bf16[1]"];
	"p74.4230" [label="p74.4230 \n bf16[32]"];
	"multiply.4219" [label="multiply.4219 \n bf16[4096,1024,32]"];
	"constant.4220" [label="constant.4220 \n bf16[] constant(0), metadata="];
	"reduce.4226" [label="reduce.4226 \n bf16[32]"];
	"add.4231" [label="add.4231 \n bf16[32]"];
	"multiply.4244" [label="multiply.4244 \n bf16[32]"];
	"constant.4245" [label="constant.4245 \n bf16[] constant(0), metadata="];
	"reduce.4251" [label="reduce.4251 \n bf16[] reduce(bf16[32]"];
	"sqrt.4252" [label="sqrt.4252 \n bf16[] sqrt(bf16[] %reduce.4251), metadata="];
	"multiply.4254" [label="multiply.4254 \n bf16[] multiply(bf16[] %sqrt.4252, bf16[] %sqrt.4252), metadata="];
	"reshape.866" [label="reshape.866 \n bf16[1]"];
	"add.4437" [label="add.4437 \n bf16[1]"];
	"p73.4187" [label="p73.4187 \n bf16[32]"];
	"multiply.4176" [label="multiply.4176 \n bf16[4096,1024,32]"];
	"constant.4177" [label="constant.4177 \n bf16[] constant(0), metadata="];
	"reduce.4183" [label="reduce.4183 \n bf16[32]"];
	"add.4188" [label="add.4188 \n bf16[32]"];
	"multiply.4201" [label="multiply.4201 \n bf16[32]"];
	"constant.4202" [label="constant.4202 \n bf16[] constant(0), metadata="];
	"reduce.4208" [label="reduce.4208 \n bf16[] reduce(bf16[32]"];
	"sqrt.4209" [label="sqrt.4209 \n bf16[] sqrt(bf16[] %reduce.4208), metadata="];
	"multiply.4211" [label="multiply.4211 \n bf16[] multiply(bf16[] %sqrt.4209, bf16[] %sqrt.4209), metadata="];
	"reshape.871" [label="reshape.871 \n bf16[1]"];
	"add.4439" [label="add.4439 \n bf16[1]"];
	"p72.4144" [label="p72.4144 \n bf16[32]"];
	"multiply.4133" [label="multiply.4133 \n bf16[4096,1024,32]"];
	"constant.4134" [label="constant.4134 \n bf16[] constant(0), metadata="];
	"reduce.4140" [label="reduce.4140 \n bf16[32]"];
	"add.4145" [label="add.4145 \n bf16[32]"];
	"multiply.4158" [label="multiply.4158 \n bf16[32]"];
	"constant.4159" [label="constant.4159 \n bf16[] constant(0), metadata="];
	"reduce.4165" [label="reduce.4165 \n bf16[] reduce(bf16[32]"];
	"sqrt.4166" [label="sqrt.4166 \n bf16[] sqrt(bf16[] %reduce.4165), metadata="];
	"multiply.4168" [label="multiply.4168 \n bf16[] multiply(bf16[] %sqrt.4166, bf16[] %sqrt.4166), metadata="];
	"reshape.875" [label="reshape.875 \n bf16[1]"];
	"add.4441" [label="add.4441 \n bf16[1]"];
	"p71.4101" [label="p71.4101 \n bf16[32]"];
	"multiply.4090" [label="multiply.4090 \n bf16[4096,1024,32]"];
	"constant.4091" [label="constant.4091 \n bf16[] constant(0), metadata="];
	"reduce.4097" [label="reduce.4097 \n bf16[32]"];
	"add.4102" [label="add.4102 \n bf16[32]"];
	"multiply.4115" [label="multiply.4115 \n bf16[32]"];
	"constant.4116" [label="constant.4116 \n bf16[] constant(0), metadata="];
	"reduce.4122" [label="reduce.4122 \n bf16[] reduce(bf16[32]"];
	"sqrt.4123" [label="sqrt.4123 \n bf16[] sqrt(bf16[] %reduce.4122), metadata="];
	"multiply.4125" [label="multiply.4125 \n bf16[] multiply(bf16[] %sqrt.4123, bf16[] %sqrt.4123), metadata="];
	"reshape.879" [label="reshape.879 \n bf16[1]"];
	"add.4443" [label="add.4443 \n bf16[1]"];
	"p70.4058" [label="p70.4058 \n bf16[32]"];
	"multiply.4047" [label="multiply.4047 \n bf16[4096,1024,32]"];
	"constant.4048" [label="constant.4048 \n bf16[] constant(0), metadata="];
	"reduce.4054" [label="reduce.4054 \n bf16[32]"];
	"add.4059" [label="add.4059 \n bf16[32]"];
	"multiply.4072" [label="multiply.4072 \n bf16[32]"];
	"constant.4073" [label="constant.4073 \n bf16[] constant(0), metadata="];
	"reduce.4079" [label="reduce.4079 \n bf16[] reduce(bf16[32]"];
	"sqrt.4080" [label="sqrt.4080 \n bf16[] sqrt(bf16[] %reduce.4079), metadata="];
	"multiply.4082" [label="multiply.4082 \n bf16[] multiply(bf16[] %sqrt.4080, bf16[] %sqrt.4080), metadata="];
	"reshape.883" [label="reshape.883 \n bf16[1]"];
	"add.4445" [label="add.4445 \n bf16[1]"];
	"multiply.4028" [label="multiply.4028 \n bf16[32000,32]"];
	"constant.4029" [label="constant.4029 \n bf16[] constant(0), metadata="];
	"reduce.4035" [label="reduce.4035 \n bf16[] reduce(bf16[32000,32]"];
	"sqrt.4036" [label="sqrt.4036 \n bf16[] sqrt(bf16[] %reduce.4035), metadata="];
	"multiply.4038" [label="multiply.4038 \n bf16[] multiply(bf16[] %sqrt.4036, bf16[] %sqrt.4036), metadata="];
	"reshape.885" [label="reshape.885 \n bf16[1]"];
	"add.4449" [label="add.4449 \n bf16[1]"];
	"p68.3866" [label="p68.3866 \n bf16[96,32]"];
	"reshape.3862" [label="reshape.3862 \n bf16[4194304,96]"];
	"transpose.3863" [label="transpose.3863 \n bf16[96,4194304]"];
	"reshape.3618" [label="reshape.3618 \n bf16[4194304,32]"];
	"dot.3864" [label="dot.3864 \n bf16[96,32]"];
	"add.3867" [label="add.3867 \n bf16[96,32]"];
	"multiply.3880" [label="multiply.3880 \n bf16[96,32]"];
	"constant.3881" [label="constant.3881 \n bf16[] constant(0), metadata="];
	"reduce.3887" [label="reduce.3887 \n bf16[] reduce(bf16[96,32]"];
	"sqrt.3888" [label="sqrt.3888 \n bf16[] sqrt(bf16[] %reduce.3887), metadata="];
	"multiply.3890" [label="multiply.3890 \n bf16[] multiply(bf16[] %sqrt.3888, bf16[] %sqrt.3888), metadata="];
	"reshape.889" [label="reshape.889 \n bf16[1]"];
	"add.4451" [label="add.4451 \n bf16[1]"];
	"p67.3586" [label="p67.3586 \n bf16[32,32]"];
	"reshape.3582" [label="reshape.3582 \n bf16[4194304,32]"];
	"transpose.3583" [label="transpose.3583 \n bf16[32,4194304]"];
	"reshape.3503" [label="reshape.3503 \n bf16[1024,32,4096,1]"];
	"transpose.3504" [label="transpose.3504 \n bf16[4096,1024,32,1]"];
	"reshape.3506" [label="reshape.3506 \n bf16[4194304,32]"];
	"dot.3584" [label="dot.3584 \n bf16[32,32]"];
	"add.3587" [label="add.3587 \n bf16[32,32]"];
	"multiply.3600" [label="multiply.3600 \n bf16[32,32]"];
	"constant.3601" [label="constant.3601 \n bf16[] constant(0), metadata="];
	"reduce.3607" [label="reduce.3607 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.3608" [label="sqrt.3608 \n bf16[] sqrt(bf16[] %reduce.3607), metadata="];
	"multiply.3610" [label="multiply.3610 \n bf16[] multiply(bf16[] %sqrt.3608, bf16[] %sqrt.3608), metadata="];
	"reshape.898" [label="reshape.898 \n bf16[1]"];
	"add.4453" [label="add.4453 \n bf16[1]"];
	"p66.3471" [label="p66.3471 \n bf16[64,32]"];
	"reshape.3467" [label="reshape.3467 \n bf16[4194304,64]"];
	"transpose.3468" [label="transpose.3468 \n bf16[64,4194304]"];
	"reshape.3420" [label="reshape.3420 \n bf16[4194304,32]"];
	"dot.3469" [label="dot.3469 \n bf16[64,32]"];
	"add.3472" [label="add.3472 \n bf16[64,32]"];
	"multiply.3485" [label="multiply.3485 \n bf16[64,32]"];
	"constant.3486" [label="constant.3486 \n bf16[] constant(0), metadata="];
	"reduce.3492" [label="reduce.3492 \n bf16[] reduce(bf16[64,32]"];
	"sqrt.3493" [label="sqrt.3493 \n bf16[] sqrt(bf16[] %reduce.3492), metadata="];
	"multiply.3495" [label="multiply.3495 \n bf16[] multiply(bf16[] %sqrt.3493, bf16[] %sqrt.3493), metadata="];
	"reshape.902" [label="reshape.902 \n bf16[1]"];
	"add.4455" [label="add.4455 \n bf16[1]"];
	"p65.3388" [label="p65.3388 \n bf16[32,32]"];
	"reshape.3384" [label="reshape.3384 \n bf16[4194304,32]"];
	"transpose.3385" [label="transpose.3385 \n bf16[32,4194304]"];
	"reshape.3308" [label="reshape.3308 \n bf16[4194304,32]"];
	"dot.3386" [label="dot.3386 \n bf16[32,32]"];
	"add.3389" [label="add.3389 \n bf16[32,32]"];
	"multiply.3402" [label="multiply.3402 \n bf16[32,32]"];
	"constant.3403" [label="constant.3403 \n bf16[] constant(0), metadata="];
	"reduce.3409" [label="reduce.3409 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.3410" [label="sqrt.3410 \n bf16[] sqrt(bf16[] %reduce.3409), metadata="];
	"multiply.3412" [label="multiply.3412 \n bf16[] multiply(bf16[] %sqrt.3410, bf16[] %sqrt.3410), metadata="];
	"reshape.907" [label="reshape.907 \n bf16[1]"];
	"add.4457" [label="add.4457 \n bf16[1]"];
	"p64.3276" [label="p64.3276 \n bf16[96,32]"];
	"reshape.3272" [label="reshape.3272 \n bf16[4194304,96]"];
	"transpose.3273" [label="transpose.3273 \n bf16[96,4194304]"];
	"reshape.3028" [label="reshape.3028 \n bf16[4194304,32]"];
	"dot.3274" [label="dot.3274 \n bf16[96,32]"];
	"add.3277" [label="add.3277 \n bf16[96,32]"];
	"multiply.3290" [label="multiply.3290 \n bf16[96,32]"];
	"constant.3291" [label="constant.3291 \n bf16[] constant(0), metadata="];
	"reduce.3297" [label="reduce.3297 \n bf16[] reduce(bf16[96,32]"];
	"sqrt.3298" [label="sqrt.3298 \n bf16[] sqrt(bf16[] %reduce.3297), metadata="];
	"multiply.3300" [label="multiply.3300 \n bf16[] multiply(bf16[] %sqrt.3298, bf16[] %sqrt.3298), metadata="];
	"reshape.911" [label="reshape.911 \n bf16[1]"];
	"add.4459" [label="add.4459 \n bf16[1]"];
	"p63.2996" [label="p63.2996 \n bf16[32,32]"];
	"reshape.2992" [label="reshape.2992 \n bf16[4194304,32]"];
	"transpose.2993" [label="transpose.2993 \n bf16[32,4194304]"];
	"reshape.2913" [label="reshape.2913 \n bf16[1024,32,4096,1]"];
	"transpose.2914" [label="transpose.2914 \n bf16[4096,1024,32,1]"];
	"reshape.2916" [label="reshape.2916 \n bf16[4194304,32]"];
	"dot.2994" [label="dot.2994 \n bf16[32,32]"];
	"add.2997" [label="add.2997 \n bf16[32,32]"];
	"multiply.3010" [label="multiply.3010 \n bf16[32,32]"];
	"constant.3011" [label="constant.3011 \n bf16[] constant(0), metadata="];
	"reduce.3017" [label="reduce.3017 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.3018" [label="sqrt.3018 \n bf16[] sqrt(bf16[] %reduce.3017), metadata="];
	"multiply.3020" [label="multiply.3020 \n bf16[] multiply(bf16[] %sqrt.3018, bf16[] %sqrt.3018), metadata="];
	"reshape.918" [label="reshape.918 \n bf16[1]"];
	"add.4461" [label="add.4461 \n bf16[1]"];
	"p62.2881" [label="p62.2881 \n bf16[64,32]"];
	"reshape.2877" [label="reshape.2877 \n bf16[4194304,64]"];
	"transpose.2878" [label="transpose.2878 \n bf16[64,4194304]"];
	"reshape.2830" [label="reshape.2830 \n bf16[4194304,32]"];
	"dot.2879" [label="dot.2879 \n bf16[64,32]"];
	"add.2882" [label="add.2882 \n bf16[64,32]"];
	"multiply.2895" [label="multiply.2895 \n bf16[64,32]"];
	"constant.2896" [label="constant.2896 \n bf16[] constant(0), metadata="];
	"reduce.2902" [label="reduce.2902 \n bf16[] reduce(bf16[64,32]"];
	"sqrt.2903" [label="sqrt.2903 \n bf16[] sqrt(bf16[] %reduce.2902), metadata="];
	"multiply.2905" [label="multiply.2905 \n bf16[] multiply(bf16[] %sqrt.2903, bf16[] %sqrt.2903), metadata="];
	"reshape.921" [label="reshape.921 \n bf16[1]"];
	"add.4463" [label="add.4463 \n bf16[1]"];
	"p61.2798" [label="p61.2798 \n bf16[32,32]"];
	"reshape.2794" [label="reshape.2794 \n bf16[4194304,32]"];
	"transpose.2795" [label="transpose.2795 \n bf16[32,4194304]"];
	"reshape.2718" [label="reshape.2718 \n bf16[4194304,32]"];
	"dot.2796" [label="dot.2796 \n bf16[32,32]"];
	"add.2799" [label="add.2799 \n bf16[32,32]"];
	"multiply.2812" [label="multiply.2812 \n bf16[32,32]"];
	"constant.2813" [label="constant.2813 \n bf16[] constant(0), metadata="];
	"reduce.2819" [label="reduce.2819 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.2820" [label="sqrt.2820 \n bf16[] sqrt(bf16[] %reduce.2819), metadata="];
	"multiply.2822" [label="multiply.2822 \n bf16[] multiply(bf16[] %sqrt.2820, bf16[] %sqrt.2820), metadata="];
	"reshape.924" [label="reshape.924 \n bf16[1]"];
	"add.4465" [label="add.4465 \n bf16[1]"];
	"p60.2686" [label="p60.2686 \n bf16[96,32]"];
	"reshape.2682" [label="reshape.2682 \n bf16[4194304,96]"];
	"transpose.2683" [label="transpose.2683 \n bf16[96,4194304]"];
	"reshape.2438" [label="reshape.2438 \n bf16[4194304,32]"];
	"dot.2684" [label="dot.2684 \n bf16[96,32]"];
	"add.2687" [label="add.2687 \n bf16[96,32]"];
	"multiply.2700" [label="multiply.2700 \n bf16[96,32]"];
	"constant.2701" [label="constant.2701 \n bf16[] constant(0), metadata="];
	"reduce.2707" [label="reduce.2707 \n bf16[] reduce(bf16[96,32]"];
	"sqrt.2708" [label="sqrt.2708 \n bf16[] sqrt(bf16[] %reduce.2707), metadata="];
	"multiply.2710" [label="multiply.2710 \n bf16[] multiply(bf16[] %sqrt.2708, bf16[] %sqrt.2708), metadata="];
	"reshape.927" [label="reshape.927 \n bf16[1]"];
	"add.4467" [label="add.4467 \n bf16[1]"];
	"p59.2406" [label="p59.2406 \n bf16[32,32]"];
	"reshape.2402" [label="reshape.2402 \n bf16[4194304,32]"];
	"transpose.2403" [label="transpose.2403 \n bf16[32,4194304]"];
	"reshape.2323" [label="reshape.2323 \n bf16[1024,32,4096,1]"];
	"transpose.2324" [label="transpose.2324 \n bf16[4096,1024,32,1]"];
	"reshape.2326" [label="reshape.2326 \n bf16[4194304,32]"];
	"dot.2404" [label="dot.2404 \n bf16[32,32]"];
	"add.2407" [label="add.2407 \n bf16[32,32]"];
	"multiply.2420" [label="multiply.2420 \n bf16[32,32]"];
	"constant.2421" [label="constant.2421 \n bf16[] constant(0), metadata="];
	"reduce.2427" [label="reduce.2427 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.2428" [label="sqrt.2428 \n bf16[] sqrt(bf16[] %reduce.2427), metadata="];
	"multiply.2430" [label="multiply.2430 \n bf16[] multiply(bf16[] %sqrt.2428, bf16[] %sqrt.2428), metadata="];
	"reshape.934" [label="reshape.934 \n bf16[1]"];
	"add.4469" [label="add.4469 \n bf16[1]"];
	"p58.2291" [label="p58.2291 \n bf16[64,32]"];
	"reshape.2287" [label="reshape.2287 \n bf16[4194304,64]"];
	"transpose.2288" [label="transpose.2288 \n bf16[64,4194304]"];
	"reshape.2240" [label="reshape.2240 \n bf16[4194304,32]"];
	"dot.2289" [label="dot.2289 \n bf16[64,32]"];
	"add.2292" [label="add.2292 \n bf16[64,32]"];
	"multiply.2305" [label="multiply.2305 \n bf16[64,32]"];
	"constant.2306" [label="constant.2306 \n bf16[] constant(0), metadata="];
	"reduce.2312" [label="reduce.2312 \n bf16[] reduce(bf16[64,32]"];
	"sqrt.2313" [label="sqrt.2313 \n bf16[] sqrt(bf16[] %reduce.2312), metadata="];
	"multiply.2315" [label="multiply.2315 \n bf16[] multiply(bf16[] %sqrt.2313, bf16[] %sqrt.2313), metadata="];
	"reshape.937" [label="reshape.937 \n bf16[1]"];
	"add.4471" [label="add.4471 \n bf16[1]"];
	"p57.2208" [label="p57.2208 \n bf16[32,32]"];
	"reshape.2204" [label="reshape.2204 \n bf16[4194304,32]"];
	"transpose.2205" [label="transpose.2205 \n bf16[32,4194304]"];
	"reshape.2128" [label="reshape.2128 \n bf16[4194304,32]"];
	"dot.2206" [label="dot.2206 \n bf16[32,32]"];
	"add.2209" [label="add.2209 \n bf16[32,32]"];
	"multiply.2222" [label="multiply.2222 \n bf16[32,32]"];
	"constant.2223" [label="constant.2223 \n bf16[] constant(0), metadata="];
	"reduce.2229" [label="reduce.2229 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.2230" [label="sqrt.2230 \n bf16[] sqrt(bf16[] %reduce.2229), metadata="];
	"multiply.2232" [label="multiply.2232 \n bf16[] multiply(bf16[] %sqrt.2230, bf16[] %sqrt.2230), metadata="];
	"reshape.941" [label="reshape.941 \n bf16[1]"];
	"add.4473" [label="add.4473 \n bf16[1]"];
	"p56.2096" [label="p56.2096 \n bf16[96,32]"];
	"reshape.2092" [label="reshape.2092 \n bf16[4194304,96]"];
	"transpose.2093" [label="transpose.2093 \n bf16[96,4194304]"];
	"reshape.1848" [label="reshape.1848 \n bf16[4194304,32]"];
	"dot.2094" [label="dot.2094 \n bf16[96,32]"];
	"add.2097" [label="add.2097 \n bf16[96,32]"];
	"multiply.2110" [label="multiply.2110 \n bf16[96,32]"];
	"constant.2111" [label="constant.2111 \n bf16[] constant(0), metadata="];
	"reduce.2117" [label="reduce.2117 \n bf16[] reduce(bf16[96,32]"];
	"sqrt.2118" [label="sqrt.2118 \n bf16[] sqrt(bf16[] %reduce.2117), metadata="];
	"multiply.2120" [label="multiply.2120 \n bf16[] multiply(bf16[] %sqrt.2118, bf16[] %sqrt.2118), metadata="];
	"reshape.944" [label="reshape.944 \n bf16[1]"];
	"add.4475" [label="add.4475 \n bf16[1]"];
	"p55.1816" [label="p55.1816 \n bf16[32,32]"];
	"reshape.1812" [label="reshape.1812 \n bf16[4194304,32]"];
	"transpose.1813" [label="transpose.1813 \n bf16[32,4194304]"];
	"reshape.1733" [label="reshape.1733 \n bf16[1024,32,4096,1]"];
	"transpose.1734" [label="transpose.1734 \n bf16[4096,1024,32,1]"];
	"reshape.1736" [label="reshape.1736 \n bf16[4194304,32]"];
	"dot.1814" [label="dot.1814 \n bf16[32,32]"];
	"add.1817" [label="add.1817 \n bf16[32,32]"];
	"multiply.1830" [label="multiply.1830 \n bf16[32,32]"];
	"constant.1831" [label="constant.1831 \n bf16[] constant(0), metadata="];
	"reduce.1837" [label="reduce.1837 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.1838" [label="sqrt.1838 \n bf16[] sqrt(bf16[] %reduce.1837), metadata="];
	"multiply.1840" [label="multiply.1840 \n bf16[] multiply(bf16[] %sqrt.1838, bf16[] %sqrt.1838), metadata="];
	"reshape.950" [label="reshape.950 \n bf16[1]"];
	"add.4477" [label="add.4477 \n bf16[1]"];
	"p54.1701" [label="p54.1701 \n bf16[64,32]"];
	"reshape.1697" [label="reshape.1697 \n bf16[4194304,64]"];
	"transpose.1698" [label="transpose.1698 \n bf16[64,4194304]"];
	"reshape.1650" [label="reshape.1650 \n bf16[4194304,32]"];
	"dot.1699" [label="dot.1699 \n bf16[64,32]"];
	"add.1702" [label="add.1702 \n bf16[64,32]"];
	"multiply.1715" [label="multiply.1715 \n bf16[64,32]"];
	"constant.1716" [label="constant.1716 \n bf16[] constant(0), metadata="];
	"reduce.1722" [label="reduce.1722 \n bf16[] reduce(bf16[64,32]"];
	"sqrt.1723" [label="sqrt.1723 \n bf16[] sqrt(bf16[] %reduce.1722), metadata="];
	"multiply.1725" [label="multiply.1725 \n bf16[] multiply(bf16[] %sqrt.1723, bf16[] %sqrt.1723), metadata="];
	"reshape.953" [label="reshape.953 \n bf16[1]"];
	"add.4479" [label="add.4479 \n bf16[1]"];
	"p53.1618" [label="p53.1618 \n bf16[32,32]"];
	"reshape.1614" [label="reshape.1614 \n bf16[4194304,32]"];
	"transpose.1615" [label="transpose.1615 \n bf16[32,4194304]"];
	"reshape.1553" [label="reshape.1553 \n bf16[4194304,32]"];
	"dot.1616" [label="dot.1616 \n bf16[32,32]"];
	"add.1619" [label="add.1619 \n bf16[32,32]"];
	"multiply.1632" [label="multiply.1632 \n bf16[32,32]"];
	"constant.1633" [label="constant.1633 \n bf16[] constant(0), metadata="];
	"reduce.1639" [label="reduce.1639 \n bf16[] reduce(bf16[32,32]"];
	"sqrt.1640" [label="sqrt.1640 \n bf16[] sqrt(bf16[] %reduce.1639), metadata="];
	"multiply.1642" [label="multiply.1642 \n bf16[] multiply(bf16[] %sqrt.1640, bf16[] %sqrt.1640), metadata="];
	"reshape.956" [label="reshape.956 \n bf16[1]"];
	"add.4481" [label="add.4481 \n bf16[1]"];
	"p49.1521" [label="p49.1521 \n bf16[32000,32]"];
	"reshape.1517" [label="reshape.1517 \n bf16[4194304,32000]"];
	"transpose.1518" [label="transpose.1518 \n bf16[32000,4194304]"];
	"transpose.1331" [label="transpose.1331 \n bf16[1024,4096,32]"];
	"reshape.1332" [label="reshape.1332 \n bf16[4194304,32]"];
	"dot.1519" [label="dot.1519 \n bf16[32000,32]"];
	"add.1522" [label="add.1522 \n bf16[32000,32]"];
	"multiply.1535" [label="multiply.1535 \n bf16[32000,32]"];
	"constant.1536" [label="constant.1536 \n bf16[] constant(0), metadata="];
	"reduce.1542" [label="reduce.1542 \n bf16[] reduce(bf16[32000,32]"];
	"sqrt.1543" [label="sqrt.1543 \n bf16[] sqrt(bf16[] %reduce.1542), metadata="];
	"multiply.1545" [label="multiply.1545 \n bf16[] multiply(bf16[] %sqrt.1543, bf16[] %sqrt.1543), metadata="];
	"reshape.961" [label="reshape.961 \n bf16[1]"];
	"add.4483" [label="add.4483 \n bf16[1]"];
	"constant.170" [label="constant.170 \n bf16[1]"];
	"power.4484" [label="power.4484 \n bf16[1]"];
	"p40.1258" [label="p40.1258 \n bf16[] parameter(40), frontend_attributes="];
	"reshape.965" [label="reshape.965 \n bf16[1]"];
	"add.4486" [label="add.4486 \n bf16[1]"];
	"divide.4489" [label="divide.4489 \n bf16[1]"];
	"constant.173" [label="constant.173 \n bf16[1]"];
	"compare.4496" [label="compare.4496 \n pred[1]"];
	"constant.174" [label="constant.174 \n bf16[1]"];
	"select.4498" [label="select.4498 \n bf16[1]"];
	"reshape.4500" [label="reshape.4500 \n bf16[] reshape(bf16[1]"];
	"broadcast.4502" [label="broadcast.4502 \n bf16[32000,32]"];
	"multiply.4503" [label="multiply.4503 \n bf16[32000,32]"];
	"p82.4518" [label="p82.4518 \n bf16[] parameter(82), frontend_attributes="];
	"broadcast.4522" [label="broadcast.4522 \n bf16[32000,32]"];
	"multiply.4523" [label="multiply.4523 \n bf16[32000,32]"];
	"add.4528" [label="add.4528 \n bf16[32000,32]"];
	"p81.4505" [label="p81.4505 \n bf16[32000,32]"];
	"p80.4504" [label="p80.4504 \n bf16[] parameter(80), frontend_attributes="];
	"broadcast.4506" [label="broadcast.4506 \n bf16[32000,32]"];
	"multiply.4507" [label="multiply.4507 \n bf16[32000,32]"];
	"multiply.4509" [label="multiply.4509 \n bf16[32000,32]"];
	"p39.1252" [label="p39.1252 \n f32[] parameter(39), frontend_attributes="];
	"convert.4508" [label="convert.4508 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4510" [label="broadcast.4510 \n bf16[32000,32]"];
	"multiply.4511" [label="multiply.4511 \n bf16[32000,32]"];
	"add.4512" [label="add.4512 \n bf16[32000,32]"];
	"sqrt.4513" [label="sqrt.4513 \n bf16[32000,32]"];
	"p38.1251" [label="p38.1251 \n bf16[] parameter(38), frontend_attributes="];
	"broadcast.4514" [label="broadcast.4514 \n bf16[32000,32]"];
	"divide.4515" [label="divide.4515 \n bf16[32000,32]"];
	"p37.1249" [label="p37.1249 \n bf16[] parameter(37), frontend_attributes="];
	"broadcast.4516" [label="broadcast.4516 \n bf16[32000,32]"];
	"add.4517" [label="add.4517 \n bf16[32000,32]"];
	"divide.4544" [label="divide.4544 \n bf16[32000,32]"];
	"p36.1247" [label="p36.1247 \n f32[] parameter(36), frontend_attributes="];
	"convert.4543" [label="convert.4543 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4545" [label="broadcast.4545 \n bf16[32000,32]"];
	"multiply.4546" [label="multiply.4546 \n bf16[32000,32]"];
	"add.4547" [label="add.4547 \n bf16[32000,32]"];
	"p90.4601" [label="p90.4601 \n bf16[96,32]"];
	"broadcast.4602" [label="broadcast.4602 \n bf16[96,32]"];
	"multiply.4603" [label="multiply.4603 \n bf16[96,32]"];
	"broadcast.4604" [label="broadcast.4604 \n bf16[96,32]"];
	"multiply.4606" [label="multiply.4606 \n bf16[96,32]"];
	"subtract.4607" [label="subtract.4607 \n bf16[96,32]"];
	"p89.4592" [label="p89.4592 \n bf16[96,32]"];
	"broadcast.4593" [label="broadcast.4593 \n bf16[96,32]"];
	"multiply.4594" [label="multiply.4594 \n bf16[96,32]"];
	"constant.176" [label="constant.176 \n bf16[1]"];
	"compare.4566" [label="compare.4566 \n pred[1]"];
	"constant.177" [label="constant.177 \n bf16[1]"];
	"select.4568" [label="select.4568 \n bf16[1]"];
	"reshape.4570" [label="reshape.4570 \n bf16[] reshape(bf16[1]"];
	"broadcast.4572" [label="broadcast.4572 \n bf16[96,32]"];
	"multiply.4573" [label="multiply.4573 \n bf16[96,32]"];
	"broadcast.4590" [label="broadcast.4590 \n bf16[96,32]"];
	"multiply.4591" [label="multiply.4591 \n bf16[96,32]"];
	"add.4595" [label="add.4595 \n bf16[96,32]"];
	"p88.4574" [label="p88.4574 \n bf16[96,32]"];
	"broadcast.4575" [label="broadcast.4575 \n bf16[96,32]"];
	"multiply.4576" [label="multiply.4576 \n bf16[96,32]"];
	"multiply.4578" [label="multiply.4578 \n bf16[96,32]"];
	"convert.4577" [label="convert.4577 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4579" [label="broadcast.4579 \n bf16[96,32]"];
	"multiply.4580" [label="multiply.4580 \n bf16[96,32]"];
	"add.4581" [label="add.4581 \n bf16[96,32]"];
	"sqrt.4582" [label="sqrt.4582 \n bf16[96,32]"];
	"broadcast.4583" [label="broadcast.4583 \n bf16[96,32]"];
	"divide.4584" [label="divide.4584 \n bf16[96,32]"];
	"broadcast.4585" [label="broadcast.4585 \n bf16[96,32]"];
	"add.4586" [label="add.4586 \n bf16[96,32]"];
	"divide.4609" [label="divide.4609 \n bf16[96,32]"];
	"convert.4608" [label="convert.4608 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4610" [label="broadcast.4610 \n bf16[96,32]"];
	"multiply.4611" [label="multiply.4611 \n bf16[96,32]"];
	"add.4612" [label="add.4612 \n bf16[96,32]"];
	"p93.4666" [label="p93.4666 \n bf16[32,32]"];
	"broadcast.4667" [label="broadcast.4667 \n bf16[32,32]"];
	"multiply.4668" [label="multiply.4668 \n bf16[32,32]"];
	"broadcast.4669" [label="broadcast.4669 \n bf16[32,32]"];
	"multiply.4671" [label="multiply.4671 \n bf16[32,32]"];
	"subtract.4672" [label="subtract.4672 \n bf16[32,32]"];
	"p92.4657" [label="p92.4657 \n bf16[32,32]"];
	"broadcast.4658" [label="broadcast.4658 \n bf16[32,32]"];
	"multiply.4659" [label="multiply.4659 \n bf16[32,32]"];
	"constant.179" [label="constant.179 \n bf16[1]"];
	"compare.4631" [label="compare.4631 \n pred[1]"];
	"constant.180" [label="constant.180 \n bf16[1]"];
	"select.4633" [label="select.4633 \n bf16[1]"];
	"reshape.4635" [label="reshape.4635 \n bf16[] reshape(bf16[1]"];
	"broadcast.4637" [label="broadcast.4637 \n bf16[32,32]"];
	"multiply.4638" [label="multiply.4638 \n bf16[32,32]"];
	"broadcast.4655" [label="broadcast.4655 \n bf16[32,32]"];
	"multiply.4656" [label="multiply.4656 \n bf16[32,32]"];
	"add.4660" [label="add.4660 \n bf16[32,32]"];
	"p91.4639" [label="p91.4639 \n bf16[32,32]"];
	"broadcast.4640" [label="broadcast.4640 \n bf16[32,32]"];
	"multiply.4641" [label="multiply.4641 \n bf16[32,32]"];
	"multiply.4643" [label="multiply.4643 \n bf16[32,32]"];
	"convert.4642" [label="convert.4642 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4644" [label="broadcast.4644 \n bf16[32,32]"];
	"multiply.4645" [label="multiply.4645 \n bf16[32,32]"];
	"add.4646" [label="add.4646 \n bf16[32,32]"];
	"sqrt.4647" [label="sqrt.4647 \n bf16[32,32]"];
	"broadcast.4648" [label="broadcast.4648 \n bf16[32,32]"];
	"divide.4649" [label="divide.4649 \n bf16[32,32]"];
	"broadcast.4650" [label="broadcast.4650 \n bf16[32,32]"];
	"add.4651" [label="add.4651 \n bf16[32,32]"];
	"divide.4674" [label="divide.4674 \n bf16[32,32]"];
	"convert.4673" [label="convert.4673 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4675" [label="broadcast.4675 \n bf16[32,32]"];
	"multiply.4676" [label="multiply.4676 \n bf16[32,32]"];
	"add.4677" [label="add.4677 \n bf16[32,32]"];
	"p96.4731" [label="p96.4731 \n bf16[64,32]"];
	"broadcast.4732" [label="broadcast.4732 \n bf16[64,32]"];
	"multiply.4733" [label="multiply.4733 \n bf16[64,32]"];
	"broadcast.4734" [label="broadcast.4734 \n bf16[64,32]"];
	"multiply.4736" [label="multiply.4736 \n bf16[64,32]"];
	"subtract.4737" [label="subtract.4737 \n bf16[64,32]"];
	"p95.4722" [label="p95.4722 \n bf16[64,32]"];
	"broadcast.4723" [label="broadcast.4723 \n bf16[64,32]"];
	"multiply.4724" [label="multiply.4724 \n bf16[64,32]"];
	"constant.183" [label="constant.183 \n bf16[1]"];
	"compare.4696" [label="compare.4696 \n pred[1]"];
	"constant.184" [label="constant.184 \n bf16[1]"];
	"select.4698" [label="select.4698 \n bf16[1]"];
	"reshape.4700" [label="reshape.4700 \n bf16[] reshape(bf16[1]"];
	"broadcast.4702" [label="broadcast.4702 \n bf16[64,32]"];
	"multiply.4703" [label="multiply.4703 \n bf16[64,32]"];
	"broadcast.4720" [label="broadcast.4720 \n bf16[64,32]"];
	"multiply.4721" [label="multiply.4721 \n bf16[64,32]"];
	"add.4725" [label="add.4725 \n bf16[64,32]"];
	"p94.4704" [label="p94.4704 \n bf16[64,32]"];
	"broadcast.4705" [label="broadcast.4705 \n bf16[64,32]"];
	"multiply.4706" [label="multiply.4706 \n bf16[64,32]"];
	"multiply.4708" [label="multiply.4708 \n bf16[64,32]"];
	"convert.4707" [label="convert.4707 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4709" [label="broadcast.4709 \n bf16[64,32]"];
	"multiply.4710" [label="multiply.4710 \n bf16[64,32]"];
	"add.4711" [label="add.4711 \n bf16[64,32]"];
	"sqrt.4712" [label="sqrt.4712 \n bf16[64,32]"];
	"broadcast.4713" [label="broadcast.4713 \n bf16[64,32]"];
	"divide.4714" [label="divide.4714 \n bf16[64,32]"];
	"broadcast.4715" [label="broadcast.4715 \n bf16[64,32]"];
	"add.4716" [label="add.4716 \n bf16[64,32]"];
	"divide.4739" [label="divide.4739 \n bf16[64,32]"];
	"convert.4738" [label="convert.4738 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4740" [label="broadcast.4740 \n bf16[64,32]"];
	"multiply.4741" [label="multiply.4741 \n bf16[64,32]"];
	"add.4742" [label="add.4742 \n bf16[64,32]"];
	"p99.4796" [label="p99.4796 \n bf16[32,32]"];
	"broadcast.4797" [label="broadcast.4797 \n bf16[32,32]"];
	"multiply.4798" [label="multiply.4798 \n bf16[32,32]"];
	"broadcast.4799" [label="broadcast.4799 \n bf16[32,32]"];
	"multiply.4801" [label="multiply.4801 \n bf16[32,32]"];
	"subtract.4802" [label="subtract.4802 \n bf16[32,32]"];
	"p98.4787" [label="p98.4787 \n bf16[32,32]"];
	"broadcast.4788" [label="broadcast.4788 \n bf16[32,32]"];
	"multiply.4789" [label="multiply.4789 \n bf16[32,32]"];
	"constant.186" [label="constant.186 \n bf16[1]"];
	"compare.4761" [label="compare.4761 \n pred[1]"];
	"constant.187" [label="constant.187 \n bf16[1]"];
	"select.4763" [label="select.4763 \n bf16[1]"];
	"reshape.4765" [label="reshape.4765 \n bf16[] reshape(bf16[1]"];
	"broadcast.4767" [label="broadcast.4767 \n bf16[32,32]"];
	"multiply.4768" [label="multiply.4768 \n bf16[32,32]"];
	"broadcast.4785" [label="broadcast.4785 \n bf16[32,32]"];
	"multiply.4786" [label="multiply.4786 \n bf16[32,32]"];
	"add.4790" [label="add.4790 \n bf16[32,32]"];
	"p97.4769" [label="p97.4769 \n bf16[32,32]"];
	"broadcast.4770" [label="broadcast.4770 \n bf16[32,32]"];
	"multiply.4771" [label="multiply.4771 \n bf16[32,32]"];
	"multiply.4773" [label="multiply.4773 \n bf16[32,32]"];
	"convert.4772" [label="convert.4772 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4774" [label="broadcast.4774 \n bf16[32,32]"];
	"multiply.4775" [label="multiply.4775 \n bf16[32,32]"];
	"add.4776" [label="add.4776 \n bf16[32,32]"];
	"sqrt.4777" [label="sqrt.4777 \n bf16[32,32]"];
	"broadcast.4778" [label="broadcast.4778 \n bf16[32,32]"];
	"divide.4779" [label="divide.4779 \n bf16[32,32]"];
	"broadcast.4780" [label="broadcast.4780 \n bf16[32,32]"];
	"add.4781" [label="add.4781 \n bf16[32,32]"];
	"divide.4804" [label="divide.4804 \n bf16[32,32]"];
	"convert.4803" [label="convert.4803 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4805" [label="broadcast.4805 \n bf16[32,32]"];
	"multiply.4806" [label="multiply.4806 \n bf16[32,32]"];
	"add.4807" [label="add.4807 \n bf16[32,32]"];
	"p102.4860" [label="p102.4860 \n bf16[32]"];
	"broadcast.4861" [label="broadcast.4861 \n bf16[32]"];
	"multiply.4862" [label="multiply.4862 \n bf16[32]"];
	"broadcast.4863" [label="broadcast.4863 \n bf16[32]"];
	"multiply.4865" [label="multiply.4865 \n bf16[32]"];
	"subtract.4866" [label="subtract.4866 \n bf16[32]"];
	"p101.4851" [label="p101.4851 \n bf16[32]"];
	"broadcast.4852" [label="broadcast.4852 \n bf16[32]"];
	"multiply.4853" [label="multiply.4853 \n bf16[32]"];
	"constant.189" [label="constant.189 \n bf16[1]"];
	"compare.4826" [label="compare.4826 \n pred[1]"];
	"constant.190" [label="constant.190 \n bf16[1]"];
	"select.4828" [label="select.4828 \n bf16[1]"];
	"reshape.4830" [label="reshape.4830 \n bf16[] reshape(bf16[1]"];
	"broadcast.4831" [label="broadcast.4831 \n bf16[32]"];
	"multiply.4832" [label="multiply.4832 \n bf16[32]"];
	"broadcast.4849" [label="broadcast.4849 \n bf16[32]"];
	"multiply.4850" [label="multiply.4850 \n bf16[32]"];
	"add.4854" [label="add.4854 \n bf16[32]"];
	"p100.4833" [label="p100.4833 \n bf16[32]"];
	"broadcast.4834" [label="broadcast.4834 \n bf16[32]"];
	"multiply.4835" [label="multiply.4835 \n bf16[32]"];
	"multiply.4837" [label="multiply.4837 \n bf16[32]"];
	"convert.4836" [label="convert.4836 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4838" [label="broadcast.4838 \n bf16[32]"];
	"multiply.4839" [label="multiply.4839 \n bf16[32]"];
	"add.4840" [label="add.4840 \n bf16[32]"];
	"sqrt.4841" [label="sqrt.4841 \n bf16[32]"];
	"broadcast.4842" [label="broadcast.4842 \n bf16[32]"];
	"divide.4843" [label="divide.4843 \n bf16[32]"];
	"broadcast.4844" [label="broadcast.4844 \n bf16[32]"];
	"add.4845" [label="add.4845 \n bf16[32]"];
	"divide.4868" [label="divide.4868 \n bf16[32]"];
	"convert.4867" [label="convert.4867 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4869" [label="broadcast.4869 \n bf16[32]"];
	"multiply.4870" [label="multiply.4870 \n bf16[32]"];
	"add.4871" [label="add.4871 \n bf16[32]"];
	"p105.4924" [label="p105.4924 \n bf16[32]"];
	"broadcast.4925" [label="broadcast.4925 \n bf16[32]"];
	"multiply.4926" [label="multiply.4926 \n bf16[32]"];
	"broadcast.4927" [label="broadcast.4927 \n bf16[32]"];
	"multiply.4929" [label="multiply.4929 \n bf16[32]"];
	"subtract.4930" [label="subtract.4930 \n bf16[32]"];
	"p104.4915" [label="p104.4915 \n bf16[32]"];
	"broadcast.4916" [label="broadcast.4916 \n bf16[32]"];
	"multiply.4917" [label="multiply.4917 \n bf16[32]"];
	"constant.192" [label="constant.192 \n bf16[1]"];
	"compare.4890" [label="compare.4890 \n pred[1]"];
	"constant.193" [label="constant.193 \n bf16[1]"];
	"select.4892" [label="select.4892 \n bf16[1]"];
	"reshape.4894" [label="reshape.4894 \n bf16[] reshape(bf16[1]"];
	"broadcast.4895" [label="broadcast.4895 \n bf16[32]"];
	"multiply.4896" [label="multiply.4896 \n bf16[32]"];
	"broadcast.4913" [label="broadcast.4913 \n bf16[32]"];
	"multiply.4914" [label="multiply.4914 \n bf16[32]"];
	"add.4918" [label="add.4918 \n bf16[32]"];
	"p103.4897" [label="p103.4897 \n bf16[32]"];
	"broadcast.4898" [label="broadcast.4898 \n bf16[32]"];
	"multiply.4899" [label="multiply.4899 \n bf16[32]"];
	"multiply.4901" [label="multiply.4901 \n bf16[32]"];
	"convert.4900" [label="convert.4900 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4902" [label="broadcast.4902 \n bf16[32]"];
	"multiply.4903" [label="multiply.4903 \n bf16[32]"];
	"add.4904" [label="add.4904 \n bf16[32]"];
	"sqrt.4905" [label="sqrt.4905 \n bf16[32]"];
	"broadcast.4906" [label="broadcast.4906 \n bf16[32]"];
	"divide.4907" [label="divide.4907 \n bf16[32]"];
	"broadcast.4908" [label="broadcast.4908 \n bf16[32]"];
	"add.4909" [label="add.4909 \n bf16[32]"];
	"divide.4932" [label="divide.4932 \n bf16[32]"];
	"convert.4931" [label="convert.4931 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4933" [label="broadcast.4933 \n bf16[32]"];
	"multiply.4934" [label="multiply.4934 \n bf16[32]"];
	"add.4935" [label="add.4935 \n bf16[32]"];
	"p108.4989" [label="p108.4989 \n bf16[96,32]"];
	"broadcast.4990" [label="broadcast.4990 \n bf16[96,32]"];
	"multiply.4991" [label="multiply.4991 \n bf16[96,32]"];
	"broadcast.4992" [label="broadcast.4992 \n bf16[96,32]"];
	"multiply.4994" [label="multiply.4994 \n bf16[96,32]"];
	"subtract.4995" [label="subtract.4995 \n bf16[96,32]"];
	"p107.4980" [label="p107.4980 \n bf16[96,32]"];
	"broadcast.4981" [label="broadcast.4981 \n bf16[96,32]"];
	"multiply.4982" [label="multiply.4982 \n bf16[96,32]"];
	"constant.195" [label="constant.195 \n bf16[1]"];
	"compare.4954" [label="compare.4954 \n pred[1]"];
	"constant.196" [label="constant.196 \n bf16[1]"];
	"select.4956" [label="select.4956 \n bf16[1]"];
	"reshape.4958" [label="reshape.4958 \n bf16[] reshape(bf16[1]"];
	"broadcast.4960" [label="broadcast.4960 \n bf16[96,32]"];
	"multiply.4961" [label="multiply.4961 \n bf16[96,32]"];
	"broadcast.4978" [label="broadcast.4978 \n bf16[96,32]"];
	"multiply.4979" [label="multiply.4979 \n bf16[96,32]"];
	"add.4983" [label="add.4983 \n bf16[96,32]"];
	"p106.4962" [label="p106.4962 \n bf16[96,32]"];
	"broadcast.4963" [label="broadcast.4963 \n bf16[96,32]"];
	"multiply.4964" [label="multiply.4964 \n bf16[96,32]"];
	"multiply.4966" [label="multiply.4966 \n bf16[96,32]"];
	"convert.4965" [label="convert.4965 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.4967" [label="broadcast.4967 \n bf16[96,32]"];
	"multiply.4968" [label="multiply.4968 \n bf16[96,32]"];
	"add.4969" [label="add.4969 \n bf16[96,32]"];
	"sqrt.4970" [label="sqrt.4970 \n bf16[96,32]"];
	"broadcast.4971" [label="broadcast.4971 \n bf16[96,32]"];
	"divide.4972" [label="divide.4972 \n bf16[96,32]"];
	"broadcast.4973" [label="broadcast.4973 \n bf16[96,32]"];
	"add.4974" [label="add.4974 \n bf16[96,32]"];
	"divide.4997" [label="divide.4997 \n bf16[96,32]"];
	"convert.4996" [label="convert.4996 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.4998" [label="broadcast.4998 \n bf16[96,32]"];
	"multiply.4999" [label="multiply.4999 \n bf16[96,32]"];
	"add.5000" [label="add.5000 \n bf16[96,32]"];
	"p111.5054" [label="p111.5054 \n bf16[32,32]"];
	"broadcast.5055" [label="broadcast.5055 \n bf16[32,32]"];
	"multiply.5056" [label="multiply.5056 \n bf16[32,32]"];
	"broadcast.5057" [label="broadcast.5057 \n bf16[32,32]"];
	"multiply.5059" [label="multiply.5059 \n bf16[32,32]"];
	"subtract.5060" [label="subtract.5060 \n bf16[32,32]"];
	"p110.5045" [label="p110.5045 \n bf16[32,32]"];
	"broadcast.5046" [label="broadcast.5046 \n bf16[32,32]"];
	"multiply.5047" [label="multiply.5047 \n bf16[32,32]"];
	"constant.198" [label="constant.198 \n bf16[1]"];
	"compare.5019" [label="compare.5019 \n pred[1]"];
	"constant.199" [label="constant.199 \n bf16[1]"];
	"select.5021" [label="select.5021 \n bf16[1]"];
	"reshape.5023" [label="reshape.5023 \n bf16[] reshape(bf16[1]"];
	"broadcast.5025" [label="broadcast.5025 \n bf16[32,32]"];
	"multiply.5026" [label="multiply.5026 \n bf16[32,32]"];
	"broadcast.5043" [label="broadcast.5043 \n bf16[32,32]"];
	"multiply.5044" [label="multiply.5044 \n bf16[32,32]"];
	"add.5048" [label="add.5048 \n bf16[32,32]"];
	"p109.5027" [label="p109.5027 \n bf16[32,32]"];
	"broadcast.5028" [label="broadcast.5028 \n bf16[32,32]"];
	"multiply.5029" [label="multiply.5029 \n bf16[32,32]"];
	"multiply.5031" [label="multiply.5031 \n bf16[32,32]"];
	"convert.5030" [label="convert.5030 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5032" [label="broadcast.5032 \n bf16[32,32]"];
	"multiply.5033" [label="multiply.5033 \n bf16[32,32]"];
	"add.5034" [label="add.5034 \n bf16[32,32]"];
	"sqrt.5035" [label="sqrt.5035 \n bf16[32,32]"];
	"broadcast.5036" [label="broadcast.5036 \n bf16[32,32]"];
	"divide.5037" [label="divide.5037 \n bf16[32,32]"];
	"broadcast.5038" [label="broadcast.5038 \n bf16[32,32]"];
	"add.5039" [label="add.5039 \n bf16[32,32]"];
	"divide.5062" [label="divide.5062 \n bf16[32,32]"];
	"convert.5061" [label="convert.5061 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5063" [label="broadcast.5063 \n bf16[32,32]"];
	"multiply.5064" [label="multiply.5064 \n bf16[32,32]"];
	"add.5065" [label="add.5065 \n bf16[32,32]"];
	"p114.5119" [label="p114.5119 \n bf16[64,32]"];
	"broadcast.5120" [label="broadcast.5120 \n bf16[64,32]"];
	"multiply.5121" [label="multiply.5121 \n bf16[64,32]"];
	"broadcast.5122" [label="broadcast.5122 \n bf16[64,32]"];
	"multiply.5124" [label="multiply.5124 \n bf16[64,32]"];
	"subtract.5125" [label="subtract.5125 \n bf16[64,32]"];
	"p113.5110" [label="p113.5110 \n bf16[64,32]"];
	"broadcast.5111" [label="broadcast.5111 \n bf16[64,32]"];
	"multiply.5112" [label="multiply.5112 \n bf16[64,32]"];
	"constant.201" [label="constant.201 \n bf16[1]"];
	"compare.5084" [label="compare.5084 \n pred[1]"];
	"constant.202" [label="constant.202 \n bf16[1]"];
	"select.5086" [label="select.5086 \n bf16[1]"];
	"reshape.5088" [label="reshape.5088 \n bf16[] reshape(bf16[1]"];
	"broadcast.5090" [label="broadcast.5090 \n bf16[64,32]"];
	"multiply.5091" [label="multiply.5091 \n bf16[64,32]"];
	"broadcast.5108" [label="broadcast.5108 \n bf16[64,32]"];
	"multiply.5109" [label="multiply.5109 \n bf16[64,32]"];
	"add.5113" [label="add.5113 \n bf16[64,32]"];
	"p112.5092" [label="p112.5092 \n bf16[64,32]"];
	"broadcast.5093" [label="broadcast.5093 \n bf16[64,32]"];
	"multiply.5094" [label="multiply.5094 \n bf16[64,32]"];
	"multiply.5096" [label="multiply.5096 \n bf16[64,32]"];
	"convert.5095" [label="convert.5095 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5097" [label="broadcast.5097 \n bf16[64,32]"];
	"multiply.5098" [label="multiply.5098 \n bf16[64,32]"];
	"add.5099" [label="add.5099 \n bf16[64,32]"];
	"sqrt.5100" [label="sqrt.5100 \n bf16[64,32]"];
	"broadcast.5101" [label="broadcast.5101 \n bf16[64,32]"];
	"divide.5102" [label="divide.5102 \n bf16[64,32]"];
	"broadcast.5103" [label="broadcast.5103 \n bf16[64,32]"];
	"add.5104" [label="add.5104 \n bf16[64,32]"];
	"divide.5127" [label="divide.5127 \n bf16[64,32]"];
	"convert.5126" [label="convert.5126 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5128" [label="broadcast.5128 \n bf16[64,32]"];
	"multiply.5129" [label="multiply.5129 \n bf16[64,32]"];
	"add.5130" [label="add.5130 \n bf16[64,32]"];
	"p117.5184" [label="p117.5184 \n bf16[32,32]"];
	"broadcast.5185" [label="broadcast.5185 \n bf16[32,32]"];
	"multiply.5186" [label="multiply.5186 \n bf16[32,32]"];
	"broadcast.5187" [label="broadcast.5187 \n bf16[32,32]"];
	"multiply.5189" [label="multiply.5189 \n bf16[32,32]"];
	"subtract.5190" [label="subtract.5190 \n bf16[32,32]"];
	"p116.5175" [label="p116.5175 \n bf16[32,32]"];
	"broadcast.5176" [label="broadcast.5176 \n bf16[32,32]"];
	"multiply.5177" [label="multiply.5177 \n bf16[32,32]"];
	"constant.204" [label="constant.204 \n bf16[1]"];
	"compare.5149" [label="compare.5149 \n pred[1]"];
	"constant.205" [label="constant.205 \n bf16[1]"];
	"select.5151" [label="select.5151 \n bf16[1]"];
	"reshape.5153" [label="reshape.5153 \n bf16[] reshape(bf16[1]"];
	"broadcast.5155" [label="broadcast.5155 \n bf16[32,32]"];
	"multiply.5156" [label="multiply.5156 \n bf16[32,32]"];
	"broadcast.5173" [label="broadcast.5173 \n bf16[32,32]"];
	"multiply.5174" [label="multiply.5174 \n bf16[32,32]"];
	"add.5178" [label="add.5178 \n bf16[32,32]"];
	"p115.5157" [label="p115.5157 \n bf16[32,32]"];
	"broadcast.5158" [label="broadcast.5158 \n bf16[32,32]"];
	"multiply.5159" [label="multiply.5159 \n bf16[32,32]"];
	"multiply.5161" [label="multiply.5161 \n bf16[32,32]"];
	"convert.5160" [label="convert.5160 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5162" [label="broadcast.5162 \n bf16[32,32]"];
	"multiply.5163" [label="multiply.5163 \n bf16[32,32]"];
	"add.5164" [label="add.5164 \n bf16[32,32]"];
	"sqrt.5165" [label="sqrt.5165 \n bf16[32,32]"];
	"broadcast.5166" [label="broadcast.5166 \n bf16[32,32]"];
	"divide.5167" [label="divide.5167 \n bf16[32,32]"];
	"broadcast.5168" [label="broadcast.5168 \n bf16[32,32]"];
	"add.5169" [label="add.5169 \n bf16[32,32]"];
	"divide.5192" [label="divide.5192 \n bf16[32,32]"];
	"convert.5191" [label="convert.5191 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5193" [label="broadcast.5193 \n bf16[32,32]"];
	"multiply.5194" [label="multiply.5194 \n bf16[32,32]"];
	"add.5195" [label="add.5195 \n bf16[32,32]"];
	"p120.5248" [label="p120.5248 \n bf16[32]"];
	"broadcast.5249" [label="broadcast.5249 \n bf16[32]"];
	"multiply.5250" [label="multiply.5250 \n bf16[32]"];
	"broadcast.5251" [label="broadcast.5251 \n bf16[32]"];
	"multiply.5253" [label="multiply.5253 \n bf16[32]"];
	"subtract.5254" [label="subtract.5254 \n bf16[32]"];
	"p119.5239" [label="p119.5239 \n bf16[32]"];
	"broadcast.5240" [label="broadcast.5240 \n bf16[32]"];
	"multiply.5241" [label="multiply.5241 \n bf16[32]"];
	"constant.207" [label="constant.207 \n bf16[1]"];
	"compare.5214" [label="compare.5214 \n pred[1]"];
	"constant.208" [label="constant.208 \n bf16[1]"];
	"select.5216" [label="select.5216 \n bf16[1]"];
	"reshape.5218" [label="reshape.5218 \n bf16[] reshape(bf16[1]"];
	"broadcast.5219" [label="broadcast.5219 \n bf16[32]"];
	"multiply.5220" [label="multiply.5220 \n bf16[32]"];
	"broadcast.5237" [label="broadcast.5237 \n bf16[32]"];
	"multiply.5238" [label="multiply.5238 \n bf16[32]"];
	"add.5242" [label="add.5242 \n bf16[32]"];
	"p118.5221" [label="p118.5221 \n bf16[32]"];
	"broadcast.5222" [label="broadcast.5222 \n bf16[32]"];
	"multiply.5223" [label="multiply.5223 \n bf16[32]"];
	"multiply.5225" [label="multiply.5225 \n bf16[32]"];
	"convert.5224" [label="convert.5224 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5226" [label="broadcast.5226 \n bf16[32]"];
	"multiply.5227" [label="multiply.5227 \n bf16[32]"];
	"add.5228" [label="add.5228 \n bf16[32]"];
	"sqrt.5229" [label="sqrt.5229 \n bf16[32]"];
	"broadcast.5230" [label="broadcast.5230 \n bf16[32]"];
	"divide.5231" [label="divide.5231 \n bf16[32]"];
	"broadcast.5232" [label="broadcast.5232 \n bf16[32]"];
	"add.5233" [label="add.5233 \n bf16[32]"];
	"divide.5256" [label="divide.5256 \n bf16[32]"];
	"convert.5255" [label="convert.5255 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5257" [label="broadcast.5257 \n bf16[32]"];
	"multiply.5258" [label="multiply.5258 \n bf16[32]"];
	"add.5259" [label="add.5259 \n bf16[32]"];
	"p123.5312" [label="p123.5312 \n bf16[32]"];
	"broadcast.5313" [label="broadcast.5313 \n bf16[32]"];
	"multiply.5314" [label="multiply.5314 \n bf16[32]"];
	"broadcast.5315" [label="broadcast.5315 \n bf16[32]"];
	"multiply.5317" [label="multiply.5317 \n bf16[32]"];
	"subtract.5318" [label="subtract.5318 \n bf16[32]"];
	"p122.5303" [label="p122.5303 \n bf16[32]"];
	"broadcast.5304" [label="broadcast.5304 \n bf16[32]"];
	"multiply.5305" [label="multiply.5305 \n bf16[32]"];
	"constant.210" [label="constant.210 \n bf16[1]"];
	"compare.5278" [label="compare.5278 \n pred[1]"];
	"constant.211" [label="constant.211 \n bf16[1]"];
	"select.5280" [label="select.5280 \n bf16[1]"];
	"reshape.5282" [label="reshape.5282 \n bf16[] reshape(bf16[1]"];
	"broadcast.5283" [label="broadcast.5283 \n bf16[32]"];
	"multiply.5284" [label="multiply.5284 \n bf16[32]"];
	"broadcast.5301" [label="broadcast.5301 \n bf16[32]"];
	"multiply.5302" [label="multiply.5302 \n bf16[32]"];
	"add.5306" [label="add.5306 \n bf16[32]"];
	"p121.5285" [label="p121.5285 \n bf16[32]"];
	"broadcast.5286" [label="broadcast.5286 \n bf16[32]"];
	"multiply.5287" [label="multiply.5287 \n bf16[32]"];
	"multiply.5289" [label="multiply.5289 \n bf16[32]"];
	"convert.5288" [label="convert.5288 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5290" [label="broadcast.5290 \n bf16[32]"];
	"multiply.5291" [label="multiply.5291 \n bf16[32]"];
	"add.5292" [label="add.5292 \n bf16[32]"];
	"sqrt.5293" [label="sqrt.5293 \n bf16[32]"];
	"broadcast.5294" [label="broadcast.5294 \n bf16[32]"];
	"divide.5295" [label="divide.5295 \n bf16[32]"];
	"broadcast.5296" [label="broadcast.5296 \n bf16[32]"];
	"add.5297" [label="add.5297 \n bf16[32]"];
	"divide.5320" [label="divide.5320 \n bf16[32]"];
	"convert.5319" [label="convert.5319 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5321" [label="broadcast.5321 \n bf16[32]"];
	"multiply.5322" [label="multiply.5322 \n bf16[32]"];
	"add.5323" [label="add.5323 \n bf16[32]"];
	"p126.5377" [label="p126.5377 \n bf16[96,32]"];
	"broadcast.5378" [label="broadcast.5378 \n bf16[96,32]"];
	"multiply.5379" [label="multiply.5379 \n bf16[96,32]"];
	"broadcast.5380" [label="broadcast.5380 \n bf16[96,32]"];
	"multiply.5382" [label="multiply.5382 \n bf16[96,32]"];
	"subtract.5383" [label="subtract.5383 \n bf16[96,32]"];
	"p125.5368" [label="p125.5368 \n bf16[96,32]"];
	"broadcast.5369" [label="broadcast.5369 \n bf16[96,32]"];
	"multiply.5370" [label="multiply.5370 \n bf16[96,32]"];
	"constant.213" [label="constant.213 \n bf16[1]"];
	"compare.5342" [label="compare.5342 \n pred[1]"];
	"constant.214" [label="constant.214 \n bf16[1]"];
	"select.5344" [label="select.5344 \n bf16[1]"];
	"reshape.5346" [label="reshape.5346 \n bf16[] reshape(bf16[1]"];
	"broadcast.5348" [label="broadcast.5348 \n bf16[96,32]"];
	"multiply.5349" [label="multiply.5349 \n bf16[96,32]"];
	"broadcast.5366" [label="broadcast.5366 \n bf16[96,32]"];
	"multiply.5367" [label="multiply.5367 \n bf16[96,32]"];
	"add.5371" [label="add.5371 \n bf16[96,32]"];
	"p124.5350" [label="p124.5350 \n bf16[96,32]"];
	"broadcast.5351" [label="broadcast.5351 \n bf16[96,32]"];
	"multiply.5352" [label="multiply.5352 \n bf16[96,32]"];
	"multiply.5354" [label="multiply.5354 \n bf16[96,32]"];
	"convert.5353" [label="convert.5353 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5355" [label="broadcast.5355 \n bf16[96,32]"];
	"multiply.5356" [label="multiply.5356 \n bf16[96,32]"];
	"add.5357" [label="add.5357 \n bf16[96,32]"];
	"sqrt.5358" [label="sqrt.5358 \n bf16[96,32]"];
	"broadcast.5359" [label="broadcast.5359 \n bf16[96,32]"];
	"divide.5360" [label="divide.5360 \n bf16[96,32]"];
	"broadcast.5361" [label="broadcast.5361 \n bf16[96,32]"];
	"add.5362" [label="add.5362 \n bf16[96,32]"];
	"divide.5385" [label="divide.5385 \n bf16[96,32]"];
	"convert.5384" [label="convert.5384 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5386" [label="broadcast.5386 \n bf16[96,32]"];
	"multiply.5387" [label="multiply.5387 \n bf16[96,32]"];
	"add.5388" [label="add.5388 \n bf16[96,32]"];
	"p129.5442" [label="p129.5442 \n bf16[32,32]"];
	"broadcast.5443" [label="broadcast.5443 \n bf16[32,32]"];
	"multiply.5444" [label="multiply.5444 \n bf16[32,32]"];
	"broadcast.5445" [label="broadcast.5445 \n bf16[32,32]"];
	"multiply.5447" [label="multiply.5447 \n bf16[32,32]"];
	"subtract.5448" [label="subtract.5448 \n bf16[32,32]"];
	"p128.5433" [label="p128.5433 \n bf16[32,32]"];
	"broadcast.5434" [label="broadcast.5434 \n bf16[32,32]"];
	"multiply.5435" [label="multiply.5435 \n bf16[32,32]"];
	"constant.216" [label="constant.216 \n bf16[1]"];
	"compare.5407" [label="compare.5407 \n pred[1]"];
	"constant.217" [label="constant.217 \n bf16[1]"];
	"select.5409" [label="select.5409 \n bf16[1]"];
	"reshape.5411" [label="reshape.5411 \n bf16[] reshape(bf16[1]"];
	"broadcast.5413" [label="broadcast.5413 \n bf16[32,32]"];
	"multiply.5414" [label="multiply.5414 \n bf16[32,32]"];
	"broadcast.5431" [label="broadcast.5431 \n bf16[32,32]"];
	"multiply.5432" [label="multiply.5432 \n bf16[32,32]"];
	"add.5436" [label="add.5436 \n bf16[32,32]"];
	"p127.5415" [label="p127.5415 \n bf16[32,32]"];
	"broadcast.5416" [label="broadcast.5416 \n bf16[32,32]"];
	"multiply.5417" [label="multiply.5417 \n bf16[32,32]"];
	"multiply.5419" [label="multiply.5419 \n bf16[32,32]"];
	"convert.5418" [label="convert.5418 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5420" [label="broadcast.5420 \n bf16[32,32]"];
	"multiply.5421" [label="multiply.5421 \n bf16[32,32]"];
	"add.5422" [label="add.5422 \n bf16[32,32]"];
	"sqrt.5423" [label="sqrt.5423 \n bf16[32,32]"];
	"broadcast.5424" [label="broadcast.5424 \n bf16[32,32]"];
	"divide.5425" [label="divide.5425 \n bf16[32,32]"];
	"broadcast.5426" [label="broadcast.5426 \n bf16[32,32]"];
	"add.5427" [label="add.5427 \n bf16[32,32]"];
	"divide.5450" [label="divide.5450 \n bf16[32,32]"];
	"convert.5449" [label="convert.5449 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5451" [label="broadcast.5451 \n bf16[32,32]"];
	"multiply.5452" [label="multiply.5452 \n bf16[32,32]"];
	"add.5453" [label="add.5453 \n bf16[32,32]"];
	"p132.5507" [label="p132.5507 \n bf16[64,32]"];
	"broadcast.5508" [label="broadcast.5508 \n bf16[64,32]"];
	"multiply.5509" [label="multiply.5509 \n bf16[64,32]"];
	"broadcast.5510" [label="broadcast.5510 \n bf16[64,32]"];
	"multiply.5512" [label="multiply.5512 \n bf16[64,32]"];
	"subtract.5513" [label="subtract.5513 \n bf16[64,32]"];
	"p131.5498" [label="p131.5498 \n bf16[64,32]"];
	"broadcast.5499" [label="broadcast.5499 \n bf16[64,32]"];
	"multiply.5500" [label="multiply.5500 \n bf16[64,32]"];
	"constant.219" [label="constant.219 \n bf16[1]"];
	"compare.5472" [label="compare.5472 \n pred[1]"];
	"constant.220" [label="constant.220 \n bf16[1]"];
	"select.5474" [label="select.5474 \n bf16[1]"];
	"reshape.5476" [label="reshape.5476 \n bf16[] reshape(bf16[1]"];
	"broadcast.5478" [label="broadcast.5478 \n bf16[64,32]"];
	"multiply.5479" [label="multiply.5479 \n bf16[64,32]"];
	"broadcast.5496" [label="broadcast.5496 \n bf16[64,32]"];
	"multiply.5497" [label="multiply.5497 \n bf16[64,32]"];
	"add.5501" [label="add.5501 \n bf16[64,32]"];
	"p130.5480" [label="p130.5480 \n bf16[64,32]"];
	"broadcast.5481" [label="broadcast.5481 \n bf16[64,32]"];
	"multiply.5482" [label="multiply.5482 \n bf16[64,32]"];
	"multiply.5484" [label="multiply.5484 \n bf16[64,32]"];
	"convert.5483" [label="convert.5483 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5485" [label="broadcast.5485 \n bf16[64,32]"];
	"multiply.5486" [label="multiply.5486 \n bf16[64,32]"];
	"add.5487" [label="add.5487 \n bf16[64,32]"];
	"sqrt.5488" [label="sqrt.5488 \n bf16[64,32]"];
	"broadcast.5489" [label="broadcast.5489 \n bf16[64,32]"];
	"divide.5490" [label="divide.5490 \n bf16[64,32]"];
	"broadcast.5491" [label="broadcast.5491 \n bf16[64,32]"];
	"add.5492" [label="add.5492 \n bf16[64,32]"];
	"divide.5515" [label="divide.5515 \n bf16[64,32]"];
	"convert.5514" [label="convert.5514 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5516" [label="broadcast.5516 \n bf16[64,32]"];
	"multiply.5517" [label="multiply.5517 \n bf16[64,32]"];
	"add.5518" [label="add.5518 \n bf16[64,32]"];
	"p135.5572" [label="p135.5572 \n bf16[32,32]"];
	"broadcast.5573" [label="broadcast.5573 \n bf16[32,32]"];
	"multiply.5574" [label="multiply.5574 \n bf16[32,32]"];
	"broadcast.5575" [label="broadcast.5575 \n bf16[32,32]"];
	"multiply.5577" [label="multiply.5577 \n bf16[32,32]"];
	"subtract.5578" [label="subtract.5578 \n bf16[32,32]"];
	"p134.5563" [label="p134.5563 \n bf16[32,32]"];
	"broadcast.5564" [label="broadcast.5564 \n bf16[32,32]"];
	"multiply.5565" [label="multiply.5565 \n bf16[32,32]"];
	"constant.222" [label="constant.222 \n bf16[1]"];
	"compare.5537" [label="compare.5537 \n pred[1]"];
	"constant.223" [label="constant.223 \n bf16[1]"];
	"select.5539" [label="select.5539 \n bf16[1]"];
	"reshape.5541" [label="reshape.5541 \n bf16[] reshape(bf16[1]"];
	"broadcast.5543" [label="broadcast.5543 \n bf16[32,32]"];
	"multiply.5544" [label="multiply.5544 \n bf16[32,32]"];
	"broadcast.5561" [label="broadcast.5561 \n bf16[32,32]"];
	"multiply.5562" [label="multiply.5562 \n bf16[32,32]"];
	"add.5566" [label="add.5566 \n bf16[32,32]"];
	"p133.5545" [label="p133.5545 \n bf16[32,32]"];
	"broadcast.5546" [label="broadcast.5546 \n bf16[32,32]"];
	"multiply.5547" [label="multiply.5547 \n bf16[32,32]"];
	"multiply.5549" [label="multiply.5549 \n bf16[32,32]"];
	"convert.5548" [label="convert.5548 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5550" [label="broadcast.5550 \n bf16[32,32]"];
	"multiply.5551" [label="multiply.5551 \n bf16[32,32]"];
	"add.5552" [label="add.5552 \n bf16[32,32]"];
	"sqrt.5553" [label="sqrt.5553 \n bf16[32,32]"];
	"broadcast.5554" [label="broadcast.5554 \n bf16[32,32]"];
	"divide.5555" [label="divide.5555 \n bf16[32,32]"];
	"broadcast.5556" [label="broadcast.5556 \n bf16[32,32]"];
	"add.5557" [label="add.5557 \n bf16[32,32]"];
	"divide.5580" [label="divide.5580 \n bf16[32,32]"];
	"convert.5579" [label="convert.5579 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5581" [label="broadcast.5581 \n bf16[32,32]"];
	"multiply.5582" [label="multiply.5582 \n bf16[32,32]"];
	"add.5583" [label="add.5583 \n bf16[32,32]"];
	"p138.5636" [label="p138.5636 \n bf16[32]"];
	"broadcast.5637" [label="broadcast.5637 \n bf16[32]"];
	"multiply.5638" [label="multiply.5638 \n bf16[32]"];
	"broadcast.5639" [label="broadcast.5639 \n bf16[32]"];
	"multiply.5641" [label="multiply.5641 \n bf16[32]"];
	"subtract.5642" [label="subtract.5642 \n bf16[32]"];
	"p137.5627" [label="p137.5627 \n bf16[32]"];
	"broadcast.5628" [label="broadcast.5628 \n bf16[32]"];
	"multiply.5629" [label="multiply.5629 \n bf16[32]"];
	"constant.226" [label="constant.226 \n bf16[1]"];
	"compare.5602" [label="compare.5602 \n pred[1]"];
	"constant.228" [label="constant.228 \n bf16[1]"];
	"select.5604" [label="select.5604 \n bf16[1]"];
	"reshape.5606" [label="reshape.5606 \n bf16[] reshape(bf16[1]"];
	"broadcast.5607" [label="broadcast.5607 \n bf16[32]"];
	"multiply.5608" [label="multiply.5608 \n bf16[32]"];
	"broadcast.5625" [label="broadcast.5625 \n bf16[32]"];
	"multiply.5626" [label="multiply.5626 \n bf16[32]"];
	"add.5630" [label="add.5630 \n bf16[32]"];
	"p136.5609" [label="p136.5609 \n bf16[32]"];
	"broadcast.5610" [label="broadcast.5610 \n bf16[32]"];
	"multiply.5611" [label="multiply.5611 \n bf16[32]"];
	"multiply.5613" [label="multiply.5613 \n bf16[32]"];
	"convert.5612" [label="convert.5612 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5614" [label="broadcast.5614 \n bf16[32]"];
	"multiply.5615" [label="multiply.5615 \n bf16[32]"];
	"add.5616" [label="add.5616 \n bf16[32]"];
	"sqrt.5617" [label="sqrt.5617 \n bf16[32]"];
	"broadcast.5618" [label="broadcast.5618 \n bf16[32]"];
	"divide.5619" [label="divide.5619 \n bf16[32]"];
	"broadcast.5620" [label="broadcast.5620 \n bf16[32]"];
	"add.5621" [label="add.5621 \n bf16[32]"];
	"divide.5644" [label="divide.5644 \n bf16[32]"];
	"convert.5643" [label="convert.5643 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5645" [label="broadcast.5645 \n bf16[32]"];
	"multiply.5646" [label="multiply.5646 \n bf16[32]"];
	"add.5647" [label="add.5647 \n bf16[32]"];
	"p141.5700" [label="p141.5700 \n bf16[32]"];
	"broadcast.5701" [label="broadcast.5701 \n bf16[32]"];
	"multiply.5702" [label="multiply.5702 \n bf16[32]"];
	"broadcast.5703" [label="broadcast.5703 \n bf16[32]"];
	"multiply.5705" [label="multiply.5705 \n bf16[32]"];
	"subtract.5706" [label="subtract.5706 \n bf16[32]"];
	"p140.5691" [label="p140.5691 \n bf16[32]"];
	"broadcast.5692" [label="broadcast.5692 \n bf16[32]"];
	"multiply.5693" [label="multiply.5693 \n bf16[32]"];
	"constant.230" [label="constant.230 \n bf16[1]"];
	"compare.5666" [label="compare.5666 \n pred[1]"];
	"constant.231" [label="constant.231 \n bf16[1]"];
	"select.5668" [label="select.5668 \n bf16[1]"];
	"reshape.5670" [label="reshape.5670 \n bf16[] reshape(bf16[1]"];
	"broadcast.5671" [label="broadcast.5671 \n bf16[32]"];
	"multiply.5672" [label="multiply.5672 \n bf16[32]"];
	"broadcast.5689" [label="broadcast.5689 \n bf16[32]"];
	"multiply.5690" [label="multiply.5690 \n bf16[32]"];
	"add.5694" [label="add.5694 \n bf16[32]"];
	"p139.5673" [label="p139.5673 \n bf16[32]"];
	"broadcast.5674" [label="broadcast.5674 \n bf16[32]"];
	"multiply.5675" [label="multiply.5675 \n bf16[32]"];
	"multiply.5677" [label="multiply.5677 \n bf16[32]"];
	"convert.5676" [label="convert.5676 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5678" [label="broadcast.5678 \n bf16[32]"];
	"multiply.5679" [label="multiply.5679 \n bf16[32]"];
	"add.5680" [label="add.5680 \n bf16[32]"];
	"sqrt.5681" [label="sqrt.5681 \n bf16[32]"];
	"broadcast.5682" [label="broadcast.5682 \n bf16[32]"];
	"divide.5683" [label="divide.5683 \n bf16[32]"];
	"broadcast.5684" [label="broadcast.5684 \n bf16[32]"];
	"add.5685" [label="add.5685 \n bf16[32]"];
	"divide.5708" [label="divide.5708 \n bf16[32]"];
	"convert.5707" [label="convert.5707 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5709" [label="broadcast.5709 \n bf16[32]"];
	"multiply.5710" [label="multiply.5710 \n bf16[32]"];
	"add.5711" [label="add.5711 \n bf16[32]"];
	"p144.5765" [label="p144.5765 \n bf16[96,32]"];
	"broadcast.5766" [label="broadcast.5766 \n bf16[96,32]"];
	"multiply.5767" [label="multiply.5767 \n bf16[96,32]"];
	"broadcast.5768" [label="broadcast.5768 \n bf16[96,32]"];
	"multiply.5770" [label="multiply.5770 \n bf16[96,32]"];
	"subtract.5771" [label="subtract.5771 \n bf16[96,32]"];
	"p143.5756" [label="p143.5756 \n bf16[96,32]"];
	"broadcast.5757" [label="broadcast.5757 \n bf16[96,32]"];
	"multiply.5758" [label="multiply.5758 \n bf16[96,32]"];
	"constant.233" [label="constant.233 \n bf16[1]"];
	"compare.5730" [label="compare.5730 \n pred[1]"];
	"constant.234" [label="constant.234 \n bf16[1]"];
	"select.5732" [label="select.5732 \n bf16[1]"];
	"reshape.5734" [label="reshape.5734 \n bf16[] reshape(bf16[1]"];
	"broadcast.5736" [label="broadcast.5736 \n bf16[96,32]"];
	"multiply.5737" [label="multiply.5737 \n bf16[96,32]"];
	"broadcast.5754" [label="broadcast.5754 \n bf16[96,32]"];
	"multiply.5755" [label="multiply.5755 \n bf16[96,32]"];
	"add.5759" [label="add.5759 \n bf16[96,32]"];
	"p142.5738" [label="p142.5738 \n bf16[96,32]"];
	"broadcast.5739" [label="broadcast.5739 \n bf16[96,32]"];
	"multiply.5740" [label="multiply.5740 \n bf16[96,32]"];
	"multiply.5742" [label="multiply.5742 \n bf16[96,32]"];
	"convert.5741" [label="convert.5741 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5743" [label="broadcast.5743 \n bf16[96,32]"];
	"multiply.5744" [label="multiply.5744 \n bf16[96,32]"];
	"add.5745" [label="add.5745 \n bf16[96,32]"];
	"sqrt.5746" [label="sqrt.5746 \n bf16[96,32]"];
	"broadcast.5747" [label="broadcast.5747 \n bf16[96,32]"];
	"divide.5748" [label="divide.5748 \n bf16[96,32]"];
	"broadcast.5749" [label="broadcast.5749 \n bf16[96,32]"];
	"add.5750" [label="add.5750 \n bf16[96,32]"];
	"divide.5773" [label="divide.5773 \n bf16[96,32]"];
	"convert.5772" [label="convert.5772 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5774" [label="broadcast.5774 \n bf16[96,32]"];
	"multiply.5775" [label="multiply.5775 \n bf16[96,32]"];
	"add.5776" [label="add.5776 \n bf16[96,32]"];
	"p147.5830" [label="p147.5830 \n bf16[32,32]"];
	"broadcast.5831" [label="broadcast.5831 \n bf16[32,32]"];
	"multiply.5832" [label="multiply.5832 \n bf16[32,32]"];
	"broadcast.5833" [label="broadcast.5833 \n bf16[32,32]"];
	"multiply.5835" [label="multiply.5835 \n bf16[32,32]"];
	"subtract.5836" [label="subtract.5836 \n bf16[32,32]"];
	"p146.5821" [label="p146.5821 \n bf16[32,32]"];
	"broadcast.5822" [label="broadcast.5822 \n bf16[32,32]"];
	"multiply.5823" [label="multiply.5823 \n bf16[32,32]"];
	"constant.236" [label="constant.236 \n bf16[1]"];
	"compare.5795" [label="compare.5795 \n pred[1]"];
	"constant.237" [label="constant.237 \n bf16[1]"];
	"select.5797" [label="select.5797 \n bf16[1]"];
	"reshape.5799" [label="reshape.5799 \n bf16[] reshape(bf16[1]"];
	"broadcast.5801" [label="broadcast.5801 \n bf16[32,32]"];
	"multiply.5802" [label="multiply.5802 \n bf16[32,32]"];
	"broadcast.5819" [label="broadcast.5819 \n bf16[32,32]"];
	"multiply.5820" [label="multiply.5820 \n bf16[32,32]"];
	"add.5824" [label="add.5824 \n bf16[32,32]"];
	"p145.5803" [label="p145.5803 \n bf16[32,32]"];
	"broadcast.5804" [label="broadcast.5804 \n bf16[32,32]"];
	"multiply.5805" [label="multiply.5805 \n bf16[32,32]"];
	"multiply.5807" [label="multiply.5807 \n bf16[32,32]"];
	"convert.5806" [label="convert.5806 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5808" [label="broadcast.5808 \n bf16[32,32]"];
	"multiply.5809" [label="multiply.5809 \n bf16[32,32]"];
	"add.5810" [label="add.5810 \n bf16[32,32]"];
	"sqrt.5811" [label="sqrt.5811 \n bf16[32,32]"];
	"broadcast.5812" [label="broadcast.5812 \n bf16[32,32]"];
	"divide.5813" [label="divide.5813 \n bf16[32,32]"];
	"broadcast.5814" [label="broadcast.5814 \n bf16[32,32]"];
	"add.5815" [label="add.5815 \n bf16[32,32]"];
	"divide.5838" [label="divide.5838 \n bf16[32,32]"];
	"convert.5837" [label="convert.5837 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5839" [label="broadcast.5839 \n bf16[32,32]"];
	"multiply.5840" [label="multiply.5840 \n bf16[32,32]"];
	"add.5841" [label="add.5841 \n bf16[32,32]"];
	"p150.5895" [label="p150.5895 \n bf16[64,32]"];
	"broadcast.5896" [label="broadcast.5896 \n bf16[64,32]"];
	"multiply.5897" [label="multiply.5897 \n bf16[64,32]"];
	"broadcast.5898" [label="broadcast.5898 \n bf16[64,32]"];
	"multiply.5900" [label="multiply.5900 \n bf16[64,32]"];
	"subtract.5901" [label="subtract.5901 \n bf16[64,32]"];
	"p149.5886" [label="p149.5886 \n bf16[64,32]"];
	"broadcast.5887" [label="broadcast.5887 \n bf16[64,32]"];
	"multiply.5888" [label="multiply.5888 \n bf16[64,32]"];
	"constant.239" [label="constant.239 \n bf16[1]"];
	"compare.5860" [label="compare.5860 \n pred[1]"];
	"constant.240" [label="constant.240 \n bf16[1]"];
	"select.5862" [label="select.5862 \n bf16[1]"];
	"reshape.5864" [label="reshape.5864 \n bf16[] reshape(bf16[1]"];
	"broadcast.5866" [label="broadcast.5866 \n bf16[64,32]"];
	"multiply.5867" [label="multiply.5867 \n bf16[64,32]"];
	"broadcast.5884" [label="broadcast.5884 \n bf16[64,32]"];
	"multiply.5885" [label="multiply.5885 \n bf16[64,32]"];
	"add.5889" [label="add.5889 \n bf16[64,32]"];
	"p148.5868" [label="p148.5868 \n bf16[64,32]"];
	"broadcast.5869" [label="broadcast.5869 \n bf16[64,32]"];
	"multiply.5870" [label="multiply.5870 \n bf16[64,32]"];
	"multiply.5872" [label="multiply.5872 \n bf16[64,32]"];
	"convert.5871" [label="convert.5871 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5873" [label="broadcast.5873 \n bf16[64,32]"];
	"multiply.5874" [label="multiply.5874 \n bf16[64,32]"];
	"add.5875" [label="add.5875 \n bf16[64,32]"];
	"sqrt.5876" [label="sqrt.5876 \n bf16[64,32]"];
	"broadcast.5877" [label="broadcast.5877 \n bf16[64,32]"];
	"divide.5878" [label="divide.5878 \n bf16[64,32]"];
	"broadcast.5879" [label="broadcast.5879 \n bf16[64,32]"];
	"add.5880" [label="add.5880 \n bf16[64,32]"];
	"divide.5903" [label="divide.5903 \n bf16[64,32]"];
	"convert.5902" [label="convert.5902 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5904" [label="broadcast.5904 \n bf16[64,32]"];
	"multiply.5905" [label="multiply.5905 \n bf16[64,32]"];
	"add.5906" [label="add.5906 \n bf16[64,32]"];
	"p153.5960" [label="p153.5960 \n bf16[32,32]"];
	"broadcast.5961" [label="broadcast.5961 \n bf16[32,32]"];
	"multiply.5962" [label="multiply.5962 \n bf16[32,32]"];
	"broadcast.5963" [label="broadcast.5963 \n bf16[32,32]"];
	"multiply.5965" [label="multiply.5965 \n bf16[32,32]"];
	"subtract.5966" [label="subtract.5966 \n bf16[32,32]"];
	"p152.5951" [label="p152.5951 \n bf16[32,32]"];
	"broadcast.5952" [label="broadcast.5952 \n bf16[32,32]"];
	"multiply.5953" [label="multiply.5953 \n bf16[32,32]"];
	"constant.242" [label="constant.242 \n bf16[1]"];
	"compare.5925" [label="compare.5925 \n pred[1]"];
	"constant.243" [label="constant.243 \n bf16[1]"];
	"select.5927" [label="select.5927 \n bf16[1]"];
	"reshape.5929" [label="reshape.5929 \n bf16[] reshape(bf16[1]"];
	"broadcast.5931" [label="broadcast.5931 \n bf16[32,32]"];
	"multiply.5932" [label="multiply.5932 \n bf16[32,32]"];
	"broadcast.5949" [label="broadcast.5949 \n bf16[32,32]"];
	"multiply.5950" [label="multiply.5950 \n bf16[32,32]"];
	"add.5954" [label="add.5954 \n bf16[32,32]"];
	"p151.5933" [label="p151.5933 \n bf16[32,32]"];
	"broadcast.5934" [label="broadcast.5934 \n bf16[32,32]"];
	"multiply.5935" [label="multiply.5935 \n bf16[32,32]"];
	"multiply.5937" [label="multiply.5937 \n bf16[32,32]"];
	"convert.5936" [label="convert.5936 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.5938" [label="broadcast.5938 \n bf16[32,32]"];
	"multiply.5939" [label="multiply.5939 \n bf16[32,32]"];
	"add.5940" [label="add.5940 \n bf16[32,32]"];
	"sqrt.5941" [label="sqrt.5941 \n bf16[32,32]"];
	"broadcast.5942" [label="broadcast.5942 \n bf16[32,32]"];
	"divide.5943" [label="divide.5943 \n bf16[32,32]"];
	"broadcast.5944" [label="broadcast.5944 \n bf16[32,32]"];
	"add.5945" [label="add.5945 \n bf16[32,32]"];
	"divide.5968" [label="divide.5968 \n bf16[32,32]"];
	"convert.5967" [label="convert.5967 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.5969" [label="broadcast.5969 \n bf16[32,32]"];
	"multiply.5970" [label="multiply.5970 \n bf16[32,32]"];
	"add.5971" [label="add.5971 \n bf16[32,32]"];
	"p156.6024" [label="p156.6024 \n bf16[32]"];
	"broadcast.6025" [label="broadcast.6025 \n bf16[32]"];
	"multiply.6026" [label="multiply.6026 \n bf16[32]"];
	"broadcast.6027" [label="broadcast.6027 \n bf16[32]"];
	"multiply.6029" [label="multiply.6029 \n bf16[32]"];
	"subtract.6030" [label="subtract.6030 \n bf16[32]"];
	"p155.6015" [label="p155.6015 \n bf16[32]"];
	"broadcast.6016" [label="broadcast.6016 \n bf16[32]"];
	"multiply.6017" [label="multiply.6017 \n bf16[32]"];
	"constant.245" [label="constant.245 \n bf16[1]"];
	"compare.5990" [label="compare.5990 \n pred[1]"];
	"constant.246" [label="constant.246 \n bf16[1]"];
	"select.5992" [label="select.5992 \n bf16[1]"];
	"reshape.5994" [label="reshape.5994 \n bf16[] reshape(bf16[1]"];
	"broadcast.5995" [label="broadcast.5995 \n bf16[32]"];
	"multiply.5996" [label="multiply.5996 \n bf16[32]"];
	"broadcast.6013" [label="broadcast.6013 \n bf16[32]"];
	"multiply.6014" [label="multiply.6014 \n bf16[32]"];
	"add.6018" [label="add.6018 \n bf16[32]"];
	"p154.5997" [label="p154.5997 \n bf16[32]"];
	"broadcast.5998" [label="broadcast.5998 \n bf16[32]"];
	"multiply.5999" [label="multiply.5999 \n bf16[32]"];
	"multiply.6001" [label="multiply.6001 \n bf16[32]"];
	"convert.6000" [label="convert.6000 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.6002" [label="broadcast.6002 \n bf16[32]"];
	"multiply.6003" [label="multiply.6003 \n bf16[32]"];
	"add.6004" [label="add.6004 \n bf16[32]"];
	"sqrt.6005" [label="sqrt.6005 \n bf16[32]"];
	"broadcast.6006" [label="broadcast.6006 \n bf16[32]"];
	"divide.6007" [label="divide.6007 \n bf16[32]"];
	"broadcast.6008" [label="broadcast.6008 \n bf16[32]"];
	"add.6009" [label="add.6009 \n bf16[32]"];
	"divide.6032" [label="divide.6032 \n bf16[32]"];
	"convert.6031" [label="convert.6031 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.6033" [label="broadcast.6033 \n bf16[32]"];
	"multiply.6034" [label="multiply.6034 \n bf16[32]"];
	"add.6035" [label="add.6035 \n bf16[32]"];
	"p159.6088" [label="p159.6088 \n bf16[32]"];
	"broadcast.6089" [label="broadcast.6089 \n bf16[32]"];
	"multiply.6090" [label="multiply.6090 \n bf16[32]"];
	"broadcast.6091" [label="broadcast.6091 \n bf16[32]"];
	"multiply.6093" [label="multiply.6093 \n bf16[32]"];
	"subtract.6094" [label="subtract.6094 \n bf16[32]"];
	"p158.6079" [label="p158.6079 \n bf16[32]"];
	"broadcast.6080" [label="broadcast.6080 \n bf16[32]"];
	"multiply.6081" [label="multiply.6081 \n bf16[32]"];
	"constant.248" [label="constant.248 \n bf16[1]"];
	"compare.6054" [label="compare.6054 \n pred[1]"];
	"constant.249" [label="constant.249 \n bf16[1]"];
	"select.6056" [label="select.6056 \n bf16[1]"];
	"reshape.6058" [label="reshape.6058 \n bf16[] reshape(bf16[1]"];
	"broadcast.6059" [label="broadcast.6059 \n bf16[32]"];
	"multiply.6060" [label="multiply.6060 \n bf16[32]"];
	"broadcast.6077" [label="broadcast.6077 \n bf16[32]"];
	"multiply.6078" [label="multiply.6078 \n bf16[32]"];
	"add.6082" [label="add.6082 \n bf16[32]"];
	"p157.6061" [label="p157.6061 \n bf16[32]"];
	"broadcast.6062" [label="broadcast.6062 \n bf16[32]"];
	"multiply.6063" [label="multiply.6063 \n bf16[32]"];
	"multiply.6065" [label="multiply.6065 \n bf16[32]"];
	"convert.6064" [label="convert.6064 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.6066" [label="broadcast.6066 \n bf16[32]"];
	"multiply.6067" [label="multiply.6067 \n bf16[32]"];
	"add.6068" [label="add.6068 \n bf16[32]"];
	"sqrt.6069" [label="sqrt.6069 \n bf16[32]"];
	"broadcast.6070" [label="broadcast.6070 \n bf16[32]"];
	"divide.6071" [label="divide.6071 \n bf16[32]"];
	"broadcast.6072" [label="broadcast.6072 \n bf16[32]"];
	"add.6073" [label="add.6073 \n bf16[32]"];
	"divide.6096" [label="divide.6096 \n bf16[32]"];
	"convert.6095" [label="convert.6095 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.6097" [label="broadcast.6097 \n bf16[32]"];
	"multiply.6098" [label="multiply.6098 \n bf16[32]"];
	"add.6099" [label="add.6099 \n bf16[32]"];
	"p162.6152" [label="p162.6152 \n bf16[32]"];
	"broadcast.6153" [label="broadcast.6153 \n bf16[32]"];
	"multiply.6154" [label="multiply.6154 \n bf16[32]"];
	"broadcast.6155" [label="broadcast.6155 \n bf16[32]"];
	"multiply.6157" [label="multiply.6157 \n bf16[32]"];
	"subtract.6158" [label="subtract.6158 \n bf16[32]"];
	"p161.6143" [label="p161.6143 \n bf16[32]"];
	"broadcast.6144" [label="broadcast.6144 \n bf16[32]"];
	"multiply.6145" [label="multiply.6145 \n bf16[32]"];
	"constant.251" [label="constant.251 \n bf16[1]"];
	"compare.6118" [label="compare.6118 \n pred[1]"];
	"constant.254" [label="constant.254 \n bf16[1]"];
	"select.6120" [label="select.6120 \n bf16[1]"];
	"reshape.6122" [label="reshape.6122 \n bf16[] reshape(bf16[1]"];
	"broadcast.6123" [label="broadcast.6123 \n bf16[32]"];
	"multiply.6124" [label="multiply.6124 \n bf16[32]"];
	"broadcast.6141" [label="broadcast.6141 \n bf16[32]"];
	"multiply.6142" [label="multiply.6142 \n bf16[32]"];
	"add.6146" [label="add.6146 \n bf16[32]"];
	"p160.6125" [label="p160.6125 \n bf16[32]"];
	"broadcast.6126" [label="broadcast.6126 \n bf16[32]"];
	"multiply.6127" [label="multiply.6127 \n bf16[32]"];
	"multiply.6129" [label="multiply.6129 \n bf16[32]"];
	"convert.6128" [label="convert.6128 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.6130" [label="broadcast.6130 \n bf16[32]"];
	"multiply.6131" [label="multiply.6131 \n bf16[32]"];
	"add.6132" [label="add.6132 \n bf16[32]"];
	"sqrt.6133" [label="sqrt.6133 \n bf16[32]"];
	"broadcast.6134" [label="broadcast.6134 \n bf16[32]"];
	"divide.6135" [label="divide.6135 \n bf16[32]"];
	"broadcast.6136" [label="broadcast.6136 \n bf16[32]"];
	"add.6137" [label="add.6137 \n bf16[32]"];
	"divide.6160" [label="divide.6160 \n bf16[32]"];
	"convert.6159" [label="convert.6159 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.6161" [label="broadcast.6161 \n bf16[32]"];
	"multiply.6162" [label="multiply.6162 \n bf16[32]"];
	"add.6163" [label="add.6163 \n bf16[32]"];
	"p165.6217" [label="p165.6217 \n bf16[32000,32]"];
	"broadcast.6218" [label="broadcast.6218 \n bf16[32000,32]"];
	"multiply.6219" [label="multiply.6219 \n bf16[32000,32]"];
	"broadcast.6220" [label="broadcast.6220 \n bf16[32000,32]"];
	"multiply.6222" [label="multiply.6222 \n bf16[32000,32]"];
	"subtract.6223" [label="subtract.6223 \n bf16[32000,32]"];
	"p164.6208" [label="p164.6208 \n bf16[32000,32]"];
	"broadcast.6209" [label="broadcast.6209 \n bf16[32000,32]"];
	"multiply.6210" [label="multiply.6210 \n bf16[32000,32]"];
	"constant.256" [label="constant.256 \n bf16[1]"];
	"compare.6182" [label="compare.6182 \n pred[1]"];
	"constant.257" [label="constant.257 \n bf16[1]"];
	"select.6184" [label="select.6184 \n bf16[1]"];
	"reshape.6186" [label="reshape.6186 \n bf16[] reshape(bf16[1]"];
	"broadcast.6188" [label="broadcast.6188 \n bf16[32000,32]"];
	"multiply.6189" [label="multiply.6189 \n bf16[32000,32]"];
	"broadcast.6206" [label="broadcast.6206 \n bf16[32000,32]"];
	"multiply.6207" [label="multiply.6207 \n bf16[32000,32]"];
	"add.6211" [label="add.6211 \n bf16[32000,32]"];
	"p163.6190" [label="p163.6190 \n bf16[32000,32]"];
	"broadcast.6191" [label="broadcast.6191 \n bf16[32000,32]"];
	"multiply.6192" [label="multiply.6192 \n bf16[32000,32]"];
	"multiply.6194" [label="multiply.6194 \n bf16[32000,32]"];
	"convert.6193" [label="convert.6193 \n bf16[] convert(f32[] %p39.1252), metadata="];
	"broadcast.6195" [label="broadcast.6195 \n bf16[32000,32]"];
	"multiply.6196" [label="multiply.6196 \n bf16[32000,32]"];
	"add.6197" [label="add.6197 \n bf16[32000,32]"];
	"sqrt.6198" [label="sqrt.6198 \n bf16[32000,32]"];
	"broadcast.6199" [label="broadcast.6199 \n bf16[32000,32]"];
	"divide.6200" [label="divide.6200 \n bf16[32000,32]"];
	"broadcast.6201" [label="broadcast.6201 \n bf16[32000,32]"];
	"add.6202" [label="add.6202 \n bf16[32000,32]"];
	"divide.6225" [label="divide.6225 \n bf16[32000,32]"];
	"convert.6224" [label="convert.6224 \n bf16[] convert(f32[] %p36.1247), metadata="];
	"broadcast.6226" [label="broadcast.6226 \n bf16[32000,32]"];
	"multiply.6227" [label="multiply.6227 \n bf16[32000,32]"];
	"add.6228" [label="add.6228 \n bf16[32000,32]"];
	"constant.6238" [label="constant.6238 \n bf16[] constant(0), metadata="];
	"broadcast.6242" [label="broadcast.6242 \n bf16[32000,32]"];
	"constant.6243" [label="constant.6243 \n bf16[] constant(0), metadata="];
	"broadcast.6247" [label="broadcast.6247 \n bf16[32]"];
	"constant.6248" [label="constant.6248 \n bf16[] constant(0), metadata="];
	"broadcast.6252" [label="broadcast.6252 \n bf16[32,32]"];
	"constant.6253" [label="constant.6253 \n bf16[] constant(0), metadata="];
	"broadcast.6257" [label="broadcast.6257 \n bf16[64,32]"];
	"constant.6258" [label="constant.6258 \n bf16[] constant(0), metadata="];
	"broadcast.6262" [label="broadcast.6262 \n bf16[32]"];
	"constant.6263" [label="constant.6263 \n bf16[] constant(0), metadata="];
	"broadcast.6267" [label="broadcast.6267 \n bf16[32,32]"];
	"constant.6268" [label="constant.6268 \n bf16[] constant(0), metadata="];
	"broadcast.6272" [label="broadcast.6272 \n bf16[96,32]"];
	"constant.6273" [label="constant.6273 \n bf16[] constant(0), metadata="];
	"broadcast.6277" [label="broadcast.6277 \n bf16[32]"];
	"constant.6278" [label="constant.6278 \n bf16[] constant(0), metadata="];
	"broadcast.6282" [label="broadcast.6282 \n bf16[32,32]"];
	"constant.6283" [label="constant.6283 \n bf16[] constant(0), metadata="];
	"broadcast.6287" [label="broadcast.6287 \n bf16[64,32]"];
	"constant.6288" [label="constant.6288 \n bf16[] constant(0), metadata="];
	"broadcast.6292" [label="broadcast.6292 \n bf16[32]"];
	"constant.6293" [label="constant.6293 \n bf16[] constant(0), metadata="];
	"broadcast.6297" [label="broadcast.6297 \n bf16[32,32]"];
	"constant.6298" [label="constant.6298 \n bf16[] constant(0), metadata="];
	"broadcast.6302" [label="broadcast.6302 \n bf16[96,32]"];
	"constant.6303" [label="constant.6303 \n bf16[] constant(0), metadata="];
	"broadcast.6307" [label="broadcast.6307 \n bf16[32]"];
	"constant.6308" [label="constant.6308 \n bf16[] constant(0), metadata="];
	"broadcast.6312" [label="broadcast.6312 \n bf16[32,32]"];
	"constant.6313" [label="constant.6313 \n bf16[] constant(0), metadata="];
	"broadcast.6317" [label="broadcast.6317 \n bf16[64,32]"];
	"constant.6318" [label="constant.6318 \n bf16[] constant(0), metadata="];
	"broadcast.6322" [label="broadcast.6322 \n bf16[32]"];
	"constant.6323" [label="constant.6323 \n bf16[] constant(0), metadata="];
	"broadcast.6327" [label="broadcast.6327 \n bf16[32,32]"];
	"constant.6328" [label="constant.6328 \n bf16[] constant(0), metadata="];
	"broadcast.6332" [label="broadcast.6332 \n bf16[96,32]"];
	"constant.6333" [label="constant.6333 \n bf16[] constant(0), metadata="];
	"broadcast.6337" [label="broadcast.6337 \n bf16[32]"];
	"constant.6338" [label="constant.6338 \n bf16[] constant(0), metadata="];
	"broadcast.6342" [label="broadcast.6342 \n bf16[32,32]"];
	"constant.6343" [label="constant.6343 \n bf16[] constant(0), metadata="];
	"broadcast.6347" [label="broadcast.6347 \n bf16[64,32]"];
	"constant.6348" [label="constant.6348 \n bf16[] constant(0), metadata="];
	"broadcast.6352" [label="broadcast.6352 \n bf16[32]"];
	"constant.6353" [label="constant.6353 \n bf16[] constant(0), metadata="];
	"broadcast.6357" [label="broadcast.6357 \n bf16[32,32]"];
	"constant.6358" [label="constant.6358 \n bf16[] constant(0), metadata="];
	"broadcast.6362" [label="broadcast.6362 \n bf16[96,32]"];
	"constant.6363" [label="constant.6363 \n bf16[] constant(0), metadata="];
	"broadcast.6367" [label="broadcast.6367 \n bf16[32]"];
	"constant.6368" [label="constant.6368 \n bf16[] constant(0), metadata="];
	"broadcast.6372" [label="broadcast.6372 \n bf16[32000,32]"];
	"p166.6373" [label="p166.6373 \n s64[1024,4096]"];
	"log.6409" [label="log.6409 \n f32[4193280]"];
	"slice.6403" [label="slice.6403 \n f32[1024,4095,32000]"];
	"reshape.6404" [label="reshape.6404 \n f32[4193280,32000]"];
	"iota.30" [label="iota.30 \n s64[4193280,1]"];
	"constant.6385" [label="constant.6385 \n s64[] constant(0), metadata="];
	"broadcast.6386" [label="broadcast.6386 \n s64[4193280]"];
	"compare.6387" [label="compare.6387 \n pred[4193280]"];
	"broadcast.6383" [label="broadcast.6383 \n s64[4193280]"];
	"add.6384" [label="add.6384 \n s64[4193280]"];
	"select.6388" [label="select.6388 \n s64[4193280]"];
	"reshape.6400" [label="reshape.6400 \n s64[4193280,1]"];
	"concatenate.6401" [label="concatenate.6401 \n s64[4193280,2]"];
	"gather.6405" [label="gather.6405 \n f32[4193280]"];
	"broadcast.677" [label="broadcast.677 \n f32[4193280]"];
	"select.17" [label="select.17 \n f32[4193280]"];
	"subtract.6410" [label="subtract.6410 \n f32[4193280]"];
	"constant.6411" [label="constant.6411 \n f32[] constant(0), metadata="];
	"reduce.6417" [label="reduce.6417 \n f32[] reduce(f32[4193280]"];
	"multiply.6425" [label="multiply.6425 \n f32[] multiply(f32[] %reduce.6417, f32[] %constant.264), metadata="];
	"tuple.6427" [label="tuple.6427 \n (bf16[32000,32]"]; 
 	"p86.4535" -> "broadcast.4537";
	"p87.4536" -> "multiply.4538";
	"broadcast.4537" -> "multiply.4538";
	"p85.4534" -> "broadcast.4539";
	"multiply.4538" -> "multiply.4541";
	"broadcast.4539" -> "multiply.4541";
	"p87.4536" -> "subtract.4542";
	"multiply.4541" -> "subtract.4542";
	"p83.4524" -> "broadcast.4526";
	"p84.4525" -> "multiply.4527";
	"broadcast.4526" -> "multiply.4527";
	"p2.10" -> "reshape.3981";
	"constant.3995" -> "broadcast.3996";
	"reshape.3981" -> "compare.3997";
	"broadcast.3996" -> "compare.3997";
	"p45.1348" -> "broadcast.3993";
	"reshape.3981" -> "add.3994";
	"broadcast.3993" -> "add.3994";
	"compare.3997" -> "select.3998";
	"add.3994" -> "select.3998";
	"reshape.3981" -> "select.3998";
	"select.3998" -> "reshape.3999";
	"reshape.3981" -> "convert.3982";
	"constant.3980" -> "broadcast.3983";
	"convert.3982" -> "compare.3984";
	"broadcast.3983" -> "compare.3984";
	"compare.3984" -> "broadcast.3988";
	"constant.51" -> "broadcast";
	"constant.52" -> "broadcast.1";
	"p43.1328" -> "broadcast.1329";
	"p2.10" -> "convert.8";
	"convert.8" -> "reshape.1370";
	"p3.12" -> "gather.14";
	"reshape.1370" -> "gather.14";
	"gather.14" -> "reshape.15";
	"reshape.15" -> "transpose.16";
	"iota" -> "compare.94";
	"iota.1" -> "compare.94";
	"constant.85" -> "broadcast.553";
	"constant.80" -> "broadcast.555";
	"compare.94" -> "select.9";
	"broadcast.553" -> "select.9";
	"broadcast.555" -> "select.9";
	"select.9" -> "convert.40";
	"convert.40" -> "broadcast.4";
	"constant.227" -> "broadcast.228";
	"p4.45" -> "broadcast.46";
	"transpose.16" -> "convert.17";
	"convert.17" -> "multiply.41";
	"convert.17" -> "multiply.41";
	"multiply.41" -> "reduce.25";
	"constant.19" -> "reduce.25";
	"AddComputation.21" -> "reduce.25";
	"constant.57" -> "broadcast.33";
	"reduce.25" -> "multiply.34";
	"broadcast.33" -> "multiply.34";
	"p1.3" -> "broadcast.557";
	"multiply.34" -> "add.3";
	"broadcast.557" -> "add.3";
	"add.3" -> "rsqrt.0";
	"rsqrt.0" -> "broadcast.42";
	"convert.17" -> "multiply.43";
	"broadcast.42" -> "multiply.43";
	"multiply.43" -> "convert.44";
	"broadcast.46" -> "multiply.47";
	"convert.44" -> "multiply.47";
	"p0.1" -> "convert.48";
	"multiply.47" -> "all-gather.52";
	"convert.48" -> "all-gather.52";
	"all-gather.52" -> "get-tuple-element.53";
	"get-tuple-element.53" -> "reshape.72";
	"p6.70" -> "transpose.71";
	"reshape.72" -> "dot.73";
	"transpose.71" -> "dot.73";
	"dot.73" -> "reshape.206";
	"reshape.206" -> "slice.207";
	"slice.207" -> "reshape.208";
	"reshape.208" -> "transpose.209";
	"transpose.209" -> "reshape.214";
	"reshape.214" -> "broadcast.215";
	"p10.159" -> "reshape.163";
	"reshape.163" -> "gather.164";
	"iota.4" -> "gather.164";
	"gather.164" -> "reshape.211";
	"reshape.211" -> "broadcast.212";
	"broadcast.215" -> "multiply.216";
	"broadcast.212" -> "multiply.216";
	"dot.73" -> "reshape.191";
	"reshape.191" -> "slice.192";
	"slice.192" -> "negate.17";
	"negate.17" -> "reshape.2172";
	"reshape.2172" -> "transpose.7";
	"transpose.7" -> "reshape.202";
	"reshape.202" -> "broadcast.203";
	"p9.121" -> "reshape.125";
	"reshape.125" -> "gather.126";
	"iota.5" -> "gather.126";
	"gather.126" -> "reshape.199";
	"reshape.199" -> "broadcast.200";
	"broadcast.203" -> "multiply.205";
	"broadcast.200" -> "multiply.205";
	"multiply.216" -> "add.217";
	"multiply.205" -> "add.217";
	"add.217" -> "reshape.219";
	"dot.73" -> "reshape.166";
	"reshape.166" -> "slice.167";
	"slice.167" -> "reshape.168";
	"reshape.168" -> "transpose.169";
	"transpose.169" -> "reshape.174";
	"reshape.174" -> "broadcast.175";
	"gather.164" -> "reshape.171";
	"reshape.171" -> "broadcast.172";
	"broadcast.175" -> "multiply.176";
	"broadcast.172" -> "multiply.176";
	"dot.73" -> "reshape.133";
	"reshape.133" -> "slice.134";
	"slice.134" -> "negate.16";
	"negate.16" -> "reshape.2170";
	"reshape.2170" -> "transpose.5";
	"transpose.5" -> "reshape.144";
	"reshape.144" -> "broadcast.145";
	"gather.126" -> "reshape.141";
	"reshape.141" -> "broadcast.142";
	"broadcast.145" -> "multiply.147";
	"broadcast.142" -> "multiply.147";
	"multiply.176" -> "add.177";
	"multiply.147" -> "add.177";
	"add.177" -> "transpose.178";
	"transpose.178" -> "reshape.180";
	"reshape.219" -> "dot.220";
	"reshape.180" -> "dot.220";
	"p7.101" -> "broadcast.559";
	"dot.220" -> "divide.10";
	"broadcast.559" -> "divide.10";
	"divide.10" -> "reshape.1810";
	"broadcast.4" -> "select.229";
	"broadcast.228" -> "select.229";
	"reshape.1810" -> "select.229";
	"select.229" -> "convert.230";
	"convert.230" -> "custom-call.12";
	"custom-call.12" -> "convert.238";
	"convert.238" -> "reshape.240";
	"dot.73" -> "reshape.74";
	"reshape.74" -> "slice.75";
	"slice.75" -> "reshape.76";
	"reshape.76" -> "transpose.77";
	"transpose.77" -> "reshape.62";
	"reshape.62" -> "broadcast.206";
	"reshape.240" -> "multiply.20";
	"broadcast.206" -> "multiply.20";
	"multiply.20" -> "convert";
	"convert" -> "reduce";
	"constant.42" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"convert.1" -> "reshape.242";
	"reshape.242" -> "transpose.243";
	"transpose.243" -> "reshape.245";
	"p5.68" -> "transpose.69";
	"reshape.245" -> "dot.246";
	"transpose.69" -> "dot.246";
	"dot.246" -> "reshape.247";
	"transpose.16" -> "add.249";
	"reshape.247" -> "add.249";
	"p11.278" -> "broadcast.279";
	"add.249" -> "convert.250";
	"convert.250" -> "multiply.42";
	"convert.250" -> "multiply.42";
	"multiply.42" -> "reduce.258";
	"constant.252" -> "reduce.258";
	"AddComputation.254" -> "reduce.258";
	"constant.62" -> "broadcast.266";
	"reduce.258" -> "multiply.267";
	"broadcast.266" -> "multiply.267";
	"p1.3" -> "broadcast.561";
	"multiply.267" -> "add.4";
	"broadcast.561" -> "add.4";
	"add.4" -> "rsqrt.1";
	"rsqrt.1" -> "broadcast.275";
	"convert.250" -> "multiply.276";
	"broadcast.275" -> "multiply.276";
	"multiply.276" -> "convert.277";
	"broadcast.279" -> "multiply.280";
	"convert.277" -> "multiply.280";
	"all-gather.52" -> "get-tuple-element.284";
	"multiply.280" -> "all-gather.285";
	"get-tuple-element.284" -> "all-gather.285";
	"all-gather.285" -> "get-tuple-element.286";
	"get-tuple-element.286" -> "reshape.305";
	"p13.303" -> "transpose.304";
	"reshape.305" -> "dot.306";
	"transpose.304" -> "dot.306";
	"dot.306" -> "reshape.309";
	"reshape.309" -> "slice.310";
	"slice.310" -> "logistic.311";
	"slice.310" -> "multiply.312";
	"logistic.311" -> "multiply.312";
	"dot.306" -> "reshape.307";
	"reshape.307" -> "slice.308";
	"multiply.312" -> "multiply.313";
	"slice.308" -> "multiply.313";
	"multiply.313" -> "reshape.314";
	"p12.301" -> "transpose.302";
	"reshape.314" -> "dot.315";
	"transpose.302" -> "dot.315";
	"dot.315" -> "reshape.316";
	"add.249" -> "add.318";
	"reshape.316" -> "add.318";
	"iota.6" -> "compare.396";
	"iota.7" -> "compare.396";
	"constant.387" -> "broadcast.563";
	"constant.382" -> "broadcast.566";
	"compare.396" -> "select.10";
	"broadcast.563" -> "select.10";
	"broadcast.566" -> "select.10";
	"select.10" -> "convert.39";
	"convert.39" -> "broadcast.13";
	"constant.525" -> "broadcast.526";
	"p14.347" -> "broadcast.348";
	"add.318" -> "convert.319";
	"convert.319" -> "multiply.44";
	"convert.319" -> "multiply.44";
	"multiply.44" -> "reduce.327";
	"constant.321" -> "reduce.327";
	"AddComputation.323" -> "reduce.327";
	"constant.67" -> "broadcast.335";
	"reduce.327" -> "multiply.336";
	"broadcast.335" -> "multiply.336";
	"p1.3" -> "broadcast.569";
	"multiply.336" -> "add.5";
	"broadcast.569" -> "add.5";
	"add.5" -> "rsqrt.2";
	"rsqrt.2" -> "broadcast.344";
	"convert.319" -> "multiply.345";
	"broadcast.344" -> "multiply.345";
	"multiply.345" -> "convert.346";
	"broadcast.348" -> "multiply.349";
	"convert.346" -> "multiply.349";
	"all-gather.285" -> "get-tuple-element.353";
	"multiply.349" -> "all-gather.354";
	"get-tuple-element.353" -> "all-gather.354";
	"all-gather.354" -> "get-tuple-element.355";
	"get-tuple-element.355" -> "reshape.374";
	"p16.372" -> "transpose.373";
	"reshape.374" -> "dot.375";
	"transpose.373" -> "dot.375";
	"dot.375" -> "reshape.504";
	"reshape.504" -> "slice.505";
	"slice.505" -> "reshape.506";
	"reshape.506" -> "transpose.507";
	"transpose.507" -> "reshape.512";
	"reshape.512" -> "broadcast.513";
	"p18.457" -> "reshape.461";
	"reshape.461" -> "gather.462";
	"iota.8" -> "gather.462";
	"gather.462" -> "reshape.509";
	"reshape.509" -> "broadcast.510";
	"broadcast.513" -> "multiply.514";
	"broadcast.510" -> "multiply.514";
	"dot.375" -> "reshape.489";
	"reshape.489" -> "slice.490";
	"slice.490" -> "negate.19";
	"negate.19" -> "reshape.2176";
	"reshape.2176" -> "transpose.11";
	"transpose.11" -> "reshape.500";
	"reshape.500" -> "broadcast.501";
	"p17.419" -> "reshape.423";
	"reshape.423" -> "gather.424";
	"iota.9" -> "gather.424";
	"gather.424" -> "reshape.497";
	"reshape.497" -> "broadcast.498";
	"broadcast.501" -> "multiply.503";
	"broadcast.498" -> "multiply.503";
	"multiply.514" -> "add.515";
	"multiply.503" -> "add.515";
	"add.515" -> "reshape.517";
	"dot.375" -> "reshape.464";
	"reshape.464" -> "slice.465";
	"slice.465" -> "reshape.466";
	"reshape.466" -> "transpose.467";
	"transpose.467" -> "reshape.472";
	"reshape.472" -> "broadcast.473";
	"gather.462" -> "reshape.469";
	"reshape.469" -> "broadcast.470";
	"broadcast.473" -> "multiply.474";
	"broadcast.470" -> "multiply.474";
	"dot.375" -> "reshape.431";
	"reshape.431" -> "slice.432";
	"slice.432" -> "negate.18";
	"negate.18" -> "reshape.2174";
	"reshape.2174" -> "transpose.9";
	"transpose.9" -> "reshape.442";
	"reshape.442" -> "broadcast.443";
	"gather.424" -> "reshape.439";
	"reshape.439" -> "broadcast.440";
	"broadcast.443" -> "multiply.445";
	"broadcast.440" -> "multiply.445";
	"multiply.474" -> "add.475";
	"multiply.445" -> "add.475";
	"add.475" -> "transpose.476";
	"transpose.476" -> "reshape.478";
	"reshape.517" -> "dot.518";
	"reshape.478" -> "dot.518";
	"p7.101" -> "broadcast.572";
	"dot.518" -> "divide.11";
	"broadcast.572" -> "divide.11";
	"divide.11" -> "reshape.1824";
	"broadcast.13" -> "select.527";
	"broadcast.526" -> "select.527";
	"reshape.1824" -> "select.527";
	"select.527" -> "convert.528";
	"convert.528" -> "custom-call.13";
	"custom-call.13" -> "convert.536";
	"convert.536" -> "reshape.538";
	"dot.375" -> "reshape.376";
	"reshape.376" -> "slice.377";
	"slice.377" -> "reshape.378";
	"reshape.378" -> "transpose.379";
	"transpose.379" -> "reshape.143";
	"reshape.143" -> "broadcast.207";
	"reshape.538" -> "multiply.25";
	"broadcast.207" -> "multiply.25";
	"multiply.25" -> "convert.2";
	"convert.2" -> "reduce.1";
	"constant.43" -> "reduce.1";
	"scalar_add_computation" -> "reduce.1";
	"reduce.1" -> "convert.3";
	"convert.3" -> "reshape.540";
	"reshape.540" -> "transpose.541";
	"transpose.541" -> "reshape.543";
	"p15.370" -> "transpose.371";
	"reshape.543" -> "dot.544";
	"transpose.371" -> "dot.544";
	"dot.544" -> "reshape.545";
	"add.318" -> "add.547";
	"reshape.545" -> "add.547";
	"p19.576" -> "broadcast.577";
	"add.547" -> "convert.548";
	"convert.548" -> "multiply.45";
	"convert.548" -> "multiply.45";
	"multiply.45" -> "reduce.556";
	"constant.550" -> "reduce.556";
	"AddComputation.552" -> "reduce.556";
	"constant.71" -> "broadcast.564";
	"reduce.556" -> "multiply.565";
	"broadcast.564" -> "multiply.565";
	"p1.3" -> "broadcast.575";
	"multiply.565" -> "add.6";
	"broadcast.575" -> "add.6";
	"add.6" -> "rsqrt.3";
	"rsqrt.3" -> "broadcast.573";
	"convert.548" -> "multiply.574";
	"broadcast.573" -> "multiply.574";
	"multiply.574" -> "convert.575";
	"broadcast.577" -> "multiply.578";
	"convert.575" -> "multiply.578";
	"all-gather.354" -> "get-tuple-element.582";
	"multiply.578" -> "all-gather.583";
	"get-tuple-element.582" -> "all-gather.583";
	"all-gather.583" -> "get-tuple-element.584";
	"get-tuple-element.584" -> "reshape.603";
	"p21.601" -> "transpose.602";
	"reshape.603" -> "dot.604";
	"transpose.602" -> "dot.604";
	"dot.604" -> "reshape.607";
	"reshape.607" -> "slice.608";
	"slice.608" -> "logistic.609";
	"slice.608" -> "multiply.610";
	"logistic.609" -> "multiply.610";
	"dot.604" -> "reshape.605";
	"reshape.605" -> "slice.606";
	"multiply.610" -> "multiply.611";
	"slice.606" -> "multiply.611";
	"multiply.611" -> "reshape.612";
	"p20.599" -> "transpose.600";
	"reshape.612" -> "dot.613";
	"transpose.600" -> "dot.613";
	"dot.613" -> "reshape.614";
	"add.547" -> "add.616";
	"reshape.614" -> "add.616";
	"iota.10" -> "compare.694";
	"iota.11" -> "compare.694";
	"constant.685" -> "broadcast.578";
	"constant.680" -> "broadcast.580";
	"compare.694" -> "select.11";
	"broadcast.578" -> "select.11";
	"broadcast.580" -> "select.11";
	"select.11" -> "convert.38";
	"convert.38" -> "broadcast.20";
	"constant.823" -> "broadcast.824";
	"p22.645" -> "broadcast.646";
	"add.616" -> "convert.617";
	"convert.617" -> "multiply.46";
	"convert.617" -> "multiply.46";
	"multiply.46" -> "reduce.625";
	"constant.619" -> "reduce.625";
	"AddComputation.621" -> "reduce.625";
	"constant.75" -> "broadcast.633";
	"reduce.625" -> "multiply.634";
	"broadcast.633" -> "multiply.634";
	"p1.3" -> "broadcast.582";
	"multiply.634" -> "add.7";
	"broadcast.582" -> "add.7";
	"add.7" -> "rsqrt.4";
	"rsqrt.4" -> "broadcast.642";
	"convert.617" -> "multiply.643";
	"broadcast.642" -> "multiply.643";
	"multiply.643" -> "convert.644";
	"broadcast.646" -> "multiply.647";
	"convert.644" -> "multiply.647";
	"all-gather.583" -> "get-tuple-element.651";
	"multiply.647" -> "all-gather.652";
	"get-tuple-element.651" -> "all-gather.652";
	"all-gather.652" -> "get-tuple-element.653";
	"get-tuple-element.653" -> "reshape.672";
	"p24.670" -> "transpose.671";
	"reshape.672" -> "dot.673";
	"transpose.671" -> "dot.673";
	"dot.673" -> "reshape.802";
	"reshape.802" -> "slice.803";
	"slice.803" -> "reshape.804";
	"reshape.804" -> "transpose.805";
	"transpose.805" -> "reshape.810";
	"reshape.810" -> "broadcast.811";
	"p26.755" -> "reshape.759";
	"reshape.759" -> "gather.760";
	"iota.12" -> "gather.760";
	"gather.760" -> "reshape.807";
	"reshape.807" -> "broadcast.808";
	"broadcast.811" -> "multiply.812";
	"broadcast.808" -> "multiply.812";
	"dot.673" -> "reshape.787";
	"reshape.787" -> "slice.788";
	"slice.788" -> "negate.21";
	"negate.21" -> "reshape.2180";
	"reshape.2180" -> "transpose.15";
	"transpose.15" -> "reshape.798";
	"reshape.798" -> "broadcast.799";
	"p25.717" -> "reshape.721";
	"reshape.721" -> "gather.722";
	"iota.13" -> "gather.722";
	"gather.722" -> "reshape.795";
	"reshape.795" -> "broadcast.796";
	"broadcast.799" -> "multiply.801";
	"broadcast.796" -> "multiply.801";
	"multiply.812" -> "add.813";
	"multiply.801" -> "add.813";
	"add.813" -> "reshape.815";
	"dot.673" -> "reshape.762";
	"reshape.762" -> "slice.763";
	"slice.763" -> "reshape.764";
	"reshape.764" -> "transpose.765";
	"transpose.765" -> "reshape.770";
	"reshape.770" -> "broadcast.771";
	"gather.760" -> "reshape.767";
	"reshape.767" -> "broadcast.768";
	"broadcast.771" -> "multiply.772";
	"broadcast.768" -> "multiply.772";
	"dot.673" -> "reshape.729";
	"reshape.729" -> "slice.730";
	"slice.730" -> "negate.20";
	"negate.20" -> "reshape.2178";
	"reshape.2178" -> "transpose.13";
	"transpose.13" -> "reshape.740";
	"reshape.740" -> "broadcast.741";
	"gather.722" -> "reshape.737";
	"reshape.737" -> "broadcast.738";
	"broadcast.741" -> "multiply.743";
	"broadcast.738" -> "multiply.743";
	"multiply.772" -> "add.773";
	"multiply.743" -> "add.773";
	"add.773" -> "transpose.774";
	"transpose.774" -> "reshape.776";
	"reshape.815" -> "dot.816";
	"reshape.776" -> "dot.816";
	"p7.101" -> "broadcast.584";
	"dot.816" -> "divide.12";
	"broadcast.584" -> "divide.12";
	"divide.12" -> "reshape.1837";
	"broadcast.20" -> "select.825";
	"broadcast.824" -> "select.825";
	"reshape.1837" -> "select.825";
	"select.825" -> "convert.826";
	"convert.826" -> "custom-call.14";
	"custom-call.14" -> "convert.834";
	"convert.834" -> "reshape.836";
	"dot.673" -> "reshape.674";
	"reshape.674" -> "slice.675";
	"slice.675" -> "reshape.676";
	"reshape.676" -> "transpose.677";
	"transpose.677" -> "reshape.227";
	"reshape.227" -> "broadcast.208";
	"reshape.836" -> "multiply.30";
	"broadcast.208" -> "multiply.30";
	"multiply.30" -> "convert.4";
	"convert.4" -> "reduce.2";
	"constant.44" -> "reduce.2";
	"scalar_add_computation" -> "reduce.2";
	"reduce.2" -> "convert.5";
	"convert.5" -> "reshape.838";
	"reshape.838" -> "transpose.839";
	"transpose.839" -> "reshape.841";
	"p23.668" -> "transpose.669";
	"reshape.841" -> "dot.842";
	"transpose.669" -> "dot.842";
	"dot.842" -> "reshape.843";
	"add.616" -> "add.845";
	"reshape.843" -> "add.845";
	"p27.874" -> "broadcast.875";
	"add.845" -> "convert.846";
	"convert.846" -> "multiply.48";
	"convert.846" -> "multiply.48";
	"multiply.48" -> "reduce.854";
	"constant.848" -> "reduce.854";
	"AddComputation.850" -> "reduce.854";
	"constant.79" -> "broadcast.862";
	"reduce.854" -> "multiply.863";
	"broadcast.862" -> "multiply.863";
	"p1.3" -> "broadcast.586";
	"multiply.863" -> "add.8";
	"broadcast.586" -> "add.8";
	"add.8" -> "rsqrt.5";
	"rsqrt.5" -> "broadcast.871";
	"convert.846" -> "multiply.872";
	"broadcast.871" -> "multiply.872";
	"multiply.872" -> "convert.873";
	"broadcast.875" -> "multiply.876";
	"convert.873" -> "multiply.876";
	"all-gather.652" -> "get-tuple-element.880";
	"multiply.876" -> "all-gather.881";
	"get-tuple-element.880" -> "all-gather.881";
	"all-gather.881" -> "get-tuple-element.882";
	"get-tuple-element.882" -> "reshape.901";
	"p29.899" -> "transpose.900";
	"reshape.901" -> "dot.902";
	"transpose.900" -> "dot.902";
	"dot.902" -> "reshape.905";
	"reshape.905" -> "slice.906";
	"slice.906" -> "logistic.907";
	"slice.906" -> "multiply.908";
	"logistic.907" -> "multiply.908";
	"dot.902" -> "reshape.903";
	"reshape.903" -> "slice.904";
	"multiply.908" -> "multiply.909";
	"slice.904" -> "multiply.909";
	"multiply.909" -> "reshape.910";
	"p28.897" -> "transpose.898";
	"reshape.910" -> "dot.911";
	"transpose.898" -> "dot.911";
	"dot.911" -> "reshape.912";
	"add.845" -> "add.914";
	"reshape.912" -> "add.914";
	"iota.14" -> "compare.992";
	"iota.15" -> "compare.992";
	"constant.983" -> "broadcast.588";
	"constant.978" -> "broadcast.590";
	"compare.992" -> "select.12";
	"broadcast.588" -> "select.12";
	"broadcast.590" -> "select.12";
	"select.12" -> "convert.37";
	"convert.37" -> "broadcast.27";
	"constant.1121" -> "broadcast.1122";
	"p30.943" -> "broadcast.944";
	"add.914" -> "convert.915";
	"convert.915" -> "multiply.49";
	"convert.915" -> "multiply.49";
	"multiply.49" -> "reduce.923";
	"constant.917" -> "reduce.923";
	"AddComputation.919" -> "reduce.923";
	"constant.84" -> "broadcast.931";
	"reduce.923" -> "multiply.932";
	"broadcast.931" -> "multiply.932";
	"p1.3" -> "broadcast.594";
	"multiply.932" -> "add.9";
	"broadcast.594" -> "add.9";
	"add.9" -> "rsqrt.6";
	"rsqrt.6" -> "broadcast.940";
	"convert.915" -> "multiply.941";
	"broadcast.940" -> "multiply.941";
	"multiply.941" -> "convert.942";
	"broadcast.944" -> "multiply.945";
	"convert.942" -> "multiply.945";
	"all-gather.881" -> "get-tuple-element.949";
	"multiply.945" -> "all-gather.950";
	"get-tuple-element.949" -> "all-gather.950";
	"all-gather.950" -> "get-tuple-element.951";
	"get-tuple-element.951" -> "reshape.970";
	"p32.968" -> "transpose.969";
	"reshape.970" -> "dot.971";
	"transpose.969" -> "dot.971";
	"dot.971" -> "reshape.1100";
	"reshape.1100" -> "slice.1101";
	"slice.1101" -> "reshape.1102";
	"reshape.1102" -> "transpose.1103";
	"transpose.1103" -> "reshape.1108";
	"reshape.1108" -> "broadcast.1109";
	"p34.1053" -> "reshape.1057";
	"reshape.1057" -> "gather.1058";
	"iota.16" -> "gather.1058";
	"gather.1058" -> "reshape.1105";
	"reshape.1105" -> "broadcast.1106";
	"broadcast.1109" -> "multiply.1110";
	"broadcast.1106" -> "multiply.1110";
	"dot.971" -> "reshape.1085";
	"reshape.1085" -> "slice.1086";
	"slice.1086" -> "negate.23";
	"negate.23" -> "reshape.2184";
	"reshape.2184" -> "transpose.20";
	"transpose.20" -> "reshape.1096";
	"reshape.1096" -> "broadcast.1097";
	"p33.1015" -> "reshape.1019";
	"reshape.1019" -> "gather.1020";
	"iota.17" -> "gather.1020";
	"gather.1020" -> "reshape.1093";
	"reshape.1093" -> "broadcast.1094";
	"broadcast.1097" -> "multiply.1099";
	"broadcast.1094" -> "multiply.1099";
	"multiply.1110" -> "add.1111";
	"multiply.1099" -> "add.1111";
	"add.1111" -> "reshape.1113";
	"dot.971" -> "reshape.1060";
	"reshape.1060" -> "slice.1061";
	"slice.1061" -> "reshape.1062";
	"reshape.1062" -> "transpose.1063";
	"transpose.1063" -> "reshape.1068";
	"reshape.1068" -> "broadcast.1069";
	"gather.1058" -> "reshape.1065";
	"reshape.1065" -> "broadcast.1066";
	"broadcast.1069" -> "multiply.1070";
	"broadcast.1066" -> "multiply.1070";
	"dot.971" -> "reshape.1027";
	"reshape.1027" -> "slice.1028";
	"slice.1028" -> "negate.22";
	"negate.22" -> "reshape.2182";
	"reshape.2182" -> "transpose.18";
	"transpose.18" -> "reshape.1038";
	"reshape.1038" -> "broadcast.1039";
	"gather.1020" -> "reshape.1035";
	"reshape.1035" -> "broadcast.1036";
	"broadcast.1039" -> "multiply.1041";
	"broadcast.1036" -> "multiply.1041";
	"multiply.1070" -> "add.1071";
	"multiply.1041" -> "add.1071";
	"add.1071" -> "transpose.1072";
	"transpose.1072" -> "reshape.1074";
	"reshape.1113" -> "dot.1114";
	"reshape.1074" -> "dot.1114";
	"p7.101" -> "broadcast.597";
	"dot.1114" -> "divide.13";
	"broadcast.597" -> "divide.13";
	"divide.13" -> "reshape.1856";
	"broadcast.27" -> "select.1123";
	"broadcast.1122" -> "select.1123";
	"reshape.1856" -> "select.1123";
	"select.1123" -> "convert.1124";
	"convert.1124" -> "custom-call.15";
	"custom-call.15" -> "convert.1132";
	"convert.1132" -> "reshape.1134";
	"dot.971" -> "reshape.972";
	"reshape.972" -> "slice.973";
	"slice.973" -> "reshape.974";
	"reshape.974" -> "transpose.975";
	"transpose.975" -> "reshape.293";
	"reshape.293" -> "broadcast.209";
	"reshape.1134" -> "multiply.36";
	"broadcast.209" -> "multiply.36";
	"multiply.36" -> "convert.6";
	"convert.6" -> "reduce.3";
	"constant.45" -> "reduce.3";
	"scalar_add_computation" -> "reduce.3";
	"reduce.3" -> "convert.7";
	"convert.7" -> "reshape.1136";
	"reshape.1136" -> "transpose.1137";
	"transpose.1137" -> "reshape.1139";
	"p31.966" -> "transpose.967";
	"reshape.1139" -> "dot.1140";
	"transpose.967" -> "dot.1140";
	"dot.1140" -> "reshape.1141";
	"add.914" -> "add.1143";
	"reshape.1141" -> "add.1143";
	"p35.1172" -> "broadcast.1173";
	"add.1143" -> "convert.1144";
	"convert.1144" -> "multiply.50";
	"convert.1144" -> "multiply.50";
	"multiply.50" -> "reduce.1152";
	"constant.1146" -> "reduce.1152";
	"AddComputation.1148" -> "reduce.1152";
	"constant.90" -> "broadcast.1160";
	"reduce.1152" -> "multiply.1161";
	"broadcast.1160" -> "multiply.1161";
	"p1.3" -> "broadcast.600";
	"multiply.1161" -> "add.10";
	"broadcast.600" -> "add.10";
	"add.10" -> "rsqrt.7";
	"rsqrt.7" -> "broadcast.1169";
	"convert.1144" -> "multiply.1170";
	"broadcast.1169" -> "multiply.1170";
	"multiply.1170" -> "convert.1171";
	"broadcast.1173" -> "multiply.1174";
	"convert.1171" -> "multiply.1174";
	"all-gather.950" -> "get-tuple-element.1178";
	"multiply.1174" -> "all-gather.1179";
	"get-tuple-element.1178" -> "all-gather.1179";
	"all-gather.1179" -> "get-tuple-element.1180";
	"get-tuple-element.1180" -> "reshape.1286";
	"p42.1284" -> "transpose.1285";
	"reshape.1286" -> "dot.1287";
	"transpose.1285" -> "dot.1287";
	"dot.1287" -> "reshape.1290";
	"reshape.1290" -> "slice.1291";
	"slice.1291" -> "logistic.1292";
	"slice.1291" -> "multiply.1293";
	"logistic.1292" -> "multiply.1293";
	"dot.1287" -> "reshape.1288";
	"reshape.1288" -> "slice.1289";
	"multiply.1293" -> "multiply.1294";
	"slice.1289" -> "multiply.1294";
	"multiply.1294" -> "reshape.1295";
	"p41.1282" -> "transpose.1283";
	"reshape.1295" -> "dot.1296";
	"transpose.1283" -> "dot.1296";
	"dot.1296" -> "reshape.1297";
	"add.1143" -> "add.1299";
	"reshape.1297" -> "add.1299";
	"add.1299" -> "convert.1300";
	"convert.1300" -> "multiply.51";
	"convert.1300" -> "multiply.51";
	"multiply.51" -> "reduce.1308";
	"constant.1302" -> "reduce.1308";
	"AddComputation.1304" -> "reduce.1308";
	"constant.94" -> "broadcast.1316";
	"reduce.1308" -> "multiply.1317";
	"broadcast.1316" -> "multiply.1317";
	"p1.3" -> "broadcast.602";
	"multiply.1317" -> "add.11";
	"broadcast.602" -> "add.11";
	"add.11" -> "rsqrt.8";
	"rsqrt.8" -> "broadcast.1325";
	"convert.1300" -> "multiply.1326";
	"broadcast.1325" -> "multiply.1326";
	"multiply.1326" -> "convert.1327";
	"broadcast.1329" -> "multiply.1330";
	"convert.1327" -> "multiply.1330";
	"multiply.1330" -> "transpose.1401";
	"transpose.1401" -> "reshape.1402";
	"p48.1399" -> "transpose.1400";
	"reshape.1402" -> "dot.1403";
	"transpose.1400" -> "dot.1403";
	"dot.1403" -> "convert.286";
	"convert.286" -> "reshape.2820";
	"reshape.2820" -> "slice.1407";
	"slice.1407" -> "reshape.1408";
	"reshape.1408" -> "reduce.1415";
	"constant.1409" -> "reduce.1415";
	"MaxComputation.1411" -> "reduce.1415";
	"reduce.1415" -> "broadcast.1438";
	"reshape.1408" -> "subtract.1439";
	"broadcast.1438" -> "subtract.1439";
	"subtract.1439" -> "reshape.1440";
	"reshape.1440" -> "pad.1446";
	"constant.1445" -> "pad.1446";
	"broadcast.1" -> "select.1448";
	"pad.1446" -> "select.1448";
	"reshape.2820" -> "select.1448";
	"select.1448" -> "slice.1450";
	"slice.1450" -> "exponential.0";
	"exponential.0" -> "reshape.1873";
	"reshape.1873" -> "reduce.1459";
	"constant.1453" -> "reduce.1459";
	"AddComputation.1455" -> "reduce.1459";
	"reduce.1459" -> "broadcast.1463";
	"reshape.1873" -> "divide.1464";
	"broadcast.1463" -> "divide.1464";
	"p46.1349" -> "slice.1350";
	"slice.1350" -> "reshape.1351";
	"constant.1354" -> "broadcast.1355";
	"reshape.1351" -> "compare.1356";
	"broadcast.1355" -> "compare.1356";
	"compare.1356" -> "convert.1357";
	"p45.1348" -> "broadcast.1352";
	"reshape.1351" -> "compare.1353";
	"broadcast.1352" -> "compare.1353";
	"compare.1353" -> "convert.1358";
	"convert.1357" -> "and.1359";
	"convert.1358" -> "and.1359";
	"and.1359" -> "convert.1360";
	"constant.40" -> "broadcast.35";
	"convert.1360" -> "select";
	"reshape.1351" -> "select";
	"broadcast.35" -> "select";
	"constant.1472" -> "broadcast.1473";
	"select" -> "compare.1474";
	"broadcast.1473" -> "compare.1474";
	"p45.1348" -> "broadcast.1470";
	"select" -> "add.1471";
	"broadcast.1470" -> "add.1471";
	"compare.1474" -> "select.1475";
	"add.1471" -> "select.1475";
	"select" -> "select.1475";
	"select.1475" -> "reshape.1486";
	"iota.19" -> "concatenate.1487";
	"reshape.1486" -> "concatenate.1487";
	"constant.1376" -> "broadcast.1377";
	"select" -> "compare.1378";
	"broadcast.1377" -> "compare.1378";
	"p45.1348" -> "broadcast.1374";
	"select" -> "add.1375";
	"broadcast.1374" -> "add.1375";
	"compare.1378" -> "select.1379";
	"add.1375" -> "select.1379";
	"select" -> "select.1379";
	"select.1379" -> "reshape.1392";
	"iota.20" -> "concatenate.1393";
	"reshape.1392" -> "concatenate.1393";
	"divide.1464" -> "gather.1465";
	"concatenate.1393" -> "gather.1465";
	"convert.1360" -> "convert.1362";
	"gather.1465" -> "subtract.1466";
	"convert.1362" -> "subtract.1466";
	"divide.1464" -> "scatter.1492";
	"concatenate.1487" -> "scatter.1492";
	"subtract.1466" -> "scatter.1492";
	"ScatterCombiner.1489" -> "scatter.1492";
	"constant.95" -> "divide.0";
	"p44.1333" -> "divide.0";
	"divide.0" -> "broadcast.1496";
	"scatter.1492" -> "multiply.1497";
	"broadcast.1496" -> "multiply.1497";
	"multiply.1497" -> "reshape.1498";
	"reshape.1498" -> "pad.1513";
	"constant.1512" -> "pad.1513";
	"constant.1504" -> "broadcast.1508";
	"broadcast" -> "select.1515";
	"pad.1513" -> "select.1515";
	"broadcast.1508" -> "select.1515";
	"select.1515" -> "convert.1516";
	"convert.1516" -> "reshape.1583";
	"reshape.1583" -> "dot.1584";
	"p48.1399" -> "dot.1584";
	"dot.1584" -> "reshape.1585";
	"reshape.1585" -> "transpose.1586";
	"p43.1328" -> "broadcast.1587";
	"transpose.1586" -> "multiply.1588";
	"broadcast.1587" -> "multiply.1588";
	"multiply.1588" -> "convert.1589";
	"rsqrt.8" -> "broadcast.1610";
	"convert.1589" -> "multiply.1611";
	"broadcast.1610" -> "multiply.1611";
	"convert.1589" -> "multiply.1590";
	"convert.1300" -> "multiply.1590";
	"multiply.1590" -> "reduce.1597";
	"constant.1591" -> "reduce.1597";
	"AddComputation.1593" -> "reduce.1597";
	"p52.1578" -> "broadcast.604";
	"reduce.1597" -> "multiply.79";
	"broadcast.604" -> "multiply.79";
	"multiply.79" -> "reshape.1876";
	"rsqrt.8" -> "reshape.2131";
	"reshape.2131" -> "multiply.52";
	"reshape.2131" -> "multiply.52";
	"reshape.2131" -> "multiply.53";
	"multiply.52" -> "multiply.53";
	"reshape.1876" -> "multiply.1600";
	"multiply.53" -> "multiply.1600";
	"p51.1571" -> "broadcast.606";
	"multiply.1600" -> "divide.18";
	"broadcast.606" -> "divide.18";
	"divide.18" -> "reshape.1977";
	"reshape.1977" -> "broadcast.48";
	"p50.1559" -> "broadcast.1563";
	"convert.1300" -> "multiply.1570";
	"broadcast.1563" -> "multiply.1570";
	"broadcast.48" -> "multiply.1607";
	"multiply.1570" -> "multiply.1607";
	"multiply.1611" -> "add.1612";
	"multiply.1607" -> "add.1612";
	"add.1612" -> "convert.1613";
	"convert.1613" -> "reshape.1651";
	"reshape.1651" -> "dot.1652";
	"p41.1282" -> "dot.1652";
	"dot.1652" -> "reshape.1653";
	"slice.1291" -> "tuple.1654";
	"slice.1289" -> "tuple.1654";
	"reshape.1653" -> "tuple.1654";
	"tuple.1654" -> "opt-barrier.1655";
	"opt-barrier.1655" -> "get-tuple-element.1658";
	"constant.96" -> "broadcast.49";
	"opt-barrier.1655" -> "get-tuple-element.1657";
	"get-tuple-element.1657" -> "pad.1673";
	"constant.1672" -> "pad.1673";
	"constant.97" -> "broadcast.50";
	"opt-barrier.1655" -> "get-tuple-element.1656";
	"get-tuple-element.1656" -> "pad.1664";
	"constant.1663" -> "pad.1664";
	"dot.1287" -> "reshape.1659";
	"broadcast.50" -> "select.1666";
	"pad.1664" -> "select.1666";
	"reshape.1659" -> "select.1666";
	"broadcast.49" -> "select.1675";
	"pad.1673" -> "select.1675";
	"select.1666" -> "select.1675";
	"select.1675" -> "slice.1685";
	"get-tuple-element.1658" -> "multiply.1686";
	"slice.1685" -> "multiply.1686";
	"select.1675" -> "logistic.0";
	"logistic.0" -> "slice.1";
	"constant.1687" -> "broadcast.1692";
	"select.1675" -> "slice.1678";
	"constant.1687" -> "broadcast.1689";
	"broadcast.1689" -> "subtract.1690";
	"slice.1" -> "subtract.1690";
	"slice.1678" -> "multiply.1691";
	"subtract.1690" -> "multiply.1691";
	"broadcast.1692" -> "add.1693";
	"multiply.1691" -> "add.1693";
	"slice.1" -> "multiply.1694";
	"add.1693" -> "multiply.1694";
	"multiply.1686" -> "multiply.1695";
	"multiply.1694" -> "multiply.1695";
	"logistic.0" -> "slice.0";
	"slice.1678" -> "multiply.1680";
	"slice.0" -> "multiply.1680";
	"get-tuple-element.1658" -> "multiply.1683";
	"multiply.1680" -> "multiply.1683";
	"multiply.1695" -> "concatenate.1696";
	"multiply.1683" -> "concatenate.1696";
	"concatenate.1696" -> "reshape.1768";
	"reshape.1768" -> "dot.1769";
	"p42.1284" -> "dot.1769";
	"dot.1769" -> "reshape.1770";
	"all-gather.1179" -> "get-tuple-element.1186";
	"multiply.1174" -> "all-gather.1187";
	"get-tuple-element.1186" -> "all-gather.1187";
	"all-gather.1187" -> "get-tuple-element.1194";
	"reshape.1770" -> "reduce-scatter.1779";
	"get-tuple-element.1194" -> "reduce-scatter.1779";
	"AddComputation.1775" -> "reduce-scatter.1779";
	"reduce-scatter.1779" -> "get-tuple-element.1780";
	"p35.1172" -> "broadcast.1783";
	"get-tuple-element.1780" -> "multiply.1784";
	"broadcast.1783" -> "multiply.1784";
	"multiply.1784" -> "convert.1785";
	"rsqrt.7" -> "broadcast.1806";
	"convert.1785" -> "multiply.1807";
	"broadcast.1806" -> "multiply.1807";
	"convert.1785" -> "multiply.1786";
	"convert.1144" -> "multiply.1786";
	"multiply.1786" -> "reduce.1793";
	"constant.1787" -> "reduce.1793";
	"AddComputation.1789" -> "reduce.1793";
	"p52.1578" -> "broadcast.608";
	"reduce.1793" -> "multiply.80";
	"broadcast.608" -> "multiply.80";
	"multiply.80" -> "reshape.1879";
	"rsqrt.7" -> "reshape.2127";
	"reshape.2127" -> "multiply.54";
	"reshape.2127" -> "multiply.54";
	"reshape.2127" -> "multiply.55";
	"multiply.54" -> "multiply.55";
	"reshape.1879" -> "multiply.1796";
	"multiply.55" -> "multiply.1796";
	"p51.1571" -> "broadcast.610";
	"multiply.1796" -> "divide.19";
	"broadcast.610" -> "divide.19";
	"divide.19" -> "reshape.1980";
	"reshape.1980" -> "broadcast.54";
	"p50.1559" -> "broadcast.1750";
	"convert.1144" -> "multiply.1757";
	"broadcast.1750" -> "multiply.1757";
	"broadcast.54" -> "multiply.1803";
	"multiply.1757" -> "multiply.1803";
	"multiply.1807" -> "add.1808";
	"multiply.1803" -> "add.1808";
	"add.1808" -> "convert.1809";
	"convert.1613" -> "add.1811";
	"convert.1809" -> "add.1811";
	"iota.21" -> "compare.1881";
	"iota.22" -> "compare.1881";
	"constant.1872" -> "broadcast.612";
	"constant.1867" -> "broadcast.614";
	"compare.1881" -> "select.13";
	"broadcast.612" -> "select.13";
	"broadcast.614" -> "select.13";
	"select.13" -> "convert.35";
	"convert.35" -> "broadcast.57";
	"constant.1961" -> "broadcast.1962";
	"add.1811" -> "reshape.1849";
	"reshape.1849" -> "dot.1850";
	"p31.966" -> "dot.1850";
	"dot.1850" -> "reshape.1852";
	"reshape.1852" -> "transpose.1853";
	"add.1111" -> "tuple.1854";
	"add.1071" -> "tuple.1854";
	"transpose.975" -> "tuple.1854";
	"transpose.1853" -> "tuple.1854";
	"tuple.1854" -> "opt-barrier.1855";
	"opt-barrier.1855" -> "get-tuple-element.1859";
	"get-tuple-element.1859" -> "reshape.412";
	"reshape.412" -> "broadcast.303";
	"constant.98" -> "broadcast.58";
	"opt-barrier.1855" -> "get-tuple-element.1858";
	"get-tuple-element.1858" -> "transpose.1927";
	"transpose.1927" -> "reshape.1928";
	"reshape.1928" -> "pad.1934";
	"constant.1933" -> "pad.1934";
	"dot.971" -> "reshape.1929";
	"broadcast.58" -> "select.1936";
	"pad.1934" -> "select.1936";
	"reshape.1929" -> "select.1936";
	"select.1936" -> "slice.1939";
	"slice.1939" -> "reshape.1940";
	"reshape.1940" -> "transpose.1941";
	"transpose.1941" -> "reshape.413";
	"reshape.413" -> "broadcast.304";
	"broadcast.303" -> "multiply.56";
	"broadcast.304" -> "multiply.56";
	"multiply.56" -> "convert.287";
	"convert.287" -> "reshape.2822";
	"convert.35" -> "broadcast.61";
	"constant.1900" -> "broadcast.1901";
	"opt-barrier.1855" -> "get-tuple-element.1856";
	"get-tuple-element.1856" -> "reshape.1892";
	"opt-barrier.1855" -> "get-tuple-element.1857";
	"get-tuple-element.1857" -> "transpose.1888";
	"transpose.1888" -> "reshape.1890";
	"reshape.1892" -> "dot.1893";
	"reshape.1890" -> "dot.1893";
	"p7.101" -> "broadcast.616";
	"dot.1893" -> "divide.14";
	"broadcast.616" -> "divide.14";
	"divide.14" -> "reshape.1887";
	"broadcast.61" -> "select.1902";
	"broadcast.1901" -> "select.1902";
	"reshape.1887" -> "select.1902";
	"select.1902" -> "convert.1903";
	"convert.1903" -> "custom-call.16";
	"reshape.2822" -> "custom-call.17";
	"custom-call.16" -> "custom-call.17";
	"custom-call.17" -> "convert.1957";
	"broadcast.57" -> "select.1963";
	"broadcast.1962" -> "select.1963";
	"convert.1957" -> "select.1963";
	"p7.101" -> "broadcast.1964";
	"select.1963" -> "divide.1965";
	"broadcast.1964" -> "divide.1965";
	"divide.1965" -> "reshape.1966";
	"transpose.1888" -> "reshape.2032";
	"reshape.2032" -> "transpose.2033";
	"reshape.1966" -> "dot.2034";
	"transpose.2033" -> "dot.2034";
	"dot.2034" -> "reshape.2035";
	"gather.1020" -> "reshape.2055";
	"reshape.2055" -> "broadcast.2056";
	"reshape.2035" -> "multiply.2057";
	"broadcast.2056" -> "multiply.2057";
	"multiply.2057" -> "reduce.2064";
	"constant.2058" -> "reduce.2064";
	"AddComputation.2060" -> "reduce.2064";
	"reduce.2064" -> "negate.9";
	"gather.1058" -> "reshape.2037";
	"reshape.2037" -> "broadcast.2038";
	"reshape.2035" -> "multiply.2039";
	"broadcast.2038" -> "multiply.2039";
	"multiply.2039" -> "reduce.2046";
	"constant.2040" -> "reduce.2046";
	"AddComputation.2042" -> "reduce.2046";
	"negate.9" -> "add.13";
	"reduce.2046" -> "add.13";
	"add.13" -> "reshape.2142";
	"reshape.2142" -> "transpose.2089";
	"transpose.2089" -> "reshape.2090";
	"get-tuple-element.1856" -> "reshape.1967";
	"reshape.1967" -> "transpose.1968";
	"transpose.1968" -> "dot.1969";
	"reshape.1966" -> "dot.1969";
	"dot.1969" -> "reshape.1970";
	"reshape.1970" -> "transpose.1971";
	"gather.1020" -> "reshape.1991";
	"reshape.1991" -> "broadcast.1992";
	"transpose.1971" -> "multiply.1993";
	"broadcast.1992" -> "multiply.1993";
	"multiply.1993" -> "reduce.2000";
	"constant.1994" -> "reduce.2000";
	"AddComputation.1996" -> "reduce.2000";
	"reduce.2000" -> "negate.8";
	"gather.1058" -> "reshape.1973";
	"reshape.1973" -> "broadcast.1974";
	"transpose.1971" -> "multiply.1975";
	"broadcast.1974" -> "multiply.1975";
	"multiply.1975" -> "reduce.1982";
	"constant.1976" -> "reduce.1982";
	"AddComputation.1978" -> "reduce.1982";
	"negate.8" -> "add.12";
	"reduce.1982" -> "add.12";
	"add.12" -> "reshape.2136";
	"reshape.2136" -> "transpose.2025";
	"transpose.2025" -> "reshape.2026";
	"custom-call.16" -> "convert.1911";
	"convert.1911" -> "reshape.1913";
	"get-tuple-element.1859" -> "reshape.457";
	"reshape.457" -> "broadcast.618";
	"reshape.1913" -> "multiply.88";
	"broadcast.618" -> "multiply.88";
	"multiply.88" -> "convert.41";
	"convert.41" -> "reduce.4";
	"constant.47" -> "reduce.4";
	"scalar_add_computation.1" -> "reduce.4";
	"reduce.4" -> "convert.10";
	"convert.10" -> "reshape.1916";
	"reshape.1916" -> "transpose.1917";
	"transpose.1917" -> "reshape.1918";
	"reshape.2090" -> "concatenate.2091";
	"reshape.2026" -> "concatenate.2091";
	"reshape.1918" -> "concatenate.2091";
	"concatenate.2091" -> "reshape.2160";
	"reshape.2160" -> "dot.2161";
	"p32.968" -> "dot.2161";
	"dot.2161" -> "reshape.2162";
	"multiply.945" -> "all-gather.1195";
	"get-tuple-element.1194" -> "all-gather.1195";
	"all-gather.1195" -> "get-tuple-element.1202";
	"reshape.2162" -> "reduce-scatter.2171";
	"get-tuple-element.1202" -> "reduce-scatter.2171";
	"AddComputation.2167" -> "reduce-scatter.2171";
	"reduce-scatter.2171" -> "get-tuple-element.2172";
	"p30.943" -> "broadcast.2175";
	"get-tuple-element.2172" -> "multiply.2176";
	"broadcast.2175" -> "multiply.2176";
	"multiply.2176" -> "convert.2177";
	"rsqrt.6" -> "broadcast.2198";
	"convert.2177" -> "multiply.2199";
	"broadcast.2198" -> "multiply.2199";
	"convert.2177" -> "multiply.2178";
	"convert.915" -> "multiply.2178";
	"multiply.2178" -> "reduce.2185";
	"constant.2179" -> "reduce.2185";
	"AddComputation.2181" -> "reduce.2185";
	"p52.1578" -> "broadcast.619";
	"reduce.2185" -> "multiply.81";
	"broadcast.619" -> "multiply.81";
	"multiply.81" -> "reshape.1899";
	"rsqrt.6" -> "reshape.2123";
	"reshape.2123" -> "multiply.59";
	"reshape.2123" -> "multiply.59";
	"reshape.2123" -> "multiply.60";
	"multiply.59" -> "multiply.60";
	"reshape.1899" -> "multiply.2188";
	"multiply.60" -> "multiply.2188";
	"p51.1571" -> "broadcast.621";
	"multiply.2188" -> "divide.20";
	"broadcast.621" -> "divide.20";
	"divide.20" -> "reshape.1984";
	"reshape.1984" -> "broadcast.85";
	"p50.1559" -> "broadcast.2142";
	"convert.915" -> "multiply.2149";
	"broadcast.2142" -> "multiply.2149";
	"broadcast.85" -> "multiply.2195";
	"multiply.2149" -> "multiply.2195";
	"multiply.2199" -> "add.2200";
	"multiply.2195" -> "add.2200";
	"add.2200" -> "convert.2201";
	"add.1811" -> "add.2203";
	"convert.2201" -> "add.2203";
	"add.2203" -> "reshape.2241";
	"reshape.2241" -> "dot.2242";
	"p28.897" -> "dot.2242";
	"dot.2242" -> "reshape.2243";
	"slice.906" -> "tuple.2244";
	"slice.904" -> "tuple.2244";
	"reshape.2243" -> "tuple.2244";
	"tuple.2244" -> "opt-barrier.2245";
	"opt-barrier.2245" -> "get-tuple-element.2248";
	"constant.116" -> "broadcast.87";
	"opt-barrier.2245" -> "get-tuple-element.2247";
	"get-tuple-element.2247" -> "pad.2263";
	"constant.2262" -> "pad.2263";
	"constant.117" -> "broadcast.88";
	"opt-barrier.2245" -> "get-tuple-element.2246";
	"get-tuple-element.2246" -> "pad.2254";
	"constant.2253" -> "pad.2254";
	"dot.902" -> "reshape.2249";
	"broadcast.88" -> "select.2256";
	"pad.2254" -> "select.2256";
	"reshape.2249" -> "select.2256";
	"broadcast.87" -> "select.2265";
	"pad.2263" -> "select.2265";
	"select.2256" -> "select.2265";
	"select.2265" -> "slice.2275";
	"get-tuple-element.2248" -> "multiply.2276";
	"slice.2275" -> "multiply.2276";
	"select.2265" -> "logistic.1";
	"logistic.1" -> "slice.3";
	"constant.2277" -> "broadcast.2282";
	"select.2265" -> "slice.2268";
	"constant.2277" -> "broadcast.2279";
	"broadcast.2279" -> "subtract.2280";
	"slice.3" -> "subtract.2280";
	"slice.2268" -> "multiply.2281";
	"subtract.2280" -> "multiply.2281";
	"broadcast.2282" -> "add.2283";
	"multiply.2281" -> "add.2283";
	"slice.3" -> "multiply.2284";
	"add.2283" -> "multiply.2284";
	"multiply.2276" -> "multiply.2285";
	"multiply.2284" -> "multiply.2285";
	"logistic.1" -> "slice.2";
	"slice.2268" -> "multiply.2270";
	"slice.2" -> "multiply.2270";
	"get-tuple-element.2248" -> "multiply.2273";
	"multiply.2270" -> "multiply.2273";
	"multiply.2285" -> "concatenate.2286";
	"multiply.2273" -> "concatenate.2286";
	"concatenate.2286" -> "reshape.2358";
	"reshape.2358" -> "dot.2359";
	"p29.899" -> "dot.2359";
	"dot.2359" -> "reshape.2360";
	"multiply.876" -> "all-gather.1203";
	"get-tuple-element.1202" -> "all-gather.1203";
	"all-gather.1203" -> "get-tuple-element.1210";
	"reshape.2360" -> "reduce-scatter.2369";
	"get-tuple-element.1210" -> "reduce-scatter.2369";
	"AddComputation.2365" -> "reduce-scatter.2369";
	"reduce-scatter.2369" -> "get-tuple-element.2370";
	"p27.874" -> "broadcast.2373";
	"get-tuple-element.2370" -> "multiply.2374";
	"broadcast.2373" -> "multiply.2374";
	"multiply.2374" -> "convert.2375";
	"rsqrt.5" -> "broadcast.2396";
	"convert.2375" -> "multiply.2397";
	"broadcast.2396" -> "multiply.2397";
	"convert.2375" -> "multiply.2376";
	"convert.846" -> "multiply.2376";
	"multiply.2376" -> "reduce.2383";
	"constant.2377" -> "reduce.2383";
	"AddComputation.2379" -> "reduce.2383";
	"p52.1578" -> "broadcast.623";
	"reduce.2383" -> "multiply.82";
	"broadcast.623" -> "multiply.82";
	"multiply.82" -> "reshape.1902";
	"rsqrt.5" -> "reshape.2121";
	"reshape.2121" -> "multiply.61";
	"reshape.2121" -> "multiply.61";
	"reshape.2121" -> "multiply.62";
	"multiply.61" -> "multiply.62";
	"reshape.1902" -> "multiply.2386";
	"multiply.62" -> "multiply.2386";
	"p51.1571" -> "broadcast.625";
	"multiply.2386" -> "divide.21";
	"broadcast.625" -> "divide.21";
	"divide.21" -> "reshape.1989";
	"reshape.1989" -> "broadcast.96";
	"p50.1559" -> "broadcast.2340";
	"convert.846" -> "multiply.2347";
	"broadcast.2340" -> "multiply.2347";
	"broadcast.96" -> "multiply.2393";
	"multiply.2347" -> "multiply.2393";
	"multiply.2397" -> "add.2398";
	"multiply.2393" -> "add.2398";
	"add.2398" -> "convert.2399";
	"add.2203" -> "add.2401";
	"convert.2399" -> "add.2401";
	"iota.23" -> "compare.2471";
	"iota.24" -> "compare.2471";
	"constant.2462" -> "broadcast.627";
	"constant.2457" -> "broadcast.629";
	"compare.2471" -> "select.14";
	"broadcast.627" -> "select.14";
	"broadcast.629" -> "select.14";
	"select.14" -> "convert.34";
	"convert.34" -> "broadcast.101";
	"constant.2551" -> "broadcast.2552";
	"add.2401" -> "reshape.2439";
	"reshape.2439" -> "dot.2440";
	"p23.668" -> "dot.2440";
	"dot.2440" -> "reshape.2442";
	"reshape.2442" -> "transpose.2443";
	"add.813" -> "tuple.2444";
	"add.773" -> "tuple.2444";
	"transpose.677" -> "tuple.2444";
	"transpose.2443" -> "tuple.2444";
	"tuple.2444" -> "opt-barrier.2445";
	"opt-barrier.2445" -> "get-tuple-element.2449";
	"get-tuple-element.2449" -> "reshape.536";
	"reshape.536" -> "broadcast.327";
	"constant.118" -> "broadcast.102";
	"opt-barrier.2445" -> "get-tuple-element.2448";
	"get-tuple-element.2448" -> "transpose.2517";
	"transpose.2517" -> "reshape.2518";
	"reshape.2518" -> "pad.2524";
	"constant.2523" -> "pad.2524";
	"dot.673" -> "reshape.2519";
	"broadcast.102" -> "select.2526";
	"pad.2524" -> "select.2526";
	"reshape.2519" -> "select.2526";
	"select.2526" -> "slice.2529";
	"slice.2529" -> "reshape.2530";
	"reshape.2530" -> "transpose.2531";
	"transpose.2531" -> "reshape.537";
	"reshape.537" -> "broadcast.328";
	"broadcast.327" -> "multiply.63";
	"broadcast.328" -> "multiply.63";
	"multiply.63" -> "convert.289";
	"convert.289" -> "reshape.2824";
	"convert.34" -> "broadcast.105";
	"constant.2490" -> "broadcast.2491";
	"opt-barrier.2445" -> "get-tuple-element.2446";
	"get-tuple-element.2446" -> "reshape.2482";
	"opt-barrier.2445" -> "get-tuple-element.2447";
	"get-tuple-element.2447" -> "transpose.2478";
	"transpose.2478" -> "reshape.2480";
	"reshape.2482" -> "dot.2483";
	"reshape.2480" -> "dot.2483";
	"p7.101" -> "broadcast.631";
	"dot.2483" -> "divide.15";
	"broadcast.631" -> "divide.15";
	"divide.15" -> "reshape.1909";
	"broadcast.105" -> "select.2492";
	"broadcast.2491" -> "select.2492";
	"reshape.1909" -> "select.2492";
	"select.2492" -> "convert.2493";
	"convert.2493" -> "custom-call.18";
	"reshape.2824" -> "custom-call.19";
	"custom-call.18" -> "custom-call.19";
	"custom-call.19" -> "convert.2547";
	"broadcast.101" -> "select.2553";
	"broadcast.2552" -> "select.2553";
	"convert.2547" -> "select.2553";
	"p7.101" -> "broadcast.2554";
	"select.2553" -> "divide.2555";
	"broadcast.2554" -> "divide.2555";
	"divide.2555" -> "reshape.2556";
	"transpose.2478" -> "reshape.2622";
	"reshape.2622" -> "transpose.2623";
	"reshape.2556" -> "dot.2624";
	"transpose.2623" -> "dot.2624";
	"dot.2624" -> "reshape.2625";
	"gather.722" -> "reshape.2645";
	"reshape.2645" -> "broadcast.2646";
	"reshape.2625" -> "multiply.2647";
	"broadcast.2646" -> "multiply.2647";
	"multiply.2647" -> "reduce.2654";
	"constant.2648" -> "reduce.2654";
	"AddComputation.2650" -> "reduce.2654";
	"reduce.2654" -> "negate.11";
	"gather.760" -> "reshape.2627";
	"reshape.2627" -> "broadcast.2628";
	"reshape.2625" -> "multiply.2629";
	"broadcast.2628" -> "multiply.2629";
	"multiply.2629" -> "reduce.2636";
	"constant.2630" -> "reduce.2636";
	"AddComputation.2632" -> "reduce.2636";
	"negate.11" -> "add.15";
	"reduce.2636" -> "add.15";
	"add.15" -> "reshape.2150";
	"reshape.2150" -> "transpose.2679";
	"transpose.2679" -> "reshape.2680";
	"get-tuple-element.2446" -> "reshape.2557";
	"reshape.2557" -> "transpose.2558";
	"transpose.2558" -> "dot.2559";
	"reshape.2556" -> "dot.2559";
	"dot.2559" -> "reshape.2560";
	"reshape.2560" -> "transpose.2561";
	"gather.722" -> "reshape.2581";
	"reshape.2581" -> "broadcast.2582";
	"transpose.2561" -> "multiply.2583";
	"broadcast.2582" -> "multiply.2583";
	"multiply.2583" -> "reduce.2590";
	"constant.2584" -> "reduce.2590";
	"AddComputation.2586" -> "reduce.2590";
	"reduce.2590" -> "negate.10";
	"gather.760" -> "reshape.2563";
	"reshape.2563" -> "broadcast.2564";
	"transpose.2561" -> "multiply.2565";
	"broadcast.2564" -> "multiply.2565";
	"multiply.2565" -> "reduce.2572";
	"constant.2566" -> "reduce.2572";
	"AddComputation.2568" -> "reduce.2572";
	"negate.10" -> "add.14";
	"reduce.2572" -> "add.14";
	"add.14" -> "reshape.2147";
	"reshape.2147" -> "transpose.2615";
	"transpose.2615" -> "reshape.2616";
	"custom-call.18" -> "convert.2501";
	"convert.2501" -> "reshape.2503";
	"get-tuple-element.2449" -> "reshape.575";
	"reshape.575" -> "broadcast.634";
	"reshape.2503" -> "multiply.89";
	"broadcast.634" -> "multiply.89";
	"multiply.89" -> "convert.42";
	"convert.42" -> "reduce.5";
	"constant.48" -> "reduce.5";
	"scalar_add_computation.1" -> "reduce.5";
	"reduce.5" -> "convert.12";
	"convert.12" -> "reshape.2506";
	"reshape.2506" -> "transpose.2507";
	"transpose.2507" -> "reshape.2508";
	"reshape.2680" -> "concatenate.2681";
	"reshape.2616" -> "concatenate.2681";
	"reshape.2508" -> "concatenate.2681";
	"concatenate.2681" -> "reshape.2750";
	"reshape.2750" -> "dot.2751";
	"p24.670" -> "dot.2751";
	"dot.2751" -> "reshape.2752";
	"multiply.647" -> "all-gather.1211";
	"get-tuple-element.1210" -> "all-gather.1211";
	"all-gather.1211" -> "get-tuple-element.1218";
	"reshape.2752" -> "reduce-scatter.2761";
	"get-tuple-element.1218" -> "reduce-scatter.2761";
	"AddComputation.2757" -> "reduce-scatter.2761";
	"reduce-scatter.2761" -> "get-tuple-element.2762";
	"p22.645" -> "broadcast.2765";
	"get-tuple-element.2762" -> "multiply.2766";
	"broadcast.2765" -> "multiply.2766";
	"multiply.2766" -> "convert.2767";
	"rsqrt.4" -> "broadcast.2788";
	"convert.2767" -> "multiply.2789";
	"broadcast.2788" -> "multiply.2789";
	"convert.2767" -> "multiply.2768";
	"convert.617" -> "multiply.2768";
	"multiply.2768" -> "reduce.2775";
	"constant.2769" -> "reduce.2775";
	"AddComputation.2771" -> "reduce.2775";
	"p52.1578" -> "broadcast.635";
	"reduce.2775" -> "multiply.83";
	"broadcast.635" -> "multiply.83";
	"multiply.83" -> "reshape.1923";
	"rsqrt.4" -> "reshape.2119";
	"reshape.2119" -> "multiply.65";
	"reshape.2119" -> "multiply.65";
	"reshape.2119" -> "multiply.66";
	"multiply.65" -> "multiply.66";
	"reshape.1923" -> "multiply.2778";
	"multiply.66" -> "multiply.2778";
	"p51.1571" -> "broadcast.638";
	"multiply.2778" -> "divide.22";
	"broadcast.638" -> "divide.22";
	"divide.22" -> "reshape.1993";
	"reshape.1993" -> "broadcast.127";
	"p50.1559" -> "broadcast.2732";
	"convert.617" -> "multiply.2739";
	"broadcast.2732" -> "multiply.2739";
	"broadcast.127" -> "multiply.2785";
	"multiply.2739" -> "multiply.2785";
	"multiply.2789" -> "add.2790";
	"multiply.2785" -> "add.2790";
	"add.2790" -> "convert.2791";
	"add.2401" -> "add.2793";
	"convert.2791" -> "add.2793";
	"add.2793" -> "reshape.2831";
	"reshape.2831" -> "dot.2832";
	"p20.599" -> "dot.2832";
	"dot.2832" -> "reshape.2833";
	"slice.608" -> "tuple.2834";
	"slice.606" -> "tuple.2834";
	"reshape.2833" -> "tuple.2834";
	"tuple.2834" -> "opt-barrier.2835";
	"opt-barrier.2835" -> "get-tuple-element.2838";
	"constant.133" -> "broadcast.128";
	"opt-barrier.2835" -> "get-tuple-element.2837";
	"get-tuple-element.2837" -> "pad.2853";
	"constant.2852" -> "pad.2853";
	"constant.134" -> "broadcast.129";
	"opt-barrier.2835" -> "get-tuple-element.2836";
	"get-tuple-element.2836" -> "pad.2844";
	"constant.2843" -> "pad.2844";
	"dot.604" -> "reshape.2839";
	"broadcast.129" -> "select.2846";
	"pad.2844" -> "select.2846";
	"reshape.2839" -> "select.2846";
	"broadcast.128" -> "select.2855";
	"pad.2853" -> "select.2855";
	"select.2846" -> "select.2855";
	"select.2855" -> "slice.2865";
	"get-tuple-element.2838" -> "multiply.2866";
	"slice.2865" -> "multiply.2866";
	"select.2855" -> "logistic.2";
	"logistic.2" -> "slice.5";
	"constant.2867" -> "broadcast.2872";
	"select.2855" -> "slice.2858";
	"constant.2867" -> "broadcast.2869";
	"broadcast.2869" -> "subtract.2870";
	"slice.5" -> "subtract.2870";
	"slice.2858" -> "multiply.2871";
	"subtract.2870" -> "multiply.2871";
	"broadcast.2872" -> "add.2873";
	"multiply.2871" -> "add.2873";
	"slice.5" -> "multiply.2874";
	"add.2873" -> "multiply.2874";
	"multiply.2866" -> "multiply.2875";
	"multiply.2874" -> "multiply.2875";
	"logistic.2" -> "slice.4";
	"slice.2858" -> "multiply.2860";
	"slice.4" -> "multiply.2860";
	"get-tuple-element.2838" -> "multiply.2863";
	"multiply.2860" -> "multiply.2863";
	"multiply.2875" -> "concatenate.2876";
	"multiply.2863" -> "concatenate.2876";
	"concatenate.2876" -> "reshape.2948";
	"reshape.2948" -> "dot.2949";
	"p21.601" -> "dot.2949";
	"dot.2949" -> "reshape.2950";
	"multiply.578" -> "all-gather.1219";
	"get-tuple-element.1218" -> "all-gather.1219";
	"all-gather.1219" -> "get-tuple-element.1226";
	"reshape.2950" -> "reduce-scatter.2959";
	"get-tuple-element.1226" -> "reduce-scatter.2959";
	"AddComputation.2955" -> "reduce-scatter.2959";
	"reduce-scatter.2959" -> "get-tuple-element.2960";
	"p19.576" -> "broadcast.2963";
	"get-tuple-element.2960" -> "multiply.2964";
	"broadcast.2963" -> "multiply.2964";
	"multiply.2964" -> "convert.2965";
	"rsqrt.3" -> "broadcast.2986";
	"convert.2965" -> "multiply.2987";
	"broadcast.2986" -> "multiply.2987";
	"convert.2965" -> "multiply.2966";
	"convert.548" -> "multiply.2966";
	"multiply.2966" -> "reduce.2973";
	"constant.2967" -> "reduce.2973";
	"AddComputation.2969" -> "reduce.2973";
	"p52.1578" -> "broadcast.641";
	"reduce.2973" -> "multiply.84";
	"broadcast.641" -> "multiply.84";
	"multiply.84" -> "reshape.1927";
	"rsqrt.3" -> "reshape.2117";
	"reshape.2117" -> "multiply.67";
	"reshape.2117" -> "multiply.67";
	"reshape.2117" -> "multiply.68";
	"multiply.67" -> "multiply.68";
	"reshape.1927" -> "multiply.2976";
	"multiply.68" -> "multiply.2976";
	"p51.1571" -> "broadcast.644";
	"multiply.2976" -> "divide.23";
	"broadcast.644" -> "divide.23";
	"divide.23" -> "reshape.1996";
	"reshape.1996" -> "broadcast.133";
	"p50.1559" -> "broadcast.2930";
	"convert.548" -> "multiply.2937";
	"broadcast.2930" -> "multiply.2937";
	"broadcast.133" -> "multiply.2983";
	"multiply.2937" -> "multiply.2983";
	"multiply.2987" -> "add.2988";
	"multiply.2983" -> "add.2988";
	"add.2988" -> "convert.2989";
	"add.2793" -> "add.2991";
	"convert.2989" -> "add.2991";
	"iota.25" -> "compare.3061";
	"iota.26" -> "compare.3061";
	"constant.3052" -> "broadcast.647";
	"constant.3047" -> "broadcast.649";
	"compare.3061" -> "select.15";
	"broadcast.647" -> "select.15";
	"broadcast.649" -> "select.15";
	"select.15" -> "convert.33";
	"convert.33" -> "broadcast.136";
	"constant.3141" -> "broadcast.3142";
	"add.2991" -> "reshape.3029";
	"reshape.3029" -> "dot.3030";
	"p15.370" -> "dot.3030";
	"dot.3030" -> "reshape.3032";
	"reshape.3032" -> "transpose.3033";
	"add.515" -> "tuple.3034";
	"add.475" -> "tuple.3034";
	"transpose.379" -> "tuple.3034";
	"transpose.3033" -> "tuple.3034";
	"tuple.3034" -> "opt-barrier.3035";
	"opt-barrier.3035" -> "get-tuple-element.3039";
	"get-tuple-element.3039" -> "reshape.643";
	"reshape.643" -> "broadcast.356";
	"constant.135" -> "broadcast.137";
	"opt-barrier.3035" -> "get-tuple-element.3038";
	"get-tuple-element.3038" -> "transpose.3107";
	"transpose.3107" -> "reshape.3108";
	"reshape.3108" -> "pad.3114";
	"constant.3113" -> "pad.3114";
	"dot.375" -> "reshape.3109";
	"broadcast.137" -> "select.3116";
	"pad.3114" -> "select.3116";
	"reshape.3109" -> "select.3116";
	"select.3116" -> "slice.3119";
	"slice.3119" -> "reshape.3120";
	"reshape.3120" -> "transpose.3121";
	"transpose.3121" -> "reshape.644";
	"reshape.644" -> "broadcast.357";
	"broadcast.356" -> "multiply.69";
	"broadcast.357" -> "multiply.69";
	"multiply.69" -> "convert.290";
	"convert.290" -> "reshape.2827";
	"convert.33" -> "broadcast.139";
	"constant.3080" -> "broadcast.3081";
	"opt-barrier.3035" -> "get-tuple-element.3036";
	"get-tuple-element.3036" -> "reshape.3072";
	"opt-barrier.3035" -> "get-tuple-element.3037";
	"get-tuple-element.3037" -> "transpose.3068";
	"transpose.3068" -> "reshape.3070";
	"reshape.3072" -> "dot.3073";
	"reshape.3070" -> "dot.3073";
	"p7.101" -> "broadcast.651";
	"dot.3073" -> "divide.16";
	"broadcast.651" -> "divide.16";
	"divide.16" -> "reshape.1936";
	"broadcast.139" -> "select.3082";
	"broadcast.3081" -> "select.3082";
	"reshape.1936" -> "select.3082";
	"select.3082" -> "convert.3083";
	"convert.3083" -> "custom-call.20";
	"reshape.2827" -> "custom-call.21";
	"custom-call.20" -> "custom-call.21";
	"custom-call.21" -> "convert.3137";
	"broadcast.136" -> "select.3143";
	"broadcast.3142" -> "select.3143";
	"convert.3137" -> "select.3143";
	"p7.101" -> "broadcast.3144";
	"select.3143" -> "divide.3145";
	"broadcast.3144" -> "divide.3145";
	"divide.3145" -> "reshape.3146";
	"transpose.3068" -> "reshape.3212";
	"reshape.3212" -> "transpose.3213";
	"reshape.3146" -> "dot.3214";
	"transpose.3213" -> "dot.3214";
	"dot.3214" -> "reshape.3215";
	"gather.424" -> "reshape.3235";
	"reshape.3235" -> "broadcast.3236";
	"reshape.3215" -> "multiply.3237";
	"broadcast.3236" -> "multiply.3237";
	"multiply.3237" -> "reduce.3244";
	"constant.3238" -> "reduce.3244";
	"AddComputation.3240" -> "reduce.3244";
	"reduce.3244" -> "negate.13";
	"gather.462" -> "reshape.3217";
	"reshape.3217" -> "broadcast.3218";
	"reshape.3215" -> "multiply.3219";
	"broadcast.3218" -> "multiply.3219";
	"multiply.3219" -> "reduce.3226";
	"constant.3220" -> "reduce.3226";
	"AddComputation.3222" -> "reduce.3226";
	"negate.13" -> "add.17";
	"reduce.3226" -> "add.17";
	"add.17" -> "reshape.2161";
	"reshape.2161" -> "transpose.3269";
	"transpose.3269" -> "reshape.3270";
	"get-tuple-element.3036" -> "reshape.3147";
	"reshape.3147" -> "transpose.3148";
	"transpose.3148" -> "dot.3149";
	"reshape.3146" -> "dot.3149";
	"dot.3149" -> "reshape.3150";
	"reshape.3150" -> "transpose.3151";
	"gather.424" -> "reshape.3171";
	"reshape.3171" -> "broadcast.3172";
	"transpose.3151" -> "multiply.3173";
	"broadcast.3172" -> "multiply.3173";
	"multiply.3173" -> "reduce.3180";
	"constant.3174" -> "reduce.3180";
	"AddComputation.3176" -> "reduce.3180";
	"reduce.3180" -> "negate.12";
	"gather.462" -> "reshape.3153";
	"reshape.3153" -> "broadcast.3154";
	"transpose.3151" -> "multiply.3155";
	"broadcast.3154" -> "multiply.3155";
	"multiply.3155" -> "reduce.3162";
	"constant.3156" -> "reduce.3162";
	"AddComputation.3158" -> "reduce.3162";
	"negate.12" -> "add.16";
	"reduce.3162" -> "add.16";
	"add.16" -> "reshape.2155";
	"reshape.2155" -> "transpose.3205";
	"transpose.3205" -> "reshape.3206";
	"custom-call.20" -> "convert.3091";
	"convert.3091" -> "reshape.3093";
	"get-tuple-element.3039" -> "reshape.685";
	"reshape.685" -> "broadcast.653";
	"reshape.3093" -> "multiply.90";
	"broadcast.653" -> "multiply.90";
	"multiply.90" -> "convert.43";
	"convert.43" -> "reduce.6";
	"constant.49" -> "reduce.6";
	"scalar_add_computation.1" -> "reduce.6";
	"reduce.6" -> "convert.15";
	"convert.15" -> "reshape.3096";
	"reshape.3096" -> "transpose.3097";
	"transpose.3097" -> "reshape.3098";
	"reshape.3270" -> "concatenate.3271";
	"reshape.3206" -> "concatenate.3271";
	"reshape.3098" -> "concatenate.3271";
	"concatenate.3271" -> "reshape.3340";
	"reshape.3340" -> "dot.3341";
	"p16.372" -> "dot.3341";
	"dot.3341" -> "reshape.3342";
	"multiply.349" -> "all-gather.1227";
	"get-tuple-element.1226" -> "all-gather.1227";
	"all-gather.1227" -> "get-tuple-element.1234";
	"reshape.3342" -> "reduce-scatter.3351";
	"get-tuple-element.1234" -> "reduce-scatter.3351";
	"AddComputation.3347" -> "reduce-scatter.3351";
	"reduce-scatter.3351" -> "get-tuple-element.3352";
	"p14.347" -> "broadcast.3355";
	"get-tuple-element.3352" -> "multiply.3356";
	"broadcast.3355" -> "multiply.3356";
	"multiply.3356" -> "convert.3357";
	"rsqrt.2" -> "broadcast.3378";
	"convert.3357" -> "multiply.3379";
	"broadcast.3378" -> "multiply.3379";
	"convert.3357" -> "multiply.3358";
	"convert.319" -> "multiply.3358";
	"multiply.3358" -> "reduce.3365";
	"constant.3359" -> "reduce.3365";
	"AddComputation.3361" -> "reduce.3365";
	"p52.1578" -> "broadcast.654";
	"reduce.3365" -> "multiply.85";
	"broadcast.654" -> "multiply.85";
	"multiply.85" -> "reshape.1951";
	"rsqrt.2" -> "reshape.2115";
	"reshape.2115" -> "multiply.71";
	"reshape.2115" -> "multiply.71";
	"reshape.2115" -> "multiply.72";
	"multiply.71" -> "multiply.72";
	"reshape.1951" -> "multiply.3368";
	"multiply.72" -> "multiply.3368";
	"p51.1571" -> "broadcast.656";
	"multiply.3368" -> "divide.24";
	"broadcast.656" -> "divide.24";
	"divide.24" -> "reshape.1999";
	"reshape.1999" -> "broadcast.164";
	"p50.1559" -> "broadcast.3322";
	"convert.319" -> "multiply.3329";
	"broadcast.3322" -> "multiply.3329";
	"broadcast.164" -> "multiply.3375";
	"multiply.3329" -> "multiply.3375";
	"multiply.3379" -> "add.3380";
	"multiply.3375" -> "add.3380";
	"add.3380" -> "convert.3381";
	"add.2991" -> "add.3383";
	"convert.3381" -> "add.3383";
	"add.3383" -> "reshape.3421";
	"reshape.3421" -> "dot.3422";
	"p12.301" -> "dot.3422";
	"dot.3422" -> "reshape.3423";
	"slice.310" -> "tuple.3424";
	"slice.308" -> "tuple.3424";
	"reshape.3423" -> "tuple.3424";
	"tuple.3424" -> "opt-barrier.3425";
	"opt-barrier.3425" -> "get-tuple-element.3428";
	"constant.150" -> "broadcast.165";
	"opt-barrier.3425" -> "get-tuple-element.3427";
	"get-tuple-element.3427" -> "pad.3443";
	"constant.3442" -> "pad.3443";
	"constant.151" -> "broadcast.166";
	"opt-barrier.3425" -> "get-tuple-element.3426";
	"get-tuple-element.3426" -> "pad.3434";
	"constant.3433" -> "pad.3434";
	"dot.306" -> "reshape.3429";
	"broadcast.166" -> "select.3436";
	"pad.3434" -> "select.3436";
	"reshape.3429" -> "select.3436";
	"broadcast.165" -> "select.3445";
	"pad.3443" -> "select.3445";
	"select.3436" -> "select.3445";
	"select.3445" -> "slice.3455";
	"get-tuple-element.3428" -> "multiply.3456";
	"slice.3455" -> "multiply.3456";
	"select.3445" -> "logistic.3";
	"logistic.3" -> "slice.7";
	"constant.3457" -> "broadcast.3462";
	"select.3445" -> "slice.3448";
	"constant.3457" -> "broadcast.3459";
	"broadcast.3459" -> "subtract.3460";
	"slice.7" -> "subtract.3460";
	"slice.3448" -> "multiply.3461";
	"subtract.3460" -> "multiply.3461";
	"broadcast.3462" -> "add.3463";
	"multiply.3461" -> "add.3463";
	"slice.7" -> "multiply.3464";
	"add.3463" -> "multiply.3464";
	"multiply.3456" -> "multiply.3465";
	"multiply.3464" -> "multiply.3465";
	"logistic.3" -> "slice.6";
	"slice.3448" -> "multiply.3450";
	"slice.6" -> "multiply.3450";
	"get-tuple-element.3428" -> "multiply.3453";
	"multiply.3450" -> "multiply.3453";
	"multiply.3465" -> "concatenate.3466";
	"multiply.3453" -> "concatenate.3466";
	"concatenate.3466" -> "reshape.3538";
	"reshape.3538" -> "dot.3539";
	"p13.303" -> "dot.3539";
	"dot.3539" -> "reshape.3540";
	"multiply.280" -> "all-gather.1235";
	"get-tuple-element.1234" -> "all-gather.1235";
	"all-gather.1235" -> "get-tuple-element.1242";
	"reshape.3540" -> "reduce-scatter.3549";
	"get-tuple-element.1242" -> "reduce-scatter.3549";
	"AddComputation.3545" -> "reduce-scatter.3549";
	"reduce-scatter.3549" -> "get-tuple-element.3550";
	"p11.278" -> "broadcast.3553";
	"get-tuple-element.3550" -> "multiply.3554";
	"broadcast.3553" -> "multiply.3554";
	"multiply.3554" -> "convert.3555";
	"rsqrt.1" -> "broadcast.3576";
	"convert.3555" -> "multiply.3577";
	"broadcast.3576" -> "multiply.3577";
	"convert.3555" -> "multiply.3556";
	"convert.250" -> "multiply.3556";
	"multiply.3556" -> "reduce.3563";
	"constant.3557" -> "reduce.3563";
	"AddComputation.3559" -> "reduce.3563";
	"p52.1578" -> "broadcast.658";
	"reduce.3563" -> "multiply.86";
	"broadcast.658" -> "multiply.86";
	"multiply.86" -> "reshape.1954";
	"rsqrt.1" -> "reshape.2113";
	"reshape.2113" -> "multiply.73";
	"reshape.2113" -> "multiply.73";
	"reshape.2113" -> "multiply.74";
	"multiply.73" -> "multiply.74";
	"reshape.1954" -> "multiply.3566";
	"multiply.74" -> "multiply.3566";
	"p51.1571" -> "broadcast.661";
	"multiply.3566" -> "divide.25";
	"broadcast.661" -> "divide.25";
	"divide.25" -> "reshape.2003";
	"reshape.2003" -> "broadcast.171";
	"p50.1559" -> "broadcast.3520";
	"convert.250" -> "multiply.3527";
	"broadcast.3520" -> "multiply.3527";
	"broadcast.171" -> "multiply.3573";
	"multiply.3527" -> "multiply.3573";
	"multiply.3577" -> "add.3578";
	"multiply.3573" -> "add.3578";
	"add.3578" -> "convert.3579";
	"add.3383" -> "add.3581";
	"convert.3579" -> "add.3581";
	"iota.27" -> "compare.3651";
	"iota.28" -> "compare.3651";
	"constant.3642" -> "broadcast.664";
	"constant.3637" -> "broadcast.668";
	"compare.3651" -> "select.16";
	"broadcast.664" -> "select.16";
	"broadcast.668" -> "select.16";
	"select.16" -> "convert.32";
	"convert.32" -> "broadcast.177";
	"constant.3731" -> "broadcast.3732";
	"add.3581" -> "reshape.3619";
	"reshape.3619" -> "dot.3620";
	"p5.68" -> "dot.3620";
	"dot.3620" -> "reshape.3622";
	"reshape.3622" -> "transpose.3623";
	"add.217" -> "tuple.3624";
	"add.177" -> "tuple.3624";
	"transpose.77" -> "tuple.3624";
	"transpose.3623" -> "tuple.3624";
	"tuple.3624" -> "opt-barrier.3625";
	"opt-barrier.3625" -> "get-tuple-element.3629";
	"get-tuple-element.3629" -> "reshape.765";
	"reshape.765" -> "broadcast.387";
	"constant.152" -> "broadcast.178";
	"opt-barrier.3625" -> "get-tuple-element.3628";
	"get-tuple-element.3628" -> "transpose.3697";
	"transpose.3697" -> "reshape.3698";
	"reshape.3698" -> "pad.3704";
	"constant.3703" -> "pad.3704";
	"dot.73" -> "reshape.3699";
	"broadcast.178" -> "select.3706";
	"pad.3704" -> "select.3706";
	"reshape.3699" -> "select.3706";
	"select.3706" -> "slice.3709";
	"slice.3709" -> "reshape.3710";
	"reshape.3710" -> "transpose.3711";
	"transpose.3711" -> "reshape.766";
	"reshape.766" -> "broadcast.389";
	"broadcast.387" -> "multiply.75";
	"broadcast.389" -> "multiply.75";
	"multiply.75" -> "convert.291";
	"convert.291" -> "reshape.2832";
	"convert.32" -> "broadcast.181";
	"constant.3670" -> "broadcast.3671";
	"opt-barrier.3625" -> "get-tuple-element.3626";
	"get-tuple-element.3626" -> "reshape.3662";
	"opt-barrier.3625" -> "get-tuple-element.3627";
	"get-tuple-element.3627" -> "transpose.3658";
	"transpose.3658" -> "reshape.3660";
	"reshape.3662" -> "dot.3663";
	"reshape.3660" -> "dot.3663";
	"p7.101" -> "broadcast.670";
	"dot.3663" -> "divide.17";
	"broadcast.670" -> "divide.17";
	"divide.17" -> "reshape.1961";
	"broadcast.181" -> "select.3672";
	"broadcast.3671" -> "select.3672";
	"reshape.1961" -> "select.3672";
	"select.3672" -> "convert.3673";
	"convert.3673" -> "custom-call.22";
	"reshape.2832" -> "custom-call.23";
	"custom-call.22" -> "custom-call.23";
	"custom-call.23" -> "convert.3727";
	"broadcast.177" -> "select.3733";
	"broadcast.3732" -> "select.3733";
	"convert.3727" -> "select.3733";
	"p7.101" -> "broadcast.3734";
	"select.3733" -> "divide.3735";
	"broadcast.3734" -> "divide.3735";
	"divide.3735" -> "reshape.3736";
	"transpose.3658" -> "reshape.3802";
	"reshape.3802" -> "transpose.3803";
	"reshape.3736" -> "dot.3804";
	"transpose.3803" -> "dot.3804";
	"dot.3804" -> "reshape.3805";
	"gather.126" -> "reshape.3825";
	"reshape.3825" -> "broadcast.3826";
	"reshape.3805" -> "multiply.3827";
	"broadcast.3826" -> "multiply.3827";
	"multiply.3827" -> "reduce.3834";
	"constant.3828" -> "reduce.3834";
	"AddComputation.3830" -> "reduce.3834";
	"reduce.3834" -> "negate.15";
	"gather.164" -> "reshape.3807";
	"reshape.3807" -> "broadcast.3808";
	"reshape.3805" -> "multiply.3809";
	"broadcast.3808" -> "multiply.3809";
	"multiply.3809" -> "reduce.3816";
	"constant.3810" -> "reduce.3816";
	"AddComputation.3812" -> "reduce.3816";
	"negate.15" -> "add.19";
	"reduce.3816" -> "add.19";
	"add.19" -> "reshape.2168";
	"reshape.2168" -> "transpose.3859";
	"transpose.3859" -> "reshape.3860";
	"get-tuple-element.3626" -> "reshape.3737";
	"reshape.3737" -> "transpose.3738";
	"transpose.3738" -> "dot.3739";
	"reshape.3736" -> "dot.3739";
	"dot.3739" -> "reshape.3740";
	"reshape.3740" -> "transpose.3741";
	"gather.126" -> "reshape.3761";
	"reshape.3761" -> "broadcast.3762";
	"transpose.3741" -> "multiply.3763";
	"broadcast.3762" -> "multiply.3763";
	"multiply.3763" -> "reduce.3770";
	"constant.3764" -> "reduce.3770";
	"AddComputation.3766" -> "reduce.3770";
	"reduce.3770" -> "negate.14";
	"gather.164" -> "reshape.3743";
	"reshape.3743" -> "broadcast.3744";
	"transpose.3741" -> "multiply.3745";
	"broadcast.3744" -> "multiply.3745";
	"multiply.3745" -> "reduce.3752";
	"constant.3746" -> "reduce.3752";
	"AddComputation.3748" -> "reduce.3752";
	"negate.14" -> "add.18";
	"reduce.3752" -> "add.18";
	"add.18" -> "reshape.2165";
	"reshape.2165" -> "transpose.3795";
	"transpose.3795" -> "reshape.3796";
	"custom-call.22" -> "convert.3681";
	"convert.3681" -> "reshape.3683";
	"get-tuple-element.3629" -> "reshape.812";
	"reshape.812" -> "broadcast.672";
	"reshape.3683" -> "multiply.91";
	"broadcast.672" -> "multiply.91";
	"multiply.91" -> "convert.45";
	"convert.45" -> "reduce.7";
	"constant.50" -> "reduce.7";
	"scalar_add_computation.1" -> "reduce.7";
	"reduce.7" -> "convert.18";
	"convert.18" -> "reshape.3686";
	"reshape.3686" -> "transpose.3687";
	"transpose.3687" -> "reshape.3688";
	"reshape.3860" -> "concatenate.3861";
	"reshape.3796" -> "concatenate.3861";
	"reshape.3688" -> "concatenate.3861";
	"concatenate.3861" -> "reshape.3934";
	"reshape.3934" -> "dot.3935";
	"p6.70" -> "dot.3935";
	"dot.3935" -> "reshape.3936";
	"multiply.47" -> "all-gather.1243";
	"get-tuple-element.1242" -> "all-gather.1243";
	"all-gather.1243" -> "get-tuple-element.4551";
	"reshape.3936" -> "reduce-scatter.3945";
	"get-tuple-element.4551" -> "reduce-scatter.3945";
	"AddComputation.3941" -> "reduce-scatter.3945";
	"reduce-scatter.3945" -> "get-tuple-element.3946";
	"p4.45" -> "broadcast.3949";
	"get-tuple-element.3946" -> "multiply.3950";
	"broadcast.3949" -> "multiply.3950";
	"multiply.3950" -> "convert.3951";
	"rsqrt.0" -> "broadcast.3972";
	"convert.3951" -> "multiply.3973";
	"broadcast.3972" -> "multiply.3973";
	"convert.3951" -> "multiply.3952";
	"convert.17" -> "multiply.3952";
	"multiply.3952" -> "reduce.3959";
	"constant.3953" -> "reduce.3959";
	"AddComputation.3955" -> "reduce.3959";
	"p52.1578" -> "broadcast.673";
	"reduce.3959" -> "multiply.87";
	"broadcast.673" -> "multiply.87";
	"multiply.87" -> "reshape.1974";
	"rsqrt.0" -> "reshape.2111";
	"reshape.2111" -> "multiply.77";
	"reshape.2111" -> "multiply.77";
	"reshape.2111" -> "multiply.78";
	"multiply.77" -> "multiply.78";
	"reshape.1974" -> "multiply.3962";
	"multiply.78" -> "multiply.3962";
	"p51.1571" -> "broadcast.675";
	"multiply.3962" -> "divide.26";
	"broadcast.675" -> "divide.26";
	"divide.26" -> "reshape.2008";
	"reshape.2008" -> "broadcast.205";
	"p50.1559" -> "broadcast.3916";
	"convert.17" -> "multiply.3923";
	"broadcast.3916" -> "multiply.3923";
	"broadcast.205" -> "multiply.3969";
	"multiply.3923" -> "multiply.3969";
	"multiply.3973" -> "add.3974";
	"multiply.3969" -> "add.3974";
	"add.3974" -> "convert.3975";
	"add.3581" -> "add.3977";
	"convert.3975" -> "add.3977";
	"add.3977" -> "transpose.3978";
	"transpose.3978" -> "reshape.3979";
	"constant.3898" -> "broadcast.3902";
	"broadcast.3988" -> "select.3989";
	"reshape.3979" -> "select.3989";
	"broadcast.3902" -> "select.3989";
	"p69.4014" -> "scatter.4011";
	"reshape.3999" -> "scatter.4011";
	"select.3989" -> "scatter.4011";
	"ScatterCombiner.4007" -> "scatter.4011";
	"scatter.4011" -> "reduce-scatter.4024";
	"get-tuple-element.4551" -> "reduce-scatter.4024";
	"AddComputation.4020" -> "reduce-scatter.4024";
	"reduce-scatter.4024" -> "get-tuple-element.4025";
	"get-tuple-element.3946" -> "multiply.4391";
	"convert.44" -> "multiply.4391";
	"multiply.4391" -> "reduce.4398";
	"constant.4392" -> "reduce.4398";
	"AddComputation.4394" -> "reduce.4398";
	"p78.4402" -> "add.4403";
	"reduce.4398" -> "add.4403";
	"add.4403" -> "reduce-scatter.4412";
	"get-tuple-element.4551" -> "reduce-scatter.4412";
	"AddComputation.4408" -> "reduce-scatter.4412";
	"reduce-scatter.4412" -> "get-tuple-element.4413";
	"get-tuple-element.4413" -> "multiply.4416";
	"get-tuple-element.4413" -> "multiply.4416";
	"multiply.4416" -> "reduce.4423";
	"constant.4417" -> "reduce.4423";
	"AddComputation.4419" -> "reduce.4423";
	"reduce.4423" -> "sqrt.4424";
	"sqrt.4424" -> "multiply.4426";
	"sqrt.4424" -> "multiply.4426";
	"multiply.4426" -> "reshape.849";
	"p79.4427" -> "add.4429";
	"reshape.849" -> "add.4429";
	"get-tuple-element.3550" -> "multiply.4348";
	"convert.277" -> "multiply.4348";
	"multiply.4348" -> "reduce.4355";
	"constant.4349" -> "reduce.4355";
	"AddComputation.4351" -> "reduce.4355";
	"p77.4359" -> "add.4360";
	"reduce.4355" -> "add.4360";
	"add.4360" -> "reduce-scatter.4369";
	"get-tuple-element.4551" -> "reduce-scatter.4369";
	"AddComputation.4365" -> "reduce-scatter.4369";
	"reduce-scatter.4369" -> "get-tuple-element.4370";
	"get-tuple-element.4370" -> "multiply.4373";
	"get-tuple-element.4370" -> "multiply.4373";
	"multiply.4373" -> "reduce.4380";
	"constant.4374" -> "reduce.4380";
	"AddComputation.4376" -> "reduce.4380";
	"reduce.4380" -> "sqrt.4381";
	"sqrt.4381" -> "multiply.4383";
	"sqrt.4381" -> "multiply.4383";
	"multiply.4383" -> "reshape.853";
	"add.4429" -> "add.4431";
	"reshape.853" -> "add.4431";
	"get-tuple-element.3352" -> "multiply.4305";
	"convert.346" -> "multiply.4305";
	"multiply.4305" -> "reduce.4312";
	"constant.4306" -> "reduce.4312";
	"AddComputation.4308" -> "reduce.4312";
	"p76.4316" -> "add.4317";
	"reduce.4312" -> "add.4317";
	"add.4317" -> "reduce-scatter.4326";
	"get-tuple-element.4551" -> "reduce-scatter.4326";
	"AddComputation.4322" -> "reduce-scatter.4326";
	"reduce-scatter.4326" -> "get-tuple-element.4327";
	"get-tuple-element.4327" -> "multiply.4330";
	"get-tuple-element.4327" -> "multiply.4330";
	"multiply.4330" -> "reduce.4337";
	"constant.4331" -> "reduce.4337";
	"AddComputation.4333" -> "reduce.4337";
	"reduce.4337" -> "sqrt.4338";
	"sqrt.4338" -> "multiply.4340";
	"sqrt.4338" -> "multiply.4340";
	"multiply.4340" -> "reshape.857";
	"add.4431" -> "add.4433";
	"reshape.857" -> "add.4433";
	"get-tuple-element.2960" -> "multiply.4262";
	"convert.575" -> "multiply.4262";
	"multiply.4262" -> "reduce.4269";
	"constant.4263" -> "reduce.4269";
	"AddComputation.4265" -> "reduce.4269";
	"p75.4273" -> "add.4274";
	"reduce.4269" -> "add.4274";
	"add.4274" -> "reduce-scatter.4283";
	"get-tuple-element.4551" -> "reduce-scatter.4283";
	"AddComputation.4279" -> "reduce-scatter.4283";
	"reduce-scatter.4283" -> "get-tuple-element.4284";
	"get-tuple-element.4284" -> "multiply.4287";
	"get-tuple-element.4284" -> "multiply.4287";
	"multiply.4287" -> "reduce.4294";
	"constant.4288" -> "reduce.4294";
	"AddComputation.4290" -> "reduce.4294";
	"reduce.4294" -> "sqrt.4295";
	"sqrt.4295" -> "multiply.4297";
	"sqrt.4295" -> "multiply.4297";
	"multiply.4297" -> "reshape.861";
	"add.4433" -> "add.4435";
	"reshape.861" -> "add.4435";
	"get-tuple-element.2762" -> "multiply.4219";
	"convert.644" -> "multiply.4219";
	"multiply.4219" -> "reduce.4226";
	"constant.4220" -> "reduce.4226";
	"AddComputation.4222" -> "reduce.4226";
	"p74.4230" -> "add.4231";
	"reduce.4226" -> "add.4231";
	"add.4231" -> "reduce-scatter.4240";
	"get-tuple-element.4551" -> "reduce-scatter.4240";
	"AddComputation.4236" -> "reduce-scatter.4240";
	"reduce-scatter.4240" -> "get-tuple-element.4241";
	"get-tuple-element.4241" -> "multiply.4244";
	"get-tuple-element.4241" -> "multiply.4244";
	"multiply.4244" -> "reduce.4251";
	"constant.4245" -> "reduce.4251";
	"AddComputation.4247" -> "reduce.4251";
	"reduce.4251" -> "sqrt.4252";
	"sqrt.4252" -> "multiply.4254";
	"sqrt.4252" -> "multiply.4254";
	"multiply.4254" -> "reshape.866";
	"add.4435" -> "add.4437";
	"reshape.866" -> "add.4437";
	"get-tuple-element.2370" -> "multiply.4176";
	"convert.873" -> "multiply.4176";
	"multiply.4176" -> "reduce.4183";
	"constant.4177" -> "reduce.4183";
	"AddComputation.4179" -> "reduce.4183";
	"p73.4187" -> "add.4188";
	"reduce.4183" -> "add.4188";
	"add.4188" -> "reduce-scatter.4197";
	"get-tuple-element.4551" -> "reduce-scatter.4197";
	"AddComputation.4193" -> "reduce-scatter.4197";
	"reduce-scatter.4197" -> "get-tuple-element.4198";
	"get-tuple-element.4198" -> "multiply.4201";
	"get-tuple-element.4198" -> "multiply.4201";
	"multiply.4201" -> "reduce.4208";
	"constant.4202" -> "reduce.4208";
	"AddComputation.4204" -> "reduce.4208";
	"reduce.4208" -> "sqrt.4209";
	"sqrt.4209" -> "multiply.4211";
	"sqrt.4209" -> "multiply.4211";
	"multiply.4211" -> "reshape.871";
	"add.4437" -> "add.4439";
	"reshape.871" -> "add.4439";
	"get-tuple-element.2172" -> "multiply.4133";
	"convert.942" -> "multiply.4133";
	"multiply.4133" -> "reduce.4140";
	"constant.4134" -> "reduce.4140";
	"AddComputation.4136" -> "reduce.4140";
	"p72.4144" -> "add.4145";
	"reduce.4140" -> "add.4145";
	"add.4145" -> "reduce-scatter.4154";
	"get-tuple-element.4551" -> "reduce-scatter.4154";
	"AddComputation.4150" -> "reduce-scatter.4154";
	"reduce-scatter.4154" -> "get-tuple-element.4155";
	"get-tuple-element.4155" -> "multiply.4158";
	"get-tuple-element.4155" -> "multiply.4158";
	"multiply.4158" -> "reduce.4165";
	"constant.4159" -> "reduce.4165";
	"AddComputation.4161" -> "reduce.4165";
	"reduce.4165" -> "sqrt.4166";
	"sqrt.4166" -> "multiply.4168";
	"sqrt.4166" -> "multiply.4168";
	"multiply.4168" -> "reshape.875";
	"add.4439" -> "add.4441";
	"reshape.875" -> "add.4441";
	"get-tuple-element.1780" -> "multiply.4090";
	"convert.1171" -> "multiply.4090";
	"multiply.4090" -> "reduce.4097";
	"constant.4091" -> "reduce.4097";
	"AddComputation.4093" -> "reduce.4097";
	"p71.4101" -> "add.4102";
	"reduce.4097" -> "add.4102";
	"add.4102" -> "reduce-scatter.4111";
	"get-tuple-element.4551" -> "reduce-scatter.4111";
	"AddComputation.4107" -> "reduce-scatter.4111";
	"reduce-scatter.4111" -> "get-tuple-element.4112";
	"get-tuple-element.4112" -> "multiply.4115";
	"get-tuple-element.4112" -> "multiply.4115";
	"multiply.4115" -> "reduce.4122";
	"constant.4116" -> "reduce.4122";
	"AddComputation.4118" -> "reduce.4122";
	"reduce.4122" -> "sqrt.4123";
	"sqrt.4123" -> "multiply.4125";
	"sqrt.4123" -> "multiply.4125";
	"multiply.4125" -> "reshape.879";
	"add.4441" -> "add.4443";
	"reshape.879" -> "add.4443";
	"transpose.1586" -> "multiply.4047";
	"convert.1327" -> "multiply.4047";
	"multiply.4047" -> "reduce.4054";
	"constant.4048" -> "reduce.4054";
	"AddComputation.4050" -> "reduce.4054";
	"p70.4058" -> "add.4059";
	"reduce.4054" -> "add.4059";
	"add.4059" -> "reduce-scatter.4068";
	"get-tuple-element.4551" -> "reduce-scatter.4068";
	"AddComputation.4064" -> "reduce-scatter.4068";
	"reduce-scatter.4068" -> "get-tuple-element.4069";
	"get-tuple-element.4069" -> "multiply.4072";
	"get-tuple-element.4069" -> "multiply.4072";
	"multiply.4072" -> "reduce.4079";
	"constant.4073" -> "reduce.4079";
	"AddComputation.4075" -> "reduce.4079";
	"reduce.4079" -> "sqrt.4080";
	"sqrt.4080" -> "multiply.4082";
	"sqrt.4080" -> "multiply.4082";
	"multiply.4082" -> "reshape.883";
	"add.4443" -> "add.4445";
	"reshape.883" -> "add.4445";
	"get-tuple-element.4025" -> "multiply.4028";
	"get-tuple-element.4025" -> "multiply.4028";
	"multiply.4028" -> "reduce.4035";
	"constant.4029" -> "reduce.4035";
	"AddComputation.4031" -> "reduce.4035";
	"reduce.4035" -> "sqrt.4036";
	"sqrt.4036" -> "multiply.4038";
	"sqrt.4036" -> "multiply.4038";
	"multiply.4038" -> "reshape.885";
	"add.4445" -> "add.4449";
	"reshape.885" -> "add.4449";
	"concatenate.3861" -> "reshape.3862";
	"reshape.3862" -> "transpose.3863";
	"all-gather.1243" -> "get-tuple-element.1244";
	"get-tuple-element.1244" -> "reshape.3618";
	"transpose.3863" -> "dot.3864";
	"reshape.3618" -> "dot.3864";
	"p68.3866" -> "add.3867";
	"dot.3864" -> "add.3867";
	"add.3867" -> "reduce-scatter.3876";
	"get-tuple-element.4551" -> "reduce-scatter.3876";
	"AddComputation.3872" -> "reduce-scatter.3876";
	"reduce-scatter.3876" -> "get-tuple-element.3877";
	"get-tuple-element.3877" -> "multiply.3880";
	"get-tuple-element.3877" -> "multiply.3880";
	"multiply.3880" -> "reduce.3887";
	"constant.3881" -> "reduce.3887";
	"AddComputation.3883" -> "reduce.3887";
	"reduce.3887" -> "sqrt.3888";
	"sqrt.3888" -> "multiply.3890";
	"sqrt.3888" -> "multiply.3890";
	"multiply.3890" -> "reshape.889";
	"add.4449" -> "add.4451";
	"reshape.889" -> "add.4451";
	"add.3581" -> "reshape.3582";
	"reshape.3582" -> "transpose.3583";
	"convert.1" -> "reshape.3503";
	"reshape.3503" -> "transpose.3504";
	"transpose.3504" -> "reshape.3506";
	"transpose.3583" -> "dot.3584";
	"reshape.3506" -> "dot.3584";
	"p67.3586" -> "add.3587";
	"dot.3584" -> "add.3587";
	"add.3587" -> "reduce-scatter.3596";
	"get-tuple-element.4551" -> "reduce-scatter.3596";
	"AddComputation.3592" -> "reduce-scatter.3596";
	"reduce-scatter.3596" -> "get-tuple-element.3597";
	"get-tuple-element.3597" -> "multiply.3600";
	"get-tuple-element.3597" -> "multiply.3600";
	"multiply.3600" -> "reduce.3607";
	"constant.3601" -> "reduce.3607";
	"AddComputation.3603" -> "reduce.3607";
	"reduce.3607" -> "sqrt.3608";
	"sqrt.3608" -> "multiply.3610";
	"sqrt.3608" -> "multiply.3610";
	"multiply.3610" -> "reshape.898";
	"add.4451" -> "add.4453";
	"reshape.898" -> "add.4453";
	"concatenate.3466" -> "reshape.3467";
	"reshape.3467" -> "transpose.3468";
	"all-gather.1235" -> "get-tuple-element.1236";
	"get-tuple-element.1236" -> "reshape.3420";
	"transpose.3468" -> "dot.3469";
	"reshape.3420" -> "dot.3469";
	"p66.3471" -> "add.3472";
	"dot.3469" -> "add.3472";
	"add.3472" -> "reduce-scatter.3481";
	"get-tuple-element.4551" -> "reduce-scatter.3481";
	"AddComputation.3477" -> "reduce-scatter.3481";
	"reduce-scatter.3481" -> "get-tuple-element.3482";
	"get-tuple-element.3482" -> "multiply.3485";
	"get-tuple-element.3482" -> "multiply.3485";
	"multiply.3485" -> "reduce.3492";
	"constant.3486" -> "reduce.3492";
	"AddComputation.3488" -> "reduce.3492";
	"reduce.3492" -> "sqrt.3493";
	"sqrt.3493" -> "multiply.3495";
	"sqrt.3493" -> "multiply.3495";
	"multiply.3495" -> "reshape.902";
	"add.4453" -> "add.4455";
	"reshape.902" -> "add.4455";
	"add.3383" -> "reshape.3384";
	"reshape.3384" -> "transpose.3385";
	"multiply.313" -> "reshape.3308";
	"transpose.3385" -> "dot.3386";
	"reshape.3308" -> "dot.3386";
	"p65.3388" -> "add.3389";
	"dot.3386" -> "add.3389";
	"add.3389" -> "reduce-scatter.3398";
	"get-tuple-element.4551" -> "reduce-scatter.3398";
	"AddComputation.3394" -> "reduce-scatter.3398";
	"reduce-scatter.3398" -> "get-tuple-element.3399";
	"get-tuple-element.3399" -> "multiply.3402";
	"get-tuple-element.3399" -> "multiply.3402";
	"multiply.3402" -> "reduce.3409";
	"constant.3403" -> "reduce.3409";
	"AddComputation.3405" -> "reduce.3409";
	"reduce.3409" -> "sqrt.3410";
	"sqrt.3410" -> "multiply.3412";
	"sqrt.3410" -> "multiply.3412";
	"multiply.3412" -> "reshape.907";
	"add.4455" -> "add.4457";
	"reshape.907" -> "add.4457";
	"concatenate.3271" -> "reshape.3272";
	"reshape.3272" -> "transpose.3273";
	"all-gather.1227" -> "get-tuple-element.1228";
	"get-tuple-element.1228" -> "reshape.3028";
	"transpose.3273" -> "dot.3274";
	"reshape.3028" -> "dot.3274";
	"p64.3276" -> "add.3277";
	"dot.3274" -> "add.3277";
	"add.3277" -> "reduce-scatter.3286";
	"get-tuple-element.4551" -> "reduce-scatter.3286";
	"AddComputation.3282" -> "reduce-scatter.3286";
	"reduce-scatter.3286" -> "get-tuple-element.3287";
	"get-tuple-element.3287" -> "multiply.3290";
	"get-tuple-element.3287" -> "multiply.3290";
	"multiply.3290" -> "reduce.3297";
	"constant.3291" -> "reduce.3297";
	"AddComputation.3293" -> "reduce.3297";
	"reduce.3297" -> "sqrt.3298";
	"sqrt.3298" -> "multiply.3300";
	"sqrt.3298" -> "multiply.3300";
	"multiply.3300" -> "reshape.911";
	"add.4457" -> "add.4459";
	"reshape.911" -> "add.4459";
	"add.2991" -> "reshape.2992";
	"reshape.2992" -> "transpose.2993";
	"convert.3" -> "reshape.2913";
	"reshape.2913" -> "transpose.2914";
	"transpose.2914" -> "reshape.2916";
	"transpose.2993" -> "dot.2994";
	"reshape.2916" -> "dot.2994";
	"p63.2996" -> "add.2997";
	"dot.2994" -> "add.2997";
	"add.2997" -> "reduce-scatter.3006";
	"get-tuple-element.4551" -> "reduce-scatter.3006";
	"AddComputation.3002" -> "reduce-scatter.3006";
	"reduce-scatter.3006" -> "get-tuple-element.3007";
	"get-tuple-element.3007" -> "multiply.3010";
	"get-tuple-element.3007" -> "multiply.3010";
	"multiply.3010" -> "reduce.3017";
	"constant.3011" -> "reduce.3017";
	"AddComputation.3013" -> "reduce.3017";
	"reduce.3017" -> "sqrt.3018";
	"sqrt.3018" -> "multiply.3020";
	"sqrt.3018" -> "multiply.3020";
	"multiply.3020" -> "reshape.918";
	"add.4459" -> "add.4461";
	"reshape.918" -> "add.4461";
	"concatenate.2876" -> "reshape.2877";
	"reshape.2877" -> "transpose.2878";
	"all-gather.1219" -> "get-tuple-element.1220";
	"get-tuple-element.1220" -> "reshape.2830";
	"transpose.2878" -> "dot.2879";
	"reshape.2830" -> "dot.2879";
	"p62.2881" -> "add.2882";
	"dot.2879" -> "add.2882";
	"add.2882" -> "reduce-scatter.2891";
	"get-tuple-element.4551" -> "reduce-scatter.2891";
	"AddComputation.2887" -> "reduce-scatter.2891";
	"reduce-scatter.2891" -> "get-tuple-element.2892";
	"get-tuple-element.2892" -> "multiply.2895";
	"get-tuple-element.2892" -> "multiply.2895";
	"multiply.2895" -> "reduce.2902";
	"constant.2896" -> "reduce.2902";
	"AddComputation.2898" -> "reduce.2902";
	"reduce.2902" -> "sqrt.2903";
	"sqrt.2903" -> "multiply.2905";
	"sqrt.2903" -> "multiply.2905";
	"multiply.2905" -> "reshape.921";
	"add.4461" -> "add.4463";
	"reshape.921" -> "add.4463";
	"add.2793" -> "reshape.2794";
	"reshape.2794" -> "transpose.2795";
	"multiply.611" -> "reshape.2718";
	"transpose.2795" -> "dot.2796";
	"reshape.2718" -> "dot.2796";
	"p61.2798" -> "add.2799";
	"dot.2796" -> "add.2799";
	"add.2799" -> "reduce-scatter.2808";
	"get-tuple-element.4551" -> "reduce-scatter.2808";
	"AddComputation.2804" -> "reduce-scatter.2808";
	"reduce-scatter.2808" -> "get-tuple-element.2809";
	"get-tuple-element.2809" -> "multiply.2812";
	"get-tuple-element.2809" -> "multiply.2812";
	"multiply.2812" -> "reduce.2819";
	"constant.2813" -> "reduce.2819";
	"AddComputation.2815" -> "reduce.2819";
	"reduce.2819" -> "sqrt.2820";
	"sqrt.2820" -> "multiply.2822";
	"sqrt.2820" -> "multiply.2822";
	"multiply.2822" -> "reshape.924";
	"add.4463" -> "add.4465";
	"reshape.924" -> "add.4465";
	"concatenate.2681" -> "reshape.2682";
	"reshape.2682" -> "transpose.2683";
	"all-gather.1211" -> "get-tuple-element.1212";
	"get-tuple-element.1212" -> "reshape.2438";
	"transpose.2683" -> "dot.2684";
	"reshape.2438" -> "dot.2684";
	"p60.2686" -> "add.2687";
	"dot.2684" -> "add.2687";
	"add.2687" -> "reduce-scatter.2696";
	"get-tuple-element.4551" -> "reduce-scatter.2696";
	"AddComputation.2692" -> "reduce-scatter.2696";
	"reduce-scatter.2696" -> "get-tuple-element.2697";
	"get-tuple-element.2697" -> "multiply.2700";
	"get-tuple-element.2697" -> "multiply.2700";
	"multiply.2700" -> "reduce.2707";
	"constant.2701" -> "reduce.2707";
	"AddComputation.2703" -> "reduce.2707";
	"reduce.2707" -> "sqrt.2708";
	"sqrt.2708" -> "multiply.2710";
	"sqrt.2708" -> "multiply.2710";
	"multiply.2710" -> "reshape.927";
	"add.4465" -> "add.4467";
	"reshape.927" -> "add.4467";
	"add.2401" -> "reshape.2402";
	"reshape.2402" -> "transpose.2403";
	"convert.5" -> "reshape.2323";
	"reshape.2323" -> "transpose.2324";
	"transpose.2324" -> "reshape.2326";
	"transpose.2403" -> "dot.2404";
	"reshape.2326" -> "dot.2404";
	"p59.2406" -> "add.2407";
	"dot.2404" -> "add.2407";
	"add.2407" -> "reduce-scatter.2416";
	"get-tuple-element.4551" -> "reduce-scatter.2416";
	"AddComputation.2412" -> "reduce-scatter.2416";
	"reduce-scatter.2416" -> "get-tuple-element.2417";
	"get-tuple-element.2417" -> "multiply.2420";
	"get-tuple-element.2417" -> "multiply.2420";
	"multiply.2420" -> "reduce.2427";
	"constant.2421" -> "reduce.2427";
	"AddComputation.2423" -> "reduce.2427";
	"reduce.2427" -> "sqrt.2428";
	"sqrt.2428" -> "multiply.2430";
	"sqrt.2428" -> "multiply.2430";
	"multiply.2430" -> "reshape.934";
	"add.4467" -> "add.4469";
	"reshape.934" -> "add.4469";
	"concatenate.2286" -> "reshape.2287";
	"reshape.2287" -> "transpose.2288";
	"all-gather.1203" -> "get-tuple-element.1204";
	"get-tuple-element.1204" -> "reshape.2240";
	"transpose.2288" -> "dot.2289";
	"reshape.2240" -> "dot.2289";
	"p58.2291" -> "add.2292";
	"dot.2289" -> "add.2292";
	"add.2292" -> "reduce-scatter.2301";
	"get-tuple-element.4551" -> "reduce-scatter.2301";
	"AddComputation.2297" -> "reduce-scatter.2301";
	"reduce-scatter.2301" -> "get-tuple-element.2302";
	"get-tuple-element.2302" -> "multiply.2305";
	"get-tuple-element.2302" -> "multiply.2305";
	"multiply.2305" -> "reduce.2312";
	"constant.2306" -> "reduce.2312";
	"AddComputation.2308" -> "reduce.2312";
	"reduce.2312" -> "sqrt.2313";
	"sqrt.2313" -> "multiply.2315";
	"sqrt.2313" -> "multiply.2315";
	"multiply.2315" -> "reshape.937";
	"add.4469" -> "add.4471";
	"reshape.937" -> "add.4471";
	"add.2203" -> "reshape.2204";
	"reshape.2204" -> "transpose.2205";
	"multiply.909" -> "reshape.2128";
	"transpose.2205" -> "dot.2206";
	"reshape.2128" -> "dot.2206";
	"p57.2208" -> "add.2209";
	"dot.2206" -> "add.2209";
	"add.2209" -> "reduce-scatter.2218";
	"get-tuple-element.4551" -> "reduce-scatter.2218";
	"AddComputation.2214" -> "reduce-scatter.2218";
	"reduce-scatter.2218" -> "get-tuple-element.2219";
	"get-tuple-element.2219" -> "multiply.2222";
	"get-tuple-element.2219" -> "multiply.2222";
	"multiply.2222" -> "reduce.2229";
	"constant.2223" -> "reduce.2229";
	"AddComputation.2225" -> "reduce.2229";
	"reduce.2229" -> "sqrt.2230";
	"sqrt.2230" -> "multiply.2232";
	"sqrt.2230" -> "multiply.2232";
	"multiply.2232" -> "reshape.941";
	"add.4471" -> "add.4473";
	"reshape.941" -> "add.4473";
	"concatenate.2091" -> "reshape.2092";
	"reshape.2092" -> "transpose.2093";
	"all-gather.1195" -> "get-tuple-element.1196";
	"get-tuple-element.1196" -> "reshape.1848";
	"transpose.2093" -> "dot.2094";
	"reshape.1848" -> "dot.2094";
	"p56.2096" -> "add.2097";
	"dot.2094" -> "add.2097";
	"add.2097" -> "reduce-scatter.2106";
	"get-tuple-element.4551" -> "reduce-scatter.2106";
	"AddComputation.2102" -> "reduce-scatter.2106";
	"reduce-scatter.2106" -> "get-tuple-element.2107";
	"get-tuple-element.2107" -> "multiply.2110";
	"get-tuple-element.2107" -> "multiply.2110";
	"multiply.2110" -> "reduce.2117";
	"constant.2111" -> "reduce.2117";
	"AddComputation.2113" -> "reduce.2117";
	"reduce.2117" -> "sqrt.2118";
	"sqrt.2118" -> "multiply.2120";
	"sqrt.2118" -> "multiply.2120";
	"multiply.2120" -> "reshape.944";
	"add.4473" -> "add.4475";
	"reshape.944" -> "add.4475";
	"add.1811" -> "reshape.1812";
	"reshape.1812" -> "transpose.1813";
	"convert.7" -> "reshape.1733";
	"reshape.1733" -> "transpose.1734";
	"transpose.1734" -> "reshape.1736";
	"transpose.1813" -> "dot.1814";
	"reshape.1736" -> "dot.1814";
	"p55.1816" -> "add.1817";
	"dot.1814" -> "add.1817";
	"add.1817" -> "reduce-scatter.1826";
	"get-tuple-element.4551" -> "reduce-scatter.1826";
	"AddComputation.1822" -> "reduce-scatter.1826";
	"reduce-scatter.1826" -> "get-tuple-element.1827";
	"get-tuple-element.1827" -> "multiply.1830";
	"get-tuple-element.1827" -> "multiply.1830";
	"multiply.1830" -> "reduce.1837";
	"constant.1831" -> "reduce.1837";
	"AddComputation.1833" -> "reduce.1837";
	"reduce.1837" -> "sqrt.1838";
	"sqrt.1838" -> "multiply.1840";
	"sqrt.1838" -> "multiply.1840";
	"multiply.1840" -> "reshape.950";
	"add.4475" -> "add.4477";
	"reshape.950" -> "add.4477";
	"concatenate.1696" -> "reshape.1697";
	"reshape.1697" -> "transpose.1698";
	"all-gather.1187" -> "get-tuple-element.1188";
	"get-tuple-element.1188" -> "reshape.1650";
	"transpose.1698" -> "dot.1699";
	"reshape.1650" -> "dot.1699";
	"p54.1701" -> "add.1702";
	"dot.1699" -> "add.1702";
	"add.1702" -> "reduce-scatter.1711";
	"get-tuple-element.4551" -> "reduce-scatter.1711";
	"AddComputation.1707" -> "reduce-scatter.1711";
	"reduce-scatter.1711" -> "get-tuple-element.1712";
	"get-tuple-element.1712" -> "multiply.1715";
	"get-tuple-element.1712" -> "multiply.1715";
	"multiply.1715" -> "reduce.1722";
	"constant.1716" -> "reduce.1722";
	"AddComputation.1718" -> "reduce.1722";
	"reduce.1722" -> "sqrt.1723";
	"sqrt.1723" -> "multiply.1725";
	"sqrt.1723" -> "multiply.1725";
	"multiply.1725" -> "reshape.953";
	"add.4477" -> "add.4479";
	"reshape.953" -> "add.4479";
	"convert.1613" -> "reshape.1614";
	"reshape.1614" -> "transpose.1615";
	"multiply.1294" -> "reshape.1553";
	"transpose.1615" -> "dot.1616";
	"reshape.1553" -> "dot.1616";
	"p53.1618" -> "add.1619";
	"dot.1616" -> "add.1619";
	"add.1619" -> "reduce-scatter.1628";
	"get-tuple-element.4551" -> "reduce-scatter.1628";
	"AddComputation.1624" -> "reduce-scatter.1628";
	"reduce-scatter.1628" -> "get-tuple-element.1629";
	"get-tuple-element.1629" -> "multiply.1632";
	"get-tuple-element.1629" -> "multiply.1632";
	"multiply.1632" -> "reduce.1639";
	"constant.1633" -> "reduce.1639";
	"AddComputation.1635" -> "reduce.1639";
	"reduce.1639" -> "sqrt.1640";
	"sqrt.1640" -> "multiply.1642";
	"sqrt.1640" -> "multiply.1642";
	"multiply.1642" -> "reshape.956";
	"add.4479" -> "add.4481";
	"reshape.956" -> "add.4481";
	"convert.1516" -> "reshape.1517";
	"reshape.1517" -> "transpose.1518";
	"multiply.1330" -> "transpose.1331";
	"transpose.1331" -> "reshape.1332";
	"transpose.1518" -> "dot.1519";
	"reshape.1332" -> "dot.1519";
	"p49.1521" -> "add.1522";
	"dot.1519" -> "add.1522";
	"add.1522" -> "reduce-scatter.1531";
	"get-tuple-element.4551" -> "reduce-scatter.1531";
	"AddComputation.1527" -> "reduce-scatter.1531";
	"reduce-scatter.1531" -> "get-tuple-element.1532";
	"get-tuple-element.1532" -> "multiply.1535";
	"get-tuple-element.1532" -> "multiply.1535";
	"multiply.1535" -> "reduce.1542";
	"constant.1536" -> "reduce.1542";
	"AddComputation.1538" -> "reduce.1542";
	"reduce.1542" -> "sqrt.1543";
	"sqrt.1543" -> "multiply.1545";
	"sqrt.1543" -> "multiply.1545";
	"multiply.1545" -> "reshape.961";
	"add.4481" -> "add.4483";
	"reshape.961" -> "add.4483";
	"add.4483" -> "power.4484";
	"constant.170" -> "power.4484";
	"p40.1258" -> "reshape.965";
	"power.4484" -> "add.4486";
	"reshape.965" -> "add.4486";
	"constant.168" -> "divide.4489";
	"add.4486" -> "divide.4489";
	"divide.4489" -> "compare.4496";
	"constant.173" -> "compare.4496";
	"compare.4496" -> "select.4498";
	"divide.4489" -> "select.4498";
	"constant.174" -> "select.4498";
	"select.4498" -> "reshape.4500";
	"reshape.4500" -> "broadcast.4502";
	"get-tuple-element.4025" -> "multiply.4503";
	"broadcast.4502" -> "multiply.4503";
	"p82.4518" -> "broadcast.4522";
	"multiply.4503" -> "multiply.4523";
	"broadcast.4522" -> "multiply.4523";
	"multiply.4527" -> "add.4528";
	"multiply.4523" -> "add.4528";
	"p80.4504" -> "broadcast.4506";
	"p81.4505" -> "multiply.4507";
	"broadcast.4506" -> "multiply.4507";
	"multiply.4503" -> "multiply.4509";
	"multiply.4503" -> "multiply.4509";
	"p39.1252" -> "convert.4508";
	"convert.4508" -> "broadcast.4510";
	"multiply.4509" -> "multiply.4511";
	"broadcast.4510" -> "multiply.4511";
	"multiply.4507" -> "add.4512";
	"multiply.4511" -> "add.4512";
	"add.4512" -> "sqrt.4513";
	"p38.1251" -> "broadcast.4514";
	"sqrt.4513" -> "divide.4515";
	"broadcast.4514" -> "divide.4515";
	"p37.1249" -> "broadcast.4516";
	"divide.4515" -> "add.4517";
	"broadcast.4516" -> "add.4517";
	"add.4528" -> "divide.4544";
	"add.4517" -> "divide.4544";
	"p36.1247" -> "convert.4543";
	"convert.4543" -> "broadcast.4545";
	"divide.4544" -> "multiply.4546";
	"broadcast.4545" -> "multiply.4546";
	"subtract.4542" -> "add.4547";
	"multiply.4546" -> "add.4547";
	"add.4547" -> "all-gather.4552";
	"get-tuple-element.4551" -> "all-gather.4552";
	"all-gather.4552" -> "get-tuple-element.4553";
	"p86.4535" -> "broadcast.4602";
	"p90.4601" -> "multiply.4603";
	"broadcast.4602" -> "multiply.4603";
	"p85.4534" -> "broadcast.4604";
	"multiply.4603" -> "multiply.4606";
	"broadcast.4604" -> "multiply.4606";
	"p90.4601" -> "subtract.4607";
	"multiply.4606" -> "subtract.4607";
	"p83.4524" -> "broadcast.4593";
	"p89.4592" -> "multiply.4594";
	"broadcast.4593" -> "multiply.4594";
	"divide.4489" -> "compare.4566";
	"constant.176" -> "compare.4566";
	"compare.4566" -> "select.4568";
	"divide.4489" -> "select.4568";
	"constant.177" -> "select.4568";
	"select.4568" -> "reshape.4570";
	"reshape.4570" -> "broadcast.4572";
	"get-tuple-element.3877" -> "multiply.4573";
	"broadcast.4572" -> "multiply.4573";
	"p82.4518" -> "broadcast.4590";
	"multiply.4573" -> "multiply.4591";
	"broadcast.4590" -> "multiply.4591";
	"multiply.4594" -> "add.4595";
	"multiply.4591" -> "add.4595";
	"p80.4504" -> "broadcast.4575";
	"p88.4574" -> "multiply.4576";
	"broadcast.4575" -> "multiply.4576";
	"multiply.4573" -> "multiply.4578";
	"multiply.4573" -> "multiply.4578";
	"p39.1252" -> "convert.4577";
	"convert.4577" -> "broadcast.4579";
	"multiply.4578" -> "multiply.4580";
	"broadcast.4579" -> "multiply.4580";
	"multiply.4576" -> "add.4581";
	"multiply.4580" -> "add.4581";
	"add.4581" -> "sqrt.4582";
	"p38.1251" -> "broadcast.4583";
	"sqrt.4582" -> "divide.4584";
	"broadcast.4583" -> "divide.4584";
	"p37.1249" -> "broadcast.4585";
	"divide.4584" -> "add.4586";
	"broadcast.4585" -> "add.4586";
	"add.4595" -> "divide.4609";
	"add.4586" -> "divide.4609";
	"p36.1247" -> "convert.4608";
	"convert.4608" -> "broadcast.4610";
	"divide.4609" -> "multiply.4611";
	"broadcast.4610" -> "multiply.4611";
	"subtract.4607" -> "add.4612";
	"multiply.4611" -> "add.4612";
	"all-gather.4552" -> "get-tuple-element.4616";
	"add.4612" -> "all-gather.4617";
	"get-tuple-element.4616" -> "all-gather.4617";
	"all-gather.4617" -> "get-tuple-element.4618";
	"p86.4535" -> "broadcast.4667";
	"p93.4666" -> "multiply.4668";
	"broadcast.4667" -> "multiply.4668";
	"p85.4534" -> "broadcast.4669";
	"multiply.4668" -> "multiply.4671";
	"broadcast.4669" -> "multiply.4671";
	"p93.4666" -> "subtract.4672";
	"multiply.4671" -> "subtract.4672";
	"p83.4524" -> "broadcast.4658";
	"p92.4657" -> "multiply.4659";
	"broadcast.4658" -> "multiply.4659";
	"divide.4489" -> "compare.4631";
	"constant.179" -> "compare.4631";
	"compare.4631" -> "select.4633";
	"divide.4489" -> "select.4633";
	"constant.180" -> "select.4633";
	"select.4633" -> "reshape.4635";
	"reshape.4635" -> "broadcast.4637";
	"get-tuple-element.3597" -> "multiply.4638";
	"broadcast.4637" -> "multiply.4638";
	"p82.4518" -> "broadcast.4655";
	"multiply.4638" -> "multiply.4656";
	"broadcast.4655" -> "multiply.4656";
	"multiply.4659" -> "add.4660";
	"multiply.4656" -> "add.4660";
	"p80.4504" -> "broadcast.4640";
	"p91.4639" -> "multiply.4641";
	"broadcast.4640" -> "multiply.4641";
	"multiply.4638" -> "multiply.4643";
	"multiply.4638" -> "multiply.4643";
	"p39.1252" -> "convert.4642";
	"convert.4642" -> "broadcast.4644";
	"multiply.4643" -> "multiply.4645";
	"broadcast.4644" -> "multiply.4645";
	"multiply.4641" -> "add.4646";
	"multiply.4645" -> "add.4646";
	"add.4646" -> "sqrt.4647";
	"p38.1251" -> "broadcast.4648";
	"sqrt.4647" -> "divide.4649";
	"broadcast.4648" -> "divide.4649";
	"p37.1249" -> "broadcast.4650";
	"divide.4649" -> "add.4651";
	"broadcast.4650" -> "add.4651";
	"add.4660" -> "divide.4674";
	"add.4651" -> "divide.4674";
	"p36.1247" -> "convert.4673";
	"convert.4673" -> "broadcast.4675";
	"divide.4674" -> "multiply.4676";
	"broadcast.4675" -> "multiply.4676";
	"subtract.4672" -> "add.4677";
	"multiply.4676" -> "add.4677";
	"all-gather.4617" -> "get-tuple-element.4681";
	"add.4677" -> "all-gather.4682";
	"get-tuple-element.4681" -> "all-gather.4682";
	"all-gather.4682" -> "get-tuple-element.4683";
	"p86.4535" -> "broadcast.4732";
	"p96.4731" -> "multiply.4733";
	"broadcast.4732" -> "multiply.4733";
	"p85.4534" -> "broadcast.4734";
	"multiply.4733" -> "multiply.4736";
	"broadcast.4734" -> "multiply.4736";
	"p96.4731" -> "subtract.4737";
	"multiply.4736" -> "subtract.4737";
	"p83.4524" -> "broadcast.4723";
	"p95.4722" -> "multiply.4724";
	"broadcast.4723" -> "multiply.4724";
	"divide.4489" -> "compare.4696";
	"constant.183" -> "compare.4696";
	"compare.4696" -> "select.4698";
	"divide.4489" -> "select.4698";
	"constant.184" -> "select.4698";
	"select.4698" -> "reshape.4700";
	"reshape.4700" -> "broadcast.4702";
	"get-tuple-element.3482" -> "multiply.4703";
	"broadcast.4702" -> "multiply.4703";
	"p82.4518" -> "broadcast.4720";
	"multiply.4703" -> "multiply.4721";
	"broadcast.4720" -> "multiply.4721";
	"multiply.4724" -> "add.4725";
	"multiply.4721" -> "add.4725";
	"p80.4504" -> "broadcast.4705";
	"p94.4704" -> "multiply.4706";
	"broadcast.4705" -> "multiply.4706";
	"multiply.4703" -> "multiply.4708";
	"multiply.4703" -> "multiply.4708";
	"p39.1252" -> "convert.4707";
	"convert.4707" -> "broadcast.4709";
	"multiply.4708" -> "multiply.4710";
	"broadcast.4709" -> "multiply.4710";
	"multiply.4706" -> "add.4711";
	"multiply.4710" -> "add.4711";
	"add.4711" -> "sqrt.4712";
	"p38.1251" -> "broadcast.4713";
	"sqrt.4712" -> "divide.4714";
	"broadcast.4713" -> "divide.4714";
	"p37.1249" -> "broadcast.4715";
	"divide.4714" -> "add.4716";
	"broadcast.4715" -> "add.4716";
	"add.4725" -> "divide.4739";
	"add.4716" -> "divide.4739";
	"p36.1247" -> "convert.4738";
	"convert.4738" -> "broadcast.4740";
	"divide.4739" -> "multiply.4741";
	"broadcast.4740" -> "multiply.4741";
	"subtract.4737" -> "add.4742";
	"multiply.4741" -> "add.4742";
	"all-gather.4682" -> "get-tuple-element.4746";
	"add.4742" -> "all-gather.4747";
	"get-tuple-element.4746" -> "all-gather.4747";
	"all-gather.4747" -> "get-tuple-element.4748";
	"p86.4535" -> "broadcast.4797";
	"p99.4796" -> "multiply.4798";
	"broadcast.4797" -> "multiply.4798";
	"p85.4534" -> "broadcast.4799";
	"multiply.4798" -> "multiply.4801";
	"broadcast.4799" -> "multiply.4801";
	"p99.4796" -> "subtract.4802";
	"multiply.4801" -> "subtract.4802";
	"p83.4524" -> "broadcast.4788";
	"p98.4787" -> "multiply.4789";
	"broadcast.4788" -> "multiply.4789";
	"divide.4489" -> "compare.4761";
	"constant.186" -> "compare.4761";
	"compare.4761" -> "select.4763";
	"divide.4489" -> "select.4763";
	"constant.187" -> "select.4763";
	"select.4763" -> "reshape.4765";
	"reshape.4765" -> "broadcast.4767";
	"get-tuple-element.3399" -> "multiply.4768";
	"broadcast.4767" -> "multiply.4768";
	"p82.4518" -> "broadcast.4785";
	"multiply.4768" -> "multiply.4786";
	"broadcast.4785" -> "multiply.4786";
	"multiply.4789" -> "add.4790";
	"multiply.4786" -> "add.4790";
	"p80.4504" -> "broadcast.4770";
	"p97.4769" -> "multiply.4771";
	"broadcast.4770" -> "multiply.4771";
	"multiply.4768" -> "multiply.4773";
	"multiply.4768" -> "multiply.4773";
	"p39.1252" -> "convert.4772";
	"convert.4772" -> "broadcast.4774";
	"multiply.4773" -> "multiply.4775";
	"broadcast.4774" -> "multiply.4775";
	"multiply.4771" -> "add.4776";
	"multiply.4775" -> "add.4776";
	"add.4776" -> "sqrt.4777";
	"p38.1251" -> "broadcast.4778";
	"sqrt.4777" -> "divide.4779";
	"broadcast.4778" -> "divide.4779";
	"p37.1249" -> "broadcast.4780";
	"divide.4779" -> "add.4781";
	"broadcast.4780" -> "add.4781";
	"add.4790" -> "divide.4804";
	"add.4781" -> "divide.4804";
	"p36.1247" -> "convert.4803";
	"convert.4803" -> "broadcast.4805";
	"divide.4804" -> "multiply.4806";
	"broadcast.4805" -> "multiply.4806";
	"subtract.4802" -> "add.4807";
	"multiply.4806" -> "add.4807";
	"all-gather.4747" -> "get-tuple-element.4811";
	"add.4807" -> "all-gather.4812";
	"get-tuple-element.4811" -> "all-gather.4812";
	"all-gather.4812" -> "get-tuple-element.4813";
	"p86.4535" -> "broadcast.4861";
	"p102.4860" -> "multiply.4862";
	"broadcast.4861" -> "multiply.4862";
	"p85.4534" -> "broadcast.4863";
	"multiply.4862" -> "multiply.4865";
	"broadcast.4863" -> "multiply.4865";
	"p102.4860" -> "subtract.4866";
	"multiply.4865" -> "subtract.4866";
	"p83.4524" -> "broadcast.4852";
	"p101.4851" -> "multiply.4853";
	"broadcast.4852" -> "multiply.4853";
	"divide.4489" -> "compare.4826";
	"constant.189" -> "compare.4826";
	"compare.4826" -> "select.4828";
	"divide.4489" -> "select.4828";
	"constant.190" -> "select.4828";
	"select.4828" -> "reshape.4830";
	"reshape.4830" -> "broadcast.4831";
	"get-tuple-element.4413" -> "multiply.4832";
	"broadcast.4831" -> "multiply.4832";
	"p82.4518" -> "broadcast.4849";
	"multiply.4832" -> "multiply.4850";
	"broadcast.4849" -> "multiply.4850";
	"multiply.4853" -> "add.4854";
	"multiply.4850" -> "add.4854";
	"p80.4504" -> "broadcast.4834";
	"p100.4833" -> "multiply.4835";
	"broadcast.4834" -> "multiply.4835";
	"multiply.4832" -> "multiply.4837";
	"multiply.4832" -> "multiply.4837";
	"p39.1252" -> "convert.4836";
	"convert.4836" -> "broadcast.4838";
	"multiply.4837" -> "multiply.4839";
	"broadcast.4838" -> "multiply.4839";
	"multiply.4835" -> "add.4840";
	"multiply.4839" -> "add.4840";
	"add.4840" -> "sqrt.4841";
	"p38.1251" -> "broadcast.4842";
	"sqrt.4841" -> "divide.4843";
	"broadcast.4842" -> "divide.4843";
	"p37.1249" -> "broadcast.4844";
	"divide.4843" -> "add.4845";
	"broadcast.4844" -> "add.4845";
	"add.4854" -> "divide.4868";
	"add.4845" -> "divide.4868";
	"p36.1247" -> "convert.4867";
	"convert.4867" -> "broadcast.4869";
	"divide.4868" -> "multiply.4870";
	"broadcast.4869" -> "multiply.4870";
	"subtract.4866" -> "add.4871";
	"multiply.4870" -> "add.4871";
	"all-gather.4812" -> "get-tuple-element.4875";
	"add.4871" -> "all-gather.4876";
	"get-tuple-element.4875" -> "all-gather.4876";
	"all-gather.4876" -> "get-tuple-element.4877";
	"p86.4535" -> "broadcast.4925";
	"p105.4924" -> "multiply.4926";
	"broadcast.4925" -> "multiply.4926";
	"p85.4534" -> "broadcast.4927";
	"multiply.4926" -> "multiply.4929";
	"broadcast.4927" -> "multiply.4929";
	"p105.4924" -> "subtract.4930";
	"multiply.4929" -> "subtract.4930";
	"p83.4524" -> "broadcast.4916";
	"p104.4915" -> "multiply.4917";
	"broadcast.4916" -> "multiply.4917";
	"divide.4489" -> "compare.4890";
	"constant.192" -> "compare.4890";
	"compare.4890" -> "select.4892";
	"divide.4489" -> "select.4892";
	"constant.193" -> "select.4892";
	"select.4892" -> "reshape.4894";
	"reshape.4894" -> "broadcast.4895";
	"get-tuple-element.4370" -> "multiply.4896";
	"broadcast.4895" -> "multiply.4896";
	"p82.4518" -> "broadcast.4913";
	"multiply.4896" -> "multiply.4914";
	"broadcast.4913" -> "multiply.4914";
	"multiply.4917" -> "add.4918";
	"multiply.4914" -> "add.4918";
	"p80.4504" -> "broadcast.4898";
	"p103.4897" -> "multiply.4899";
	"broadcast.4898" -> "multiply.4899";
	"multiply.4896" -> "multiply.4901";
	"multiply.4896" -> "multiply.4901";
	"p39.1252" -> "convert.4900";
	"convert.4900" -> "broadcast.4902";
	"multiply.4901" -> "multiply.4903";
	"broadcast.4902" -> "multiply.4903";
	"multiply.4899" -> "add.4904";
	"multiply.4903" -> "add.4904";
	"add.4904" -> "sqrt.4905";
	"p38.1251" -> "broadcast.4906";
	"sqrt.4905" -> "divide.4907";
	"broadcast.4906" -> "divide.4907";
	"p37.1249" -> "broadcast.4908";
	"divide.4907" -> "add.4909";
	"broadcast.4908" -> "add.4909";
	"add.4918" -> "divide.4932";
	"add.4909" -> "divide.4932";
	"p36.1247" -> "convert.4931";
	"convert.4931" -> "broadcast.4933";
	"divide.4932" -> "multiply.4934";
	"broadcast.4933" -> "multiply.4934";
	"subtract.4930" -> "add.4935";
	"multiply.4934" -> "add.4935";
	"all-gather.4876" -> "get-tuple-element.4939";
	"add.4935" -> "all-gather.4940";
	"get-tuple-element.4939" -> "all-gather.4940";
	"all-gather.4940" -> "get-tuple-element.4941";
	"p86.4535" -> "broadcast.4990";
	"p108.4989" -> "multiply.4991";
	"broadcast.4990" -> "multiply.4991";
	"p85.4534" -> "broadcast.4992";
	"multiply.4991" -> "multiply.4994";
	"broadcast.4992" -> "multiply.4994";
	"p108.4989" -> "subtract.4995";
	"multiply.4994" -> "subtract.4995";
	"p83.4524" -> "broadcast.4981";
	"p107.4980" -> "multiply.4982";
	"broadcast.4981" -> "multiply.4982";
	"divide.4489" -> "compare.4954";
	"constant.195" -> "compare.4954";
	"compare.4954" -> "select.4956";
	"divide.4489" -> "select.4956";
	"constant.196" -> "select.4956";
	"select.4956" -> "reshape.4958";
	"reshape.4958" -> "broadcast.4960";
	"get-tuple-element.3287" -> "multiply.4961";
	"broadcast.4960" -> "multiply.4961";
	"p82.4518" -> "broadcast.4978";
	"multiply.4961" -> "multiply.4979";
	"broadcast.4978" -> "multiply.4979";
	"multiply.4982" -> "add.4983";
	"multiply.4979" -> "add.4983";
	"p80.4504" -> "broadcast.4963";
	"p106.4962" -> "multiply.4964";
	"broadcast.4963" -> "multiply.4964";
	"multiply.4961" -> "multiply.4966";
	"multiply.4961" -> "multiply.4966";
	"p39.1252" -> "convert.4965";
	"convert.4965" -> "broadcast.4967";
	"multiply.4966" -> "multiply.4968";
	"broadcast.4967" -> "multiply.4968";
	"multiply.4964" -> "add.4969";
	"multiply.4968" -> "add.4969";
	"add.4969" -> "sqrt.4970";
	"p38.1251" -> "broadcast.4971";
	"sqrt.4970" -> "divide.4972";
	"broadcast.4971" -> "divide.4972";
	"p37.1249" -> "broadcast.4973";
	"divide.4972" -> "add.4974";
	"broadcast.4973" -> "add.4974";
	"add.4983" -> "divide.4997";
	"add.4974" -> "divide.4997";
	"p36.1247" -> "convert.4996";
	"convert.4996" -> "broadcast.4998";
	"divide.4997" -> "multiply.4999";
	"broadcast.4998" -> "multiply.4999";
	"subtract.4995" -> "add.5000";
	"multiply.4999" -> "add.5000";
	"all-gather.4940" -> "get-tuple-element.5004";
	"add.5000" -> "all-gather.5005";
	"get-tuple-element.5004" -> "all-gather.5005";
	"all-gather.5005" -> "get-tuple-element.5006";
	"p86.4535" -> "broadcast.5055";
	"p111.5054" -> "multiply.5056";
	"broadcast.5055" -> "multiply.5056";
	"p85.4534" -> "broadcast.5057";
	"multiply.5056" -> "multiply.5059";
	"broadcast.5057" -> "multiply.5059";
	"p111.5054" -> "subtract.5060";
	"multiply.5059" -> "subtract.5060";
	"p83.4524" -> "broadcast.5046";
	"p110.5045" -> "multiply.5047";
	"broadcast.5046" -> "multiply.5047";
	"divide.4489" -> "compare.5019";
	"constant.198" -> "compare.5019";
	"compare.5019" -> "select.5021";
	"divide.4489" -> "select.5021";
	"constant.199" -> "select.5021";
	"select.5021" -> "reshape.5023";
	"reshape.5023" -> "broadcast.5025";
	"get-tuple-element.3007" -> "multiply.5026";
	"broadcast.5025" -> "multiply.5026";
	"p82.4518" -> "broadcast.5043";
	"multiply.5026" -> "multiply.5044";
	"broadcast.5043" -> "multiply.5044";
	"multiply.5047" -> "add.5048";
	"multiply.5044" -> "add.5048";
	"p80.4504" -> "broadcast.5028";
	"p109.5027" -> "multiply.5029";
	"broadcast.5028" -> "multiply.5029";
	"multiply.5026" -> "multiply.5031";
	"multiply.5026" -> "multiply.5031";
	"p39.1252" -> "convert.5030";
	"convert.5030" -> "broadcast.5032";
	"multiply.5031" -> "multiply.5033";
	"broadcast.5032" -> "multiply.5033";
	"multiply.5029" -> "add.5034";
	"multiply.5033" -> "add.5034";
	"add.5034" -> "sqrt.5035";
	"p38.1251" -> "broadcast.5036";
	"sqrt.5035" -> "divide.5037";
	"broadcast.5036" -> "divide.5037";
	"p37.1249" -> "broadcast.5038";
	"divide.5037" -> "add.5039";
	"broadcast.5038" -> "add.5039";
	"add.5048" -> "divide.5062";
	"add.5039" -> "divide.5062";
	"p36.1247" -> "convert.5061";
	"convert.5061" -> "broadcast.5063";
	"divide.5062" -> "multiply.5064";
	"broadcast.5063" -> "multiply.5064";
	"subtract.5060" -> "add.5065";
	"multiply.5064" -> "add.5065";
	"all-gather.5005" -> "get-tuple-element.5069";
	"add.5065" -> "all-gather.5070";
	"get-tuple-element.5069" -> "all-gather.5070";
	"all-gather.5070" -> "get-tuple-element.5071";
	"p86.4535" -> "broadcast.5120";
	"p114.5119" -> "multiply.5121";
	"broadcast.5120" -> "multiply.5121";
	"p85.4534" -> "broadcast.5122";
	"multiply.5121" -> "multiply.5124";
	"broadcast.5122" -> "multiply.5124";
	"p114.5119" -> "subtract.5125";
	"multiply.5124" -> "subtract.5125";
	"p83.4524" -> "broadcast.5111";
	"p113.5110" -> "multiply.5112";
	"broadcast.5111" -> "multiply.5112";
	"divide.4489" -> "compare.5084";
	"constant.201" -> "compare.5084";
	"compare.5084" -> "select.5086";
	"divide.4489" -> "select.5086";
	"constant.202" -> "select.5086";
	"select.5086" -> "reshape.5088";
	"reshape.5088" -> "broadcast.5090";
	"get-tuple-element.2892" -> "multiply.5091";
	"broadcast.5090" -> "multiply.5091";
	"p82.4518" -> "broadcast.5108";
	"multiply.5091" -> "multiply.5109";
	"broadcast.5108" -> "multiply.5109";
	"multiply.5112" -> "add.5113";
	"multiply.5109" -> "add.5113";
	"p80.4504" -> "broadcast.5093";
	"p112.5092" -> "multiply.5094";
	"broadcast.5093" -> "multiply.5094";
	"multiply.5091" -> "multiply.5096";
	"multiply.5091" -> "multiply.5096";
	"p39.1252" -> "convert.5095";
	"convert.5095" -> "broadcast.5097";
	"multiply.5096" -> "multiply.5098";
	"broadcast.5097" -> "multiply.5098";
	"multiply.5094" -> "add.5099";
	"multiply.5098" -> "add.5099";
	"add.5099" -> "sqrt.5100";
	"p38.1251" -> "broadcast.5101";
	"sqrt.5100" -> "divide.5102";
	"broadcast.5101" -> "divide.5102";
	"p37.1249" -> "broadcast.5103";
	"divide.5102" -> "add.5104";
	"broadcast.5103" -> "add.5104";
	"add.5113" -> "divide.5127";
	"add.5104" -> "divide.5127";
	"p36.1247" -> "convert.5126";
	"convert.5126" -> "broadcast.5128";
	"divide.5127" -> "multiply.5129";
	"broadcast.5128" -> "multiply.5129";
	"subtract.5125" -> "add.5130";
	"multiply.5129" -> "add.5130";
	"all-gather.5070" -> "get-tuple-element.5134";
	"add.5130" -> "all-gather.5135";
	"get-tuple-element.5134" -> "all-gather.5135";
	"all-gather.5135" -> "get-tuple-element.5136";
	"p86.4535" -> "broadcast.5185";
	"p117.5184" -> "multiply.5186";
	"broadcast.5185" -> "multiply.5186";
	"p85.4534" -> "broadcast.5187";
	"multiply.5186" -> "multiply.5189";
	"broadcast.5187" -> "multiply.5189";
	"p117.5184" -> "subtract.5190";
	"multiply.5189" -> "subtract.5190";
	"p83.4524" -> "broadcast.5176";
	"p116.5175" -> "multiply.5177";
	"broadcast.5176" -> "multiply.5177";
	"divide.4489" -> "compare.5149";
	"constant.204" -> "compare.5149";
	"compare.5149" -> "select.5151";
	"divide.4489" -> "select.5151";
	"constant.205" -> "select.5151";
	"select.5151" -> "reshape.5153";
	"reshape.5153" -> "broadcast.5155";
	"get-tuple-element.2809" -> "multiply.5156";
	"broadcast.5155" -> "multiply.5156";
	"p82.4518" -> "broadcast.5173";
	"multiply.5156" -> "multiply.5174";
	"broadcast.5173" -> "multiply.5174";
	"multiply.5177" -> "add.5178";
	"multiply.5174" -> "add.5178";
	"p80.4504" -> "broadcast.5158";
	"p115.5157" -> "multiply.5159";
	"broadcast.5158" -> "multiply.5159";
	"multiply.5156" -> "multiply.5161";
	"multiply.5156" -> "multiply.5161";
	"p39.1252" -> "convert.5160";
	"convert.5160" -> "broadcast.5162";
	"multiply.5161" -> "multiply.5163";
	"broadcast.5162" -> "multiply.5163";
	"multiply.5159" -> "add.5164";
	"multiply.5163" -> "add.5164";
	"add.5164" -> "sqrt.5165";
	"p38.1251" -> "broadcast.5166";
	"sqrt.5165" -> "divide.5167";
	"broadcast.5166" -> "divide.5167";
	"p37.1249" -> "broadcast.5168";
	"divide.5167" -> "add.5169";
	"broadcast.5168" -> "add.5169";
	"add.5178" -> "divide.5192";
	"add.5169" -> "divide.5192";
	"p36.1247" -> "convert.5191";
	"convert.5191" -> "broadcast.5193";
	"divide.5192" -> "multiply.5194";
	"broadcast.5193" -> "multiply.5194";
	"subtract.5190" -> "add.5195";
	"multiply.5194" -> "add.5195";
	"all-gather.5135" -> "get-tuple-element.5199";
	"add.5195" -> "all-gather.5200";
	"get-tuple-element.5199" -> "all-gather.5200";
	"all-gather.5200" -> "get-tuple-element.5201";
	"p86.4535" -> "broadcast.5249";
	"p120.5248" -> "multiply.5250";
	"broadcast.5249" -> "multiply.5250";
	"p85.4534" -> "broadcast.5251";
	"multiply.5250" -> "multiply.5253";
	"broadcast.5251" -> "multiply.5253";
	"p120.5248" -> "subtract.5254";
	"multiply.5253" -> "subtract.5254";
	"p83.4524" -> "broadcast.5240";
	"p119.5239" -> "multiply.5241";
	"broadcast.5240" -> "multiply.5241";
	"divide.4489" -> "compare.5214";
	"constant.207" -> "compare.5214";
	"compare.5214" -> "select.5216";
	"divide.4489" -> "select.5216";
	"constant.208" -> "select.5216";
	"select.5216" -> "reshape.5218";
	"reshape.5218" -> "broadcast.5219";
	"get-tuple-element.4327" -> "multiply.5220";
	"broadcast.5219" -> "multiply.5220";
	"p82.4518" -> "broadcast.5237";
	"multiply.5220" -> "multiply.5238";
	"broadcast.5237" -> "multiply.5238";
	"multiply.5241" -> "add.5242";
	"multiply.5238" -> "add.5242";
	"p80.4504" -> "broadcast.5222";
	"p118.5221" -> "multiply.5223";
	"broadcast.5222" -> "multiply.5223";
	"multiply.5220" -> "multiply.5225";
	"multiply.5220" -> "multiply.5225";
	"p39.1252" -> "convert.5224";
	"convert.5224" -> "broadcast.5226";
	"multiply.5225" -> "multiply.5227";
	"broadcast.5226" -> "multiply.5227";
	"multiply.5223" -> "add.5228";
	"multiply.5227" -> "add.5228";
	"add.5228" -> "sqrt.5229";
	"p38.1251" -> "broadcast.5230";
	"sqrt.5229" -> "divide.5231";
	"broadcast.5230" -> "divide.5231";
	"p37.1249" -> "broadcast.5232";
	"divide.5231" -> "add.5233";
	"broadcast.5232" -> "add.5233";
	"add.5242" -> "divide.5256";
	"add.5233" -> "divide.5256";
	"p36.1247" -> "convert.5255";
	"convert.5255" -> "broadcast.5257";
	"divide.5256" -> "multiply.5258";
	"broadcast.5257" -> "multiply.5258";
	"subtract.5254" -> "add.5259";
	"multiply.5258" -> "add.5259";
	"all-gather.5200" -> "get-tuple-element.5263";
	"add.5259" -> "all-gather.5264";
	"get-tuple-element.5263" -> "all-gather.5264";
	"all-gather.5264" -> "get-tuple-element.5265";
	"p86.4535" -> "broadcast.5313";
	"p123.5312" -> "multiply.5314";
	"broadcast.5313" -> "multiply.5314";
	"p85.4534" -> "broadcast.5315";
	"multiply.5314" -> "multiply.5317";
	"broadcast.5315" -> "multiply.5317";
	"p123.5312" -> "subtract.5318";
	"multiply.5317" -> "subtract.5318";
	"p83.4524" -> "broadcast.5304";
	"p122.5303" -> "multiply.5305";
	"broadcast.5304" -> "multiply.5305";
	"divide.4489" -> "compare.5278";
	"constant.210" -> "compare.5278";
	"compare.5278" -> "select.5280";
	"divide.4489" -> "select.5280";
	"constant.211" -> "select.5280";
	"select.5280" -> "reshape.5282";
	"reshape.5282" -> "broadcast.5283";
	"get-tuple-element.4284" -> "multiply.5284";
	"broadcast.5283" -> "multiply.5284";
	"p82.4518" -> "broadcast.5301";
	"multiply.5284" -> "multiply.5302";
	"broadcast.5301" -> "multiply.5302";
	"multiply.5305" -> "add.5306";
	"multiply.5302" -> "add.5306";
	"p80.4504" -> "broadcast.5286";
	"p121.5285" -> "multiply.5287";
	"broadcast.5286" -> "multiply.5287";
	"multiply.5284" -> "multiply.5289";
	"multiply.5284" -> "multiply.5289";
	"p39.1252" -> "convert.5288";
	"convert.5288" -> "broadcast.5290";
	"multiply.5289" -> "multiply.5291";
	"broadcast.5290" -> "multiply.5291";
	"multiply.5287" -> "add.5292";
	"multiply.5291" -> "add.5292";
	"add.5292" -> "sqrt.5293";
	"p38.1251" -> "broadcast.5294";
	"sqrt.5293" -> "divide.5295";
	"broadcast.5294" -> "divide.5295";
	"p37.1249" -> "broadcast.5296";
	"divide.5295" -> "add.5297";
	"broadcast.5296" -> "add.5297";
	"add.5306" -> "divide.5320";
	"add.5297" -> "divide.5320";
	"p36.1247" -> "convert.5319";
	"convert.5319" -> "broadcast.5321";
	"divide.5320" -> "multiply.5322";
	"broadcast.5321" -> "multiply.5322";
	"subtract.5318" -> "add.5323";
	"multiply.5322" -> "add.5323";
	"all-gather.5264" -> "get-tuple-element.5327";
	"add.5323" -> "all-gather.5328";
	"get-tuple-element.5327" -> "all-gather.5328";
	"all-gather.5328" -> "get-tuple-element.5329";
	"p86.4535" -> "broadcast.5378";
	"p126.5377" -> "multiply.5379";
	"broadcast.5378" -> "multiply.5379";
	"p85.4534" -> "broadcast.5380";
	"multiply.5379" -> "multiply.5382";
	"broadcast.5380" -> "multiply.5382";
	"p126.5377" -> "subtract.5383";
	"multiply.5382" -> "subtract.5383";
	"p83.4524" -> "broadcast.5369";
	"p125.5368" -> "multiply.5370";
	"broadcast.5369" -> "multiply.5370";
	"divide.4489" -> "compare.5342";
	"constant.213" -> "compare.5342";
	"compare.5342" -> "select.5344";
	"divide.4489" -> "select.5344";
	"constant.214" -> "select.5344";
	"select.5344" -> "reshape.5346";
	"reshape.5346" -> "broadcast.5348";
	"get-tuple-element.2697" -> "multiply.5349";
	"broadcast.5348" -> "multiply.5349";
	"p82.4518" -> "broadcast.5366";
	"multiply.5349" -> "multiply.5367";
	"broadcast.5366" -> "multiply.5367";
	"multiply.5370" -> "add.5371";
	"multiply.5367" -> "add.5371";
	"p80.4504" -> "broadcast.5351";
	"p124.5350" -> "multiply.5352";
	"broadcast.5351" -> "multiply.5352";
	"multiply.5349" -> "multiply.5354";
	"multiply.5349" -> "multiply.5354";
	"p39.1252" -> "convert.5353";
	"convert.5353" -> "broadcast.5355";
	"multiply.5354" -> "multiply.5356";
	"broadcast.5355" -> "multiply.5356";
	"multiply.5352" -> "add.5357";
	"multiply.5356" -> "add.5357";
	"add.5357" -> "sqrt.5358";
	"p38.1251" -> "broadcast.5359";
	"sqrt.5358" -> "divide.5360";
	"broadcast.5359" -> "divide.5360";
	"p37.1249" -> "broadcast.5361";
	"divide.5360" -> "add.5362";
	"broadcast.5361" -> "add.5362";
	"add.5371" -> "divide.5385";
	"add.5362" -> "divide.5385";
	"p36.1247" -> "convert.5384";
	"convert.5384" -> "broadcast.5386";
	"divide.5385" -> "multiply.5387";
	"broadcast.5386" -> "multiply.5387";
	"subtract.5383" -> "add.5388";
	"multiply.5387" -> "add.5388";
	"all-gather.5328" -> "get-tuple-element.5392";
	"add.5388" -> "all-gather.5393";
	"get-tuple-element.5392" -> "all-gather.5393";
	"all-gather.5393" -> "get-tuple-element.5394";
	"p86.4535" -> "broadcast.5443";
	"p129.5442" -> "multiply.5444";
	"broadcast.5443" -> "multiply.5444";
	"p85.4534" -> "broadcast.5445";
	"multiply.5444" -> "multiply.5447";
	"broadcast.5445" -> "multiply.5447";
	"p129.5442" -> "subtract.5448";
	"multiply.5447" -> "subtract.5448";
	"p83.4524" -> "broadcast.5434";
	"p128.5433" -> "multiply.5435";
	"broadcast.5434" -> "multiply.5435";
	"divide.4489" -> "compare.5407";
	"constant.216" -> "compare.5407";
	"compare.5407" -> "select.5409";
	"divide.4489" -> "select.5409";
	"constant.217" -> "select.5409";
	"select.5409" -> "reshape.5411";
	"reshape.5411" -> "broadcast.5413";
	"get-tuple-element.2417" -> "multiply.5414";
	"broadcast.5413" -> "multiply.5414";
	"p82.4518" -> "broadcast.5431";
	"multiply.5414" -> "multiply.5432";
	"broadcast.5431" -> "multiply.5432";
	"multiply.5435" -> "add.5436";
	"multiply.5432" -> "add.5436";
	"p80.4504" -> "broadcast.5416";
	"p127.5415" -> "multiply.5417";
	"broadcast.5416" -> "multiply.5417";
	"multiply.5414" -> "multiply.5419";
	"multiply.5414" -> "multiply.5419";
	"p39.1252" -> "convert.5418";
	"convert.5418" -> "broadcast.5420";
	"multiply.5419" -> "multiply.5421";
	"broadcast.5420" -> "multiply.5421";
	"multiply.5417" -> "add.5422";
	"multiply.5421" -> "add.5422";
	"add.5422" -> "sqrt.5423";
	"p38.1251" -> "broadcast.5424";
	"sqrt.5423" -> "divide.5425";
	"broadcast.5424" -> "divide.5425";
	"p37.1249" -> "broadcast.5426";
	"divide.5425" -> "add.5427";
	"broadcast.5426" -> "add.5427";
	"add.5436" -> "divide.5450";
	"add.5427" -> "divide.5450";
	"p36.1247" -> "convert.5449";
	"convert.5449" -> "broadcast.5451";
	"divide.5450" -> "multiply.5452";
	"broadcast.5451" -> "multiply.5452";
	"subtract.5448" -> "add.5453";
	"multiply.5452" -> "add.5453";
	"all-gather.5393" -> "get-tuple-element.5457";
	"add.5453" -> "all-gather.5458";
	"get-tuple-element.5457" -> "all-gather.5458";
	"all-gather.5458" -> "get-tuple-element.5459";
	"p86.4535" -> "broadcast.5508";
	"p132.5507" -> "multiply.5509";
	"broadcast.5508" -> "multiply.5509";
	"p85.4534" -> "broadcast.5510";
	"multiply.5509" -> "multiply.5512";
	"broadcast.5510" -> "multiply.5512";
	"p132.5507" -> "subtract.5513";
	"multiply.5512" -> "subtract.5513";
	"p83.4524" -> "broadcast.5499";
	"p131.5498" -> "multiply.5500";
	"broadcast.5499" -> "multiply.5500";
	"divide.4489" -> "compare.5472";
	"constant.219" -> "compare.5472";
	"compare.5472" -> "select.5474";
	"divide.4489" -> "select.5474";
	"constant.220" -> "select.5474";
	"select.5474" -> "reshape.5476";
	"reshape.5476" -> "broadcast.5478";
	"get-tuple-element.2302" -> "multiply.5479";
	"broadcast.5478" -> "multiply.5479";
	"p82.4518" -> "broadcast.5496";
	"multiply.5479" -> "multiply.5497";
	"broadcast.5496" -> "multiply.5497";
	"multiply.5500" -> "add.5501";
	"multiply.5497" -> "add.5501";
	"p80.4504" -> "broadcast.5481";
	"p130.5480" -> "multiply.5482";
	"broadcast.5481" -> "multiply.5482";
	"multiply.5479" -> "multiply.5484";
	"multiply.5479" -> "multiply.5484";
	"p39.1252" -> "convert.5483";
	"convert.5483" -> "broadcast.5485";
	"multiply.5484" -> "multiply.5486";
	"broadcast.5485" -> "multiply.5486";
	"multiply.5482" -> "add.5487";
	"multiply.5486" -> "add.5487";
	"add.5487" -> "sqrt.5488";
	"p38.1251" -> "broadcast.5489";
	"sqrt.5488" -> "divide.5490";
	"broadcast.5489" -> "divide.5490";
	"p37.1249" -> "broadcast.5491";
	"divide.5490" -> "add.5492";
	"broadcast.5491" -> "add.5492";
	"add.5501" -> "divide.5515";
	"add.5492" -> "divide.5515";
	"p36.1247" -> "convert.5514";
	"convert.5514" -> "broadcast.5516";
	"divide.5515" -> "multiply.5517";
	"broadcast.5516" -> "multiply.5517";
	"subtract.5513" -> "add.5518";
	"multiply.5517" -> "add.5518";
	"all-gather.5458" -> "get-tuple-element.5522";
	"add.5518" -> "all-gather.5523";
	"get-tuple-element.5522" -> "all-gather.5523";
	"all-gather.5523" -> "get-tuple-element.5524";
	"p86.4535" -> "broadcast.5573";
	"p135.5572" -> "multiply.5574";
	"broadcast.5573" -> "multiply.5574";
	"p85.4534" -> "broadcast.5575";
	"multiply.5574" -> "multiply.5577";
	"broadcast.5575" -> "multiply.5577";
	"p135.5572" -> "subtract.5578";
	"multiply.5577" -> "subtract.5578";
	"p83.4524" -> "broadcast.5564";
	"p134.5563" -> "multiply.5565";
	"broadcast.5564" -> "multiply.5565";
	"divide.4489" -> "compare.5537";
	"constant.222" -> "compare.5537";
	"compare.5537" -> "select.5539";
	"divide.4489" -> "select.5539";
	"constant.223" -> "select.5539";
	"select.5539" -> "reshape.5541";
	"reshape.5541" -> "broadcast.5543";
	"get-tuple-element.2219" -> "multiply.5544";
	"broadcast.5543" -> "multiply.5544";
	"p82.4518" -> "broadcast.5561";
	"multiply.5544" -> "multiply.5562";
	"broadcast.5561" -> "multiply.5562";
	"multiply.5565" -> "add.5566";
	"multiply.5562" -> "add.5566";
	"p80.4504" -> "broadcast.5546";
	"p133.5545" -> "multiply.5547";
	"broadcast.5546" -> "multiply.5547";
	"multiply.5544" -> "multiply.5549";
	"multiply.5544" -> "multiply.5549";
	"p39.1252" -> "convert.5548";
	"convert.5548" -> "broadcast.5550";
	"multiply.5549" -> "multiply.5551";
	"broadcast.5550" -> "multiply.5551";
	"multiply.5547" -> "add.5552";
	"multiply.5551" -> "add.5552";
	"add.5552" -> "sqrt.5553";
	"p38.1251" -> "broadcast.5554";
	"sqrt.5553" -> "divide.5555";
	"broadcast.5554" -> "divide.5555";
	"p37.1249" -> "broadcast.5556";
	"divide.5555" -> "add.5557";
	"broadcast.5556" -> "add.5557";
	"add.5566" -> "divide.5580";
	"add.5557" -> "divide.5580";
	"p36.1247" -> "convert.5579";
	"convert.5579" -> "broadcast.5581";
	"divide.5580" -> "multiply.5582";
	"broadcast.5581" -> "multiply.5582";
	"subtract.5578" -> "add.5583";
	"multiply.5582" -> "add.5583";
	"all-gather.5523" -> "get-tuple-element.5587";
	"add.5583" -> "all-gather.5588";
	"get-tuple-element.5587" -> "all-gather.5588";
	"all-gather.5588" -> "get-tuple-element.5589";
	"p86.4535" -> "broadcast.5637";
	"p138.5636" -> "multiply.5638";
	"broadcast.5637" -> "multiply.5638";
	"p85.4534" -> "broadcast.5639";
	"multiply.5638" -> "multiply.5641";
	"broadcast.5639" -> "multiply.5641";
	"p138.5636" -> "subtract.5642";
	"multiply.5641" -> "subtract.5642";
	"p83.4524" -> "broadcast.5628";
	"p137.5627" -> "multiply.5629";
	"broadcast.5628" -> "multiply.5629";
	"divide.4489" -> "compare.5602";
	"constant.226" -> "compare.5602";
	"compare.5602" -> "select.5604";
	"divide.4489" -> "select.5604";
	"constant.228" -> "select.5604";
	"select.5604" -> "reshape.5606";
	"reshape.5606" -> "broadcast.5607";
	"get-tuple-element.4241" -> "multiply.5608";
	"broadcast.5607" -> "multiply.5608";
	"p82.4518" -> "broadcast.5625";
	"multiply.5608" -> "multiply.5626";
	"broadcast.5625" -> "multiply.5626";
	"multiply.5629" -> "add.5630";
	"multiply.5626" -> "add.5630";
	"p80.4504" -> "broadcast.5610";
	"p136.5609" -> "multiply.5611";
	"broadcast.5610" -> "multiply.5611";
	"multiply.5608" -> "multiply.5613";
	"multiply.5608" -> "multiply.5613";
	"p39.1252" -> "convert.5612";
	"convert.5612" -> "broadcast.5614";
	"multiply.5613" -> "multiply.5615";
	"broadcast.5614" -> "multiply.5615";
	"multiply.5611" -> "add.5616";
	"multiply.5615" -> "add.5616";
	"add.5616" -> "sqrt.5617";
	"p38.1251" -> "broadcast.5618";
	"sqrt.5617" -> "divide.5619";
	"broadcast.5618" -> "divide.5619";
	"p37.1249" -> "broadcast.5620";
	"divide.5619" -> "add.5621";
	"broadcast.5620" -> "add.5621";
	"add.5630" -> "divide.5644";
	"add.5621" -> "divide.5644";
	"p36.1247" -> "convert.5643";
	"convert.5643" -> "broadcast.5645";
	"divide.5644" -> "multiply.5646";
	"broadcast.5645" -> "multiply.5646";
	"subtract.5642" -> "add.5647";
	"multiply.5646" -> "add.5647";
	"all-gather.5588" -> "get-tuple-element.5651";
	"add.5647" -> "all-gather.5652";
	"get-tuple-element.5651" -> "all-gather.5652";
	"all-gather.5652" -> "get-tuple-element.5653";
	"p86.4535" -> "broadcast.5701";
	"p141.5700" -> "multiply.5702";
	"broadcast.5701" -> "multiply.5702";
	"p85.4534" -> "broadcast.5703";
	"multiply.5702" -> "multiply.5705";
	"broadcast.5703" -> "multiply.5705";
	"p141.5700" -> "subtract.5706";
	"multiply.5705" -> "subtract.5706";
	"p83.4524" -> "broadcast.5692";
	"p140.5691" -> "multiply.5693";
	"broadcast.5692" -> "multiply.5693";
	"divide.4489" -> "compare.5666";
	"constant.230" -> "compare.5666";
	"compare.5666" -> "select.5668";
	"divide.4489" -> "select.5668";
	"constant.231" -> "select.5668";
	"select.5668" -> "reshape.5670";
	"reshape.5670" -> "broadcast.5671";
	"get-tuple-element.4198" -> "multiply.5672";
	"broadcast.5671" -> "multiply.5672";
	"p82.4518" -> "broadcast.5689";
	"multiply.5672" -> "multiply.5690";
	"broadcast.5689" -> "multiply.5690";
	"multiply.5693" -> "add.5694";
	"multiply.5690" -> "add.5694";
	"p80.4504" -> "broadcast.5674";
	"p139.5673" -> "multiply.5675";
	"broadcast.5674" -> "multiply.5675";
	"multiply.5672" -> "multiply.5677";
	"multiply.5672" -> "multiply.5677";
	"p39.1252" -> "convert.5676";
	"convert.5676" -> "broadcast.5678";
	"multiply.5677" -> "multiply.5679";
	"broadcast.5678" -> "multiply.5679";
	"multiply.5675" -> "add.5680";
	"multiply.5679" -> "add.5680";
	"add.5680" -> "sqrt.5681";
	"p38.1251" -> "broadcast.5682";
	"sqrt.5681" -> "divide.5683";
	"broadcast.5682" -> "divide.5683";
	"p37.1249" -> "broadcast.5684";
	"divide.5683" -> "add.5685";
	"broadcast.5684" -> "add.5685";
	"add.5694" -> "divide.5708";
	"add.5685" -> "divide.5708";
	"p36.1247" -> "convert.5707";
	"convert.5707" -> "broadcast.5709";
	"divide.5708" -> "multiply.5710";
	"broadcast.5709" -> "multiply.5710";
	"subtract.5706" -> "add.5711";
	"multiply.5710" -> "add.5711";
	"all-gather.5652" -> "get-tuple-element.5715";
	"add.5711" -> "all-gather.5716";
	"get-tuple-element.5715" -> "all-gather.5716";
	"all-gather.5716" -> "get-tuple-element.5717";
	"p86.4535" -> "broadcast.5766";
	"p144.5765" -> "multiply.5767";
	"broadcast.5766" -> "multiply.5767";
	"p85.4534" -> "broadcast.5768";
	"multiply.5767" -> "multiply.5770";
	"broadcast.5768" -> "multiply.5770";
	"p144.5765" -> "subtract.5771";
	"multiply.5770" -> "subtract.5771";
	"p83.4524" -> "broadcast.5757";
	"p143.5756" -> "multiply.5758";
	"broadcast.5757" -> "multiply.5758";
	"divide.4489" -> "compare.5730";
	"constant.233" -> "compare.5730";
	"compare.5730" -> "select.5732";
	"divide.4489" -> "select.5732";
	"constant.234" -> "select.5732";
	"select.5732" -> "reshape.5734";
	"reshape.5734" -> "broadcast.5736";
	"get-tuple-element.2107" -> "multiply.5737";
	"broadcast.5736" -> "multiply.5737";
	"p82.4518" -> "broadcast.5754";
	"multiply.5737" -> "multiply.5755";
	"broadcast.5754" -> "multiply.5755";
	"multiply.5758" -> "add.5759";
	"multiply.5755" -> "add.5759";
	"p80.4504" -> "broadcast.5739";
	"p142.5738" -> "multiply.5740";
	"broadcast.5739" -> "multiply.5740";
	"multiply.5737" -> "multiply.5742";
	"multiply.5737" -> "multiply.5742";
	"p39.1252" -> "convert.5741";
	"convert.5741" -> "broadcast.5743";
	"multiply.5742" -> "multiply.5744";
	"broadcast.5743" -> "multiply.5744";
	"multiply.5740" -> "add.5745";
	"multiply.5744" -> "add.5745";
	"add.5745" -> "sqrt.5746";
	"p38.1251" -> "broadcast.5747";
	"sqrt.5746" -> "divide.5748";
	"broadcast.5747" -> "divide.5748";
	"p37.1249" -> "broadcast.5749";
	"divide.5748" -> "add.5750";
	"broadcast.5749" -> "add.5750";
	"add.5759" -> "divide.5773";
	"add.5750" -> "divide.5773";
	"p36.1247" -> "convert.5772";
	"convert.5772" -> "broadcast.5774";
	"divide.5773" -> "multiply.5775";
	"broadcast.5774" -> "multiply.5775";
	"subtract.5771" -> "add.5776";
	"multiply.5775" -> "add.5776";
	"all-gather.5716" -> "get-tuple-element.5780";
	"add.5776" -> "all-gather.5781";
	"get-tuple-element.5780" -> "all-gather.5781";
	"all-gather.5781" -> "get-tuple-element.5782";
	"p86.4535" -> "broadcast.5831";
	"p147.5830" -> "multiply.5832";
	"broadcast.5831" -> "multiply.5832";
	"p85.4534" -> "broadcast.5833";
	"multiply.5832" -> "multiply.5835";
	"broadcast.5833" -> "multiply.5835";
	"p147.5830" -> "subtract.5836";
	"multiply.5835" -> "subtract.5836";
	"p83.4524" -> "broadcast.5822";
	"p146.5821" -> "multiply.5823";
	"broadcast.5822" -> "multiply.5823";
	"divide.4489" -> "compare.5795";
	"constant.236" -> "compare.5795";
	"compare.5795" -> "select.5797";
	"divide.4489" -> "select.5797";
	"constant.237" -> "select.5797";
	"select.5797" -> "reshape.5799";
	"reshape.5799" -> "broadcast.5801";
	"get-tuple-element.1827" -> "multiply.5802";
	"broadcast.5801" -> "multiply.5802";
	"p82.4518" -> "broadcast.5819";
	"multiply.5802" -> "multiply.5820";
	"broadcast.5819" -> "multiply.5820";
	"multiply.5823" -> "add.5824";
	"multiply.5820" -> "add.5824";
	"p80.4504" -> "broadcast.5804";
	"p145.5803" -> "multiply.5805";
	"broadcast.5804" -> "multiply.5805";
	"multiply.5802" -> "multiply.5807";
	"multiply.5802" -> "multiply.5807";
	"p39.1252" -> "convert.5806";
	"convert.5806" -> "broadcast.5808";
	"multiply.5807" -> "multiply.5809";
	"broadcast.5808" -> "multiply.5809";
	"multiply.5805" -> "add.5810";
	"multiply.5809" -> "add.5810";
	"add.5810" -> "sqrt.5811";
	"p38.1251" -> "broadcast.5812";
	"sqrt.5811" -> "divide.5813";
	"broadcast.5812" -> "divide.5813";
	"p37.1249" -> "broadcast.5814";
	"divide.5813" -> "add.5815";
	"broadcast.5814" -> "add.5815";
	"add.5824" -> "divide.5838";
	"add.5815" -> "divide.5838";
	"p36.1247" -> "convert.5837";
	"convert.5837" -> "broadcast.5839";
	"divide.5838" -> "multiply.5840";
	"broadcast.5839" -> "multiply.5840";
	"subtract.5836" -> "add.5841";
	"multiply.5840" -> "add.5841";
	"all-gather.5781" -> "get-tuple-element.5845";
	"add.5841" -> "all-gather.5846";
	"get-tuple-element.5845" -> "all-gather.5846";
	"all-gather.5846" -> "get-tuple-element.5847";
	"p86.4535" -> "broadcast.5896";
	"p150.5895" -> "multiply.5897";
	"broadcast.5896" -> "multiply.5897";
	"p85.4534" -> "broadcast.5898";
	"multiply.5897" -> "multiply.5900";
	"broadcast.5898" -> "multiply.5900";
	"p150.5895" -> "subtract.5901";
	"multiply.5900" -> "subtract.5901";
	"p83.4524" -> "broadcast.5887";
	"p149.5886" -> "multiply.5888";
	"broadcast.5887" -> "multiply.5888";
	"divide.4489" -> "compare.5860";
	"constant.239" -> "compare.5860";
	"compare.5860" -> "select.5862";
	"divide.4489" -> "select.5862";
	"constant.240" -> "select.5862";
	"select.5862" -> "reshape.5864";
	"reshape.5864" -> "broadcast.5866";
	"get-tuple-element.1712" -> "multiply.5867";
	"broadcast.5866" -> "multiply.5867";
	"p82.4518" -> "broadcast.5884";
	"multiply.5867" -> "multiply.5885";
	"broadcast.5884" -> "multiply.5885";
	"multiply.5888" -> "add.5889";
	"multiply.5885" -> "add.5889";
	"p80.4504" -> "broadcast.5869";
	"p148.5868" -> "multiply.5870";
	"broadcast.5869" -> "multiply.5870";
	"multiply.5867" -> "multiply.5872";
	"multiply.5867" -> "multiply.5872";
	"p39.1252" -> "convert.5871";
	"convert.5871" -> "broadcast.5873";
	"multiply.5872" -> "multiply.5874";
	"broadcast.5873" -> "multiply.5874";
	"multiply.5870" -> "add.5875";
	"multiply.5874" -> "add.5875";
	"add.5875" -> "sqrt.5876";
	"p38.1251" -> "broadcast.5877";
	"sqrt.5876" -> "divide.5878";
	"broadcast.5877" -> "divide.5878";
	"p37.1249" -> "broadcast.5879";
	"divide.5878" -> "add.5880";
	"broadcast.5879" -> "add.5880";
	"add.5889" -> "divide.5903";
	"add.5880" -> "divide.5903";
	"p36.1247" -> "convert.5902";
	"convert.5902" -> "broadcast.5904";
	"divide.5903" -> "multiply.5905";
	"broadcast.5904" -> "multiply.5905";
	"subtract.5901" -> "add.5906";
	"multiply.5905" -> "add.5906";
	"all-gather.5846" -> "get-tuple-element.5910";
	"add.5906" -> "all-gather.5911";
	"get-tuple-element.5910" -> "all-gather.5911";
	"all-gather.5911" -> "get-tuple-element.5912";
	"p86.4535" -> "broadcast.5961";
	"p153.5960" -> "multiply.5962";
	"broadcast.5961" -> "multiply.5962";
	"p85.4534" -> "broadcast.5963";
	"multiply.5962" -> "multiply.5965";
	"broadcast.5963" -> "multiply.5965";
	"p153.5960" -> "subtract.5966";
	"multiply.5965" -> "subtract.5966";
	"p83.4524" -> "broadcast.5952";
	"p152.5951" -> "multiply.5953";
	"broadcast.5952" -> "multiply.5953";
	"divide.4489" -> "compare.5925";
	"constant.242" -> "compare.5925";
	"compare.5925" -> "select.5927";
	"divide.4489" -> "select.5927";
	"constant.243" -> "select.5927";
	"select.5927" -> "reshape.5929";
	"reshape.5929" -> "broadcast.5931";
	"get-tuple-element.1629" -> "multiply.5932";
	"broadcast.5931" -> "multiply.5932";
	"p82.4518" -> "broadcast.5949";
	"multiply.5932" -> "multiply.5950";
	"broadcast.5949" -> "multiply.5950";
	"multiply.5953" -> "add.5954";
	"multiply.5950" -> "add.5954";
	"p80.4504" -> "broadcast.5934";
	"p151.5933" -> "multiply.5935";
	"broadcast.5934" -> "multiply.5935";
	"multiply.5932" -> "multiply.5937";
	"multiply.5932" -> "multiply.5937";
	"p39.1252" -> "convert.5936";
	"convert.5936" -> "broadcast.5938";
	"multiply.5937" -> "multiply.5939";
	"broadcast.5938" -> "multiply.5939";
	"multiply.5935" -> "add.5940";
	"multiply.5939" -> "add.5940";
	"add.5940" -> "sqrt.5941";
	"p38.1251" -> "broadcast.5942";
	"sqrt.5941" -> "divide.5943";
	"broadcast.5942" -> "divide.5943";
	"p37.1249" -> "broadcast.5944";
	"divide.5943" -> "add.5945";
	"broadcast.5944" -> "add.5945";
	"add.5954" -> "divide.5968";
	"add.5945" -> "divide.5968";
	"p36.1247" -> "convert.5967";
	"convert.5967" -> "broadcast.5969";
	"divide.5968" -> "multiply.5970";
	"broadcast.5969" -> "multiply.5970";
	"subtract.5966" -> "add.5971";
	"multiply.5970" -> "add.5971";
	"all-gather.5911" -> "get-tuple-element.5975";
	"add.5971" -> "all-gather.5976";
	"get-tuple-element.5975" -> "all-gather.5976";
	"all-gather.5976" -> "get-tuple-element.5977";
	"p86.4535" -> "broadcast.6025";
	"p156.6024" -> "multiply.6026";
	"broadcast.6025" -> "multiply.6026";
	"p85.4534" -> "broadcast.6027";
	"multiply.6026" -> "multiply.6029";
	"broadcast.6027" -> "multiply.6029";
	"p156.6024" -> "subtract.6030";
	"multiply.6029" -> "subtract.6030";
	"p83.4524" -> "broadcast.6016";
	"p155.6015" -> "multiply.6017";
	"broadcast.6016" -> "multiply.6017";
	"divide.4489" -> "compare.5990";
	"constant.245" -> "compare.5990";
	"compare.5990" -> "select.5992";
	"divide.4489" -> "select.5992";
	"constant.246" -> "select.5992";
	"select.5992" -> "reshape.5994";
	"reshape.5994" -> "broadcast.5995";
	"get-tuple-element.4155" -> "multiply.5996";
	"broadcast.5995" -> "multiply.5996";
	"p82.4518" -> "broadcast.6013";
	"multiply.5996" -> "multiply.6014";
	"broadcast.6013" -> "multiply.6014";
	"multiply.6017" -> "add.6018";
	"multiply.6014" -> "add.6018";
	"p80.4504" -> "broadcast.5998";
	"p154.5997" -> "multiply.5999";
	"broadcast.5998" -> "multiply.5999";
	"multiply.5996" -> "multiply.6001";
	"multiply.5996" -> "multiply.6001";
	"p39.1252" -> "convert.6000";
	"convert.6000" -> "broadcast.6002";
	"multiply.6001" -> "multiply.6003";
	"broadcast.6002" -> "multiply.6003";
	"multiply.5999" -> "add.6004";
	"multiply.6003" -> "add.6004";
	"add.6004" -> "sqrt.6005";
	"p38.1251" -> "broadcast.6006";
	"sqrt.6005" -> "divide.6007";
	"broadcast.6006" -> "divide.6007";
	"p37.1249" -> "broadcast.6008";
	"divide.6007" -> "add.6009";
	"broadcast.6008" -> "add.6009";
	"add.6018" -> "divide.6032";
	"add.6009" -> "divide.6032";
	"p36.1247" -> "convert.6031";
	"convert.6031" -> "broadcast.6033";
	"divide.6032" -> "multiply.6034";
	"broadcast.6033" -> "multiply.6034";
	"subtract.6030" -> "add.6035";
	"multiply.6034" -> "add.6035";
	"all-gather.5976" -> "get-tuple-element.6039";
	"add.6035" -> "all-gather.6040";
	"get-tuple-element.6039" -> "all-gather.6040";
	"all-gather.6040" -> "get-tuple-element.6041";
	"p86.4535" -> "broadcast.6089";
	"p159.6088" -> "multiply.6090";
	"broadcast.6089" -> "multiply.6090";
	"p85.4534" -> "broadcast.6091";
	"multiply.6090" -> "multiply.6093";
	"broadcast.6091" -> "multiply.6093";
	"p159.6088" -> "subtract.6094";
	"multiply.6093" -> "subtract.6094";
	"p83.4524" -> "broadcast.6080";
	"p158.6079" -> "multiply.6081";
	"broadcast.6080" -> "multiply.6081";
	"divide.4489" -> "compare.6054";
	"constant.248" -> "compare.6054";
	"compare.6054" -> "select.6056";
	"divide.4489" -> "select.6056";
	"constant.249" -> "select.6056";
	"select.6056" -> "reshape.6058";
	"reshape.6058" -> "broadcast.6059";
	"get-tuple-element.4112" -> "multiply.6060";
	"broadcast.6059" -> "multiply.6060";
	"p82.4518" -> "broadcast.6077";
	"multiply.6060" -> "multiply.6078";
	"broadcast.6077" -> "multiply.6078";
	"multiply.6081" -> "add.6082";
	"multiply.6078" -> "add.6082";
	"p80.4504" -> "broadcast.6062";
	"p157.6061" -> "multiply.6063";
	"broadcast.6062" -> "multiply.6063";
	"multiply.6060" -> "multiply.6065";
	"multiply.6060" -> "multiply.6065";
	"p39.1252" -> "convert.6064";
	"convert.6064" -> "broadcast.6066";
	"multiply.6065" -> "multiply.6067";
	"broadcast.6066" -> "multiply.6067";
	"multiply.6063" -> "add.6068";
	"multiply.6067" -> "add.6068";
	"add.6068" -> "sqrt.6069";
	"p38.1251" -> "broadcast.6070";
	"sqrt.6069" -> "divide.6071";
	"broadcast.6070" -> "divide.6071";
	"p37.1249" -> "broadcast.6072";
	"divide.6071" -> "add.6073";
	"broadcast.6072" -> "add.6073";
	"add.6082" -> "divide.6096";
	"add.6073" -> "divide.6096";
	"p36.1247" -> "convert.6095";
	"convert.6095" -> "broadcast.6097";
	"divide.6096" -> "multiply.6098";
	"broadcast.6097" -> "multiply.6098";
	"subtract.6094" -> "add.6099";
	"multiply.6098" -> "add.6099";
	"all-gather.6040" -> "get-tuple-element.6103";
	"add.6099" -> "all-gather.6104";
	"get-tuple-element.6103" -> "all-gather.6104";
	"all-gather.6104" -> "get-tuple-element.6105";
	"p86.4535" -> "broadcast.6153";
	"p162.6152" -> "multiply.6154";
	"broadcast.6153" -> "multiply.6154";
	"p85.4534" -> "broadcast.6155";
	"multiply.6154" -> "multiply.6157";
	"broadcast.6155" -> "multiply.6157";
	"p162.6152" -> "subtract.6158";
	"multiply.6157" -> "subtract.6158";
	"p83.4524" -> "broadcast.6144";
	"p161.6143" -> "multiply.6145";
	"broadcast.6144" -> "multiply.6145";
	"divide.4489" -> "compare.6118";
	"constant.251" -> "compare.6118";
	"compare.6118" -> "select.6120";
	"divide.4489" -> "select.6120";
	"constant.254" -> "select.6120";
	"select.6120" -> "reshape.6122";
	"reshape.6122" -> "broadcast.6123";
	"get-tuple-element.4069" -> "multiply.6124";
	"broadcast.6123" -> "multiply.6124";
	"p82.4518" -> "broadcast.6141";
	"multiply.6124" -> "multiply.6142";
	"broadcast.6141" -> "multiply.6142";
	"multiply.6145" -> "add.6146";
	"multiply.6142" -> "add.6146";
	"p80.4504" -> "broadcast.6126";
	"p160.6125" -> "multiply.6127";
	"broadcast.6126" -> "multiply.6127";
	"multiply.6124" -> "multiply.6129";
	"multiply.6124" -> "multiply.6129";
	"p39.1252" -> "convert.6128";
	"convert.6128" -> "broadcast.6130";
	"multiply.6129" -> "multiply.6131";
	"broadcast.6130" -> "multiply.6131";
	"multiply.6127" -> "add.6132";
	"multiply.6131" -> "add.6132";
	"add.6132" -> "sqrt.6133";
	"p38.1251" -> "broadcast.6134";
	"sqrt.6133" -> "divide.6135";
	"broadcast.6134" -> "divide.6135";
	"p37.1249" -> "broadcast.6136";
	"divide.6135" -> "add.6137";
	"broadcast.6136" -> "add.6137";
	"add.6146" -> "divide.6160";
	"add.6137" -> "divide.6160";
	"p36.1247" -> "convert.6159";
	"convert.6159" -> "broadcast.6161";
	"divide.6160" -> "multiply.6162";
	"broadcast.6161" -> "multiply.6162";
	"subtract.6158" -> "add.6163";
	"multiply.6162" -> "add.6163";
	"all-gather.6104" -> "get-tuple-element.6167";
	"add.6163" -> "all-gather.6168";
	"get-tuple-element.6167" -> "all-gather.6168";
	"all-gather.6168" -> "get-tuple-element.6169";
	"p86.4535" -> "broadcast.6218";
	"p165.6217" -> "multiply.6219";
	"broadcast.6218" -> "multiply.6219";
	"p85.4534" -> "broadcast.6220";
	"multiply.6219" -> "multiply.6222";
	"broadcast.6220" -> "multiply.6222";
	"p165.6217" -> "subtract.6223";
	"multiply.6222" -> "subtract.6223";
	"p83.4524" -> "broadcast.6209";
	"p164.6208" -> "multiply.6210";
	"broadcast.6209" -> "multiply.6210";
	"divide.4489" -> "compare.6182";
	"constant.256" -> "compare.6182";
	"compare.6182" -> "select.6184";
	"divide.4489" -> "select.6184";
	"constant.257" -> "select.6184";
	"select.6184" -> "reshape.6186";
	"reshape.6186" -> "broadcast.6188";
	"get-tuple-element.1532" -> "multiply.6189";
	"broadcast.6188" -> "multiply.6189";
	"p82.4518" -> "broadcast.6206";
	"multiply.6189" -> "multiply.6207";
	"broadcast.6206" -> "multiply.6207";
	"multiply.6210" -> "add.6211";
	"multiply.6207" -> "add.6211";
	"p80.4504" -> "broadcast.6191";
	"p163.6190" -> "multiply.6192";
	"broadcast.6191" -> "multiply.6192";
	"multiply.6189" -> "multiply.6194";
	"multiply.6189" -> "multiply.6194";
	"p39.1252" -> "convert.6193";
	"convert.6193" -> "broadcast.6195";
	"multiply.6194" -> "multiply.6196";
	"broadcast.6195" -> "multiply.6196";
	"multiply.6192" -> "add.6197";
	"multiply.6196" -> "add.6197";
	"add.6197" -> "sqrt.6198";
	"p38.1251" -> "broadcast.6199";
	"sqrt.6198" -> "divide.6200";
	"broadcast.6199" -> "divide.6200";
	"p37.1249" -> "broadcast.6201";
	"divide.6200" -> "add.6202";
	"broadcast.6201" -> "add.6202";
	"add.6211" -> "divide.6225";
	"add.6202" -> "divide.6225";
	"p36.1247" -> "convert.6224";
	"convert.6224" -> "broadcast.6226";
	"divide.6225" -> "multiply.6227";
	"broadcast.6226" -> "multiply.6227";
	"subtract.6223" -> "add.6228";
	"multiply.6227" -> "add.6228";
	"all-gather.6168" -> "get-tuple-element.6232";
	"add.6228" -> "all-gather.6233";
	"get-tuple-element.6232" -> "all-gather.6233";
	"all-gather.6233" -> "get-tuple-element.6234";
	"constant.6238" -> "broadcast.6242";
	"constant.6243" -> "broadcast.6247";
	"constant.6248" -> "broadcast.6252";
	"constant.6253" -> "broadcast.6257";
	"constant.6258" -> "broadcast.6262";
	"constant.6263" -> "broadcast.6267";
	"constant.6268" -> "broadcast.6272";
	"constant.6273" -> "broadcast.6277";
	"constant.6278" -> "broadcast.6282";
	"constant.6283" -> "broadcast.6287";
	"constant.6288" -> "broadcast.6292";
	"constant.6293" -> "broadcast.6297";
	"constant.6298" -> "broadcast.6302";
	"constant.6303" -> "broadcast.6307";
	"constant.6308" -> "broadcast.6312";
	"constant.6313" -> "broadcast.6317";
	"constant.6318" -> "broadcast.6322";
	"constant.6323" -> "broadcast.6327";
	"constant.6328" -> "broadcast.6332";
	"constant.6333" -> "broadcast.6337";
	"constant.6338" -> "broadcast.6342";
	"constant.6343" -> "broadcast.6347";
	"constant.6348" -> "broadcast.6352";
	"constant.6353" -> "broadcast.6357";
	"constant.6358" -> "broadcast.6362";
	"constant.6363" -> "broadcast.6367";
	"constant.6368" -> "broadcast.6372";
	"reduce.1459" -> "log.6409";
	"select.1448" -> "slice.6403";
	"slice.6403" -> "reshape.6404";
	"constant.6385" -> "broadcast.6386";
	"select" -> "compare.6387";
	"broadcast.6386" -> "compare.6387";
	"p45.1348" -> "broadcast.6383";
	"select" -> "add.6384";
	"broadcast.6383" -> "add.6384";
	"compare.6387" -> "select.6388";
	"add.6384" -> "select.6388";
	"select" -> "select.6388";
	"select.6388" -> "reshape.6400";
	"iota.30" -> "concatenate.6401";
	"reshape.6400" -> "concatenate.6401";
	"reshape.6404" -> "gather.6405";
	"concatenate.6401" -> "gather.6405";
	"constant.265" -> "broadcast.677";
	"convert.1360" -> "select.17";
	"gather.6405" -> "select.17";
	"broadcast.677" -> "select.17";
	"log.6409" -> "subtract.6410";
	"select.17" -> "subtract.6410";
	"subtract.6410" -> "reduce.6417";
	"constant.6411" -> "reduce.6417";
	"AddComputation.6413" -> "reduce.6417";
	"reduce.6417" -> "multiply.6425";
	"constant.264" -> "multiply.6425";
	"get-tuple-element.4553" -> "tuple.6427";
	"p10.159" -> "tuple.6427";
	"p9.121" -> "tuple.6427";
	"get-tuple-element.4618" -> "tuple.6427";
	"get-tuple-element.4683" -> "tuple.6427";
	"get-tuple-element.4748" -> "tuple.6427";
	"get-tuple-element.4813" -> "tuple.6427";
	"get-tuple-element.4877" -> "tuple.6427";
	"get-tuple-element.4941" -> "tuple.6427";
	"p18.457" -> "tuple.6427";
	"p17.419" -> "tuple.6427";
	"get-tuple-element.5006" -> "tuple.6427";
	"get-tuple-element.5071" -> "tuple.6427";
	"get-tuple-element.5136" -> "tuple.6427";
	"get-tuple-element.5201" -> "tuple.6427";
	"get-tuple-element.5265" -> "tuple.6427";
	"get-tuple-element.5329" -> "tuple.6427";
	"p26.755" -> "tuple.6427";
	"p25.717" -> "tuple.6427";
	"get-tuple-element.5394" -> "tuple.6427";
	"get-tuple-element.5459" -> "tuple.6427";
	"get-tuple-element.5524" -> "tuple.6427";
	"get-tuple-element.5589" -> "tuple.6427";
	"get-tuple-element.5653" -> "tuple.6427";
	"get-tuple-element.5717" -> "tuple.6427";
	"p34.1053" -> "tuple.6427";
	"p33.1015" -> "tuple.6427";
	"get-tuple-element.5782" -> "tuple.6427";
	"get-tuple-element.5847" -> "tuple.6427";
	"get-tuple-element.5912" -> "tuple.6427";
	"get-tuple-element.5977" -> "tuple.6427";
	"get-tuple-element.6041" -> "tuple.6427";
	"get-tuple-element.6105" -> "tuple.6427";
	"get-tuple-element.6169" -> "tuple.6427";
	"get-tuple-element.6234" -> "tuple.6427";
	"add.4547" -> "tuple.6427";
	"add.4612" -> "tuple.6427";
	"add.4677" -> "tuple.6427";
	"add.4742" -> "tuple.6427";
	"add.4807" -> "tuple.6427";
	"add.4871" -> "tuple.6427";
	"add.4935" -> "tuple.6427";
	"add.5000" -> "tuple.6427";
	"add.5065" -> "tuple.6427";
	"add.5130" -> "tuple.6427";
	"add.5195" -> "tuple.6427";
	"add.5259" -> "tuple.6427";
	"add.5323" -> "tuple.6427";
	"add.5388" -> "tuple.6427";
	"add.5453" -> "tuple.6427";
	"add.5518" -> "tuple.6427";
	"add.5583" -> "tuple.6427";
	"add.5647" -> "tuple.6427";
	"add.5711" -> "tuple.6427";
	"add.5776" -> "tuple.6427";
	"add.5841" -> "tuple.6427";
	"add.5906" -> "tuple.6427";
	"add.5971" -> "tuple.6427";
	"add.6035" -> "tuple.6427";
	"add.6099" -> "tuple.6427";
	"add.6163" -> "tuple.6427";
	"add.6228" -> "tuple.6427";
	"broadcast.6242" -> "tuple.6427";
	"broadcast.6247" -> "tuple.6427";
	"broadcast.6252" -> "tuple.6427";
	"broadcast.6257" -> "tuple.6427";
	"broadcast.6262" -> "tuple.6427";
	"broadcast.6267" -> "tuple.6427";
	"broadcast.6272" -> "tuple.6427";
	"broadcast.6277" -> "tuple.6427";
	"broadcast.6282" -> "tuple.6427";
	"broadcast.6287" -> "tuple.6427";
	"broadcast.6292" -> "tuple.6427";
	"broadcast.6297" -> "tuple.6427";
	"broadcast.6302" -> "tuple.6427";
	"broadcast.6307" -> "tuple.6427";
	"broadcast.6312" -> "tuple.6427";
	"broadcast.6317" -> "tuple.6427";
	"broadcast.6322" -> "tuple.6427";
	"broadcast.6327" -> "tuple.6427";
	"broadcast.6332" -> "tuple.6427";
	"broadcast.6337" -> "tuple.6427";
	"broadcast.6342" -> "tuple.6427";
	"broadcast.6347" -> "tuple.6427";
	"broadcast.6352" -> "tuple.6427";
	"broadcast.6357" -> "tuple.6427";
	"broadcast.6362" -> "tuple.6427";
	"broadcast.6367" -> "tuple.6427";
	"broadcast.6372" -> "tuple.6427";
	"add.4528" -> "tuple.6427";
	"add.4512" -> "tuple.6427";
	"add.4595" -> "tuple.6427";
	"add.4581" -> "tuple.6427";
	"add.4660" -> "tuple.6427";
	"add.4646" -> "tuple.6427";
	"add.4725" -> "tuple.6427";
	"add.4711" -> "tuple.6427";
	"add.4790" -> "tuple.6427";
	"add.4776" -> "tuple.6427";
	"add.4854" -> "tuple.6427";
	"add.4840" -> "tuple.6427";
	"add.4918" -> "tuple.6427";
	"add.4904" -> "tuple.6427";
	"add.4983" -> "tuple.6427";
	"add.4969" -> "tuple.6427";
	"add.5048" -> "tuple.6427";
	"add.5034" -> "tuple.6427";
	"add.5113" -> "tuple.6427";
	"add.5099" -> "tuple.6427";
	"add.5178" -> "tuple.6427";
	"add.5164" -> "tuple.6427";
	"add.5242" -> "tuple.6427";
	"add.5228" -> "tuple.6427";
	"add.5306" -> "tuple.6427";
	"add.5292" -> "tuple.6427";
	"add.5371" -> "tuple.6427";
	"add.5357" -> "tuple.6427";
	"add.5436" -> "tuple.6427";
	"add.5422" -> "tuple.6427";
	"add.5501" -> "tuple.6427";
	"add.5487" -> "tuple.6427";
	"add.5566" -> "tuple.6427";
	"add.5552" -> "tuple.6427";
	"add.5630" -> "tuple.6427";
	"add.5616" -> "tuple.6427";
	"add.5694" -> "tuple.6427";
	"add.5680" -> "tuple.6427";
	"add.5759" -> "tuple.6427";
	"add.5745" -> "tuple.6427";
	"add.5824" -> "tuple.6427";
	"add.5810" -> "tuple.6427";
	"add.5889" -> "tuple.6427";
	"add.5875" -> "tuple.6427";
	"add.5954" -> "tuple.6427";
	"add.5940" -> "tuple.6427";
	"add.6018" -> "tuple.6427";
	"add.6004" -> "tuple.6427";
	"add.6082" -> "tuple.6427";
	"add.6068" -> "tuple.6427";
	"add.6146" -> "tuple.6427";
	"add.6132" -> "tuple.6427";
	"add.6211" -> "tuple.6427";
	"add.6197" -> "tuple.6427";
	"p2.10" -> "tuple.6427";
	"p166.6373" -> "tuple.6427";
	"p46.1349" -> "tuple.6427";
	"multiply.6425" -> "tuple.6427";
	"power.4484" -> "tuple.6427";
}