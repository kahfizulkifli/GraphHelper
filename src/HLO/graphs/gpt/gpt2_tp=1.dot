digraph HloModule {
	"p25.40" [label="p25.40 \n f32[768,50257]"];
	"iota.6" [label="iota.6 \n s32[128]"];
	"broadcast.7" [label="broadcast.7 \n s32[1,128]"];
	"p1.2" [label="p1.2 \n s32[1]"];
	"broadcast.8" [label="broadcast.8 \n s32[1,128]"];
	"compare.9" [label="compare.9 \n pred[1,128]"];
	"broadcast.13" [label="broadcast.13 \n pred[4,1,128]"];
	"broadcast.10" [label="broadcast.10 \n s32[4,128]"];
	"p2.3" [label="p2.3 \n s32[4]"];
	"broadcast.11" [label="broadcast.11 \n s32[4,128]"];
	"compare.12" [label="compare.12 \n pred[4,128]"];
	"broadcast.14" [label="broadcast.14 \n pred[4,1,128]"];
	"and.15" [label="and.15 \n pred[4,1,128]"];
	"broadcast.92" [label="broadcast.92 \n pred[4,12,1,128]"];
	"p0.1" [label="p0.1 \n f32[768,1,4]"];
	"reshape.59" [label="reshape.59 \n f32[768,4]"];
	"convert.60" [label="convert.60 \n f32[768,4]"];
	"broadcast.62" [label="broadcast.62 \n f32[4]"];
	"broadcast.64" [label="broadcast.64 \n f32[4]"];
	"p7.21" [label="p7.21 \n f32[768]"];
	"broadcast.67" [label="broadcast.67 \n f32[768,4]"];
	"multiply.68" [label="multiply.68 \n f32[768,4]"];
	"p8.22" [label="p8.22 \n f32[768]"];
	"broadcast.69" [label="broadcast.69 \n f32[768,4]"];
	"add.70" [label="add.70 \n f32[768,4]"];
	"convert.71" [label="convert.71 \n f32[768,4]"];
	"reshape.72" [label="reshape.72 \n f32[768,1,4]"];
	"reshape.73" [label="reshape.73 \n f32[768,4]"];
	"p9.23" [label="p9.23 \n f32[768,768]"];
	"dot.74" [label="dot.74 \n f32[4,768]"];
	"p10.24" [label="p10.24 \n f32[768]"];
	"broadcast.75" [label="broadcast.75 \n f32[4,768]"];
	"add.76" [label="add.76 \n f32[4,768]"];
	"reshape.83" [label="reshape.83 \n f32[1,4,12,64]"];
	"broadcast.87" [label="broadcast.87 \n f32[1,4,12,64]"];
	"divide.88" [label="divide.88 \n f32[1,4,12,64]"];
	"p5.19" [label="p5.19 \n f32[128,4,12,64]"];
	"dot.89" [label="dot.89 \n f32[4,12,1,128]"];
	"broadcast.91" [label="broadcast.91 \n f32[4,12,1,128]"];
	"select.93" [label="select.93 \n f32[4,12,1,128]"];
	"reduce.100" [label="reduce.100 \n f32[4,12,1]"];
	"broadcast.17" [label="broadcast.17 \n s32[4,1]"];
	"broadcast.16" [label="broadcast.16 \n s32[4,1]"];
	"compare.18" [label="compare.18 \n pred[4,1]"];
	"broadcast.97" [label="broadcast.97 \n pred[4,12,1,1]"];
	"p11.25" [label="p11.25 \n f32[768,768]"];
	"dot.77" [label="dot.77 \n f32[4,768]"];
	"p12.26" [label="p12.26 \n f32[768]"];
	"broadcast.78" [label="broadcast.78 \n f32[4,768]"];
	"add.79" [label="add.79 \n f32[4,768]"];
	"reshape.84" [label="reshape.84 \n f32[1,4,12,64]"];
	"dot.94" [label="dot.94 \n f32[4,12,1,1]"];
	"broadcast.96" [label="broadcast.96 \n f32[4,12,1,1]"];
	"select.98" [label="select.98 \n f32[4,12,1,1]"];
	"reduce.106" [label="reduce.106 \n f32[4,12,1]"];
	"maximum.112" [label="maximum.112 \n f32[4,12,1]"];
	"broadcast.113" [label="broadcast.113 \n f32[4,12,1,128]"];
	"subtract.114" [label="subtract.114 \n f32[4,12,1,128]"];
	"exponential.115" [label="exponential.115 \n f32[4,12,1,128]"];
	"convert.123" [label="convert.123 \n f32[4,12,1,128]"];
	"p6.20" [label="p6.20 \n f32[128,4,12,64]"];
	"dot.136" [label="dot.136 \n f32[4,12,1,64]"];
	"broadcast.124" [label="broadcast.124 \n f32[4,12,1,1]"];
	"subtract.125" [label="subtract.125 \n f32[4,12,1,1]"];
	"exponential.126" [label="exponential.126 \n f32[4,12,1,1]"];
	"convert.134" [label="convert.134 \n f32[4,12,1,1]"];
	"p13.27" [label="p13.27 \n f32[768,768]"];
	"dot.80" [label="dot.80 \n f32[4,768]"];
	"p14.28" [label="p14.28 \n f32[768]"];
	"broadcast.81" [label="broadcast.81 \n f32[4,768]"];
	"add.82" [label="add.82 \n f32[4,768]"];
	"reshape.85" [label="reshape.85 \n f32[1,4,12,64]"];
	"dot.137" [label="dot.137 \n f32[4,12,1,64]"];
	"add.138" [label="add.138 \n f32[4,12,1,64]"];
	"reduce.117" [label="reduce.117 \n f32[4,12,1]"];
	"reduce.127" [label="reduce.127 \n f32[4,12,1]"];
	"add.133" [label="add.133 \n f32[4,12,1]"];
	"convert.135" [label="convert.135 \n f32[4,12,1]"];
	"broadcast.139" [label="broadcast.139 \n f32[4,12,1,64]"];
	"divide.140" [label="divide.140 \n f32[4,12,1,64]"];
	"transpose.141" [label="transpose.141 \n f32[1,4,12,64]"];
	"reshape.152" [label="reshape.152 \n f32[4,768]"];
	"p15.29" [label="p15.29 \n f32[768,768]"];
	"dot.153" [label="dot.153 \n f32[4,768]"];
	"p16.30" [label="p16.30 \n f32[768]"];
	"broadcast.154" [label="broadcast.154 \n f32[4,768]"];
	"add.155" [label="add.155 \n f32[4,768]"];
	"transpose.156" [label="transpose.156 \n f32[768,4]"];
	"reshape.157" [label="reshape.157 \n f32[768,1,4]"];
	"add.158" [label="add.158 \n f32[768,1,4]"];
	"reshape.159" [label="reshape.159 \n f32[768,4]"];
	"convert.160" [label="convert.160 \n f32[768,4]"];
	"broadcast.162" [label="broadcast.162 \n f32[4]"];
	"broadcast.164" [label="broadcast.164 \n f32[4]"];
	"p17.31" [label="p17.31 \n f32[768]"];
	"broadcast.167" [label="broadcast.167 \n f32[768,4]"];
	"multiply.168" [label="multiply.168 \n f32[768,4]"];
	"p18.32" [label="p18.32 \n f32[768]"];
	"broadcast.169" [label="broadcast.169 \n f32[768,4]"];
	"add.170" [label="add.170 \n f32[768,4]"];
	"convert.171" [label="convert.171 \n f32[768,4]"];
	"reshape.172" [label="reshape.172 \n f32[768,1,4]"];
	"reshape.173" [label="reshape.173 \n f32[768,4]"];
	"p19.33" [label="p19.33 \n f32[768,3072]"];
	"dot.174" [label="dot.174 \n f32[4,3072]"];
	"p20.34" [label="p20.34 \n f32[3072]"];
	"broadcast.175" [label="broadcast.175 \n f32[4,3072]"];
	"add.176" [label="add.176 \n f32[4,3072]"];
	"p21.35" [label="p21.35 \n f32[768,3072]"];
	"dot.178" [label="dot.178 \n f32[4,768]"];
	"p22.36" [label="p22.36 \n f32[768]"];
	"broadcast.179" [label="broadcast.179 \n f32[4,768]"];
	"add.180" [label="add.180 \n f32[4,768]"];
	"transpose.181" [label="transpose.181 \n f32[768,4]"];
	"reshape.182" [label="reshape.182 \n f32[768,1,4]"];
	"add.183" [label="add.183 \n f32[768,1,4]"];
	"reshape.187" [label="reshape.187 \n f32[768,4]"];
	"convert.188" [label="convert.188 \n f32[768,4]"];
	"broadcast.190" [label="broadcast.190 \n f32[4]"];
	"broadcast.192" [label="broadcast.192 \n f32[4]"];
	"p23.38" [label="p23.38 \n f32[768]"];
	"broadcast.195" [label="broadcast.195 \n f32[768,4]"];
	"multiply.196" [label="multiply.196 \n f32[768,4]"];
	"p24.39" [label="p24.39 \n f32[768]"];
	"broadcast.197" [label="broadcast.197 \n f32[768,4]"];
	"add.198" [label="add.198 \n f32[768,4]"];
	"convert.199" [label="convert.199 \n f32[768,4]"];
	"reshape.200" [label="reshape.200 \n f32[768,1,4]"];
	"reshape.201" [label="reshape.201 \n f32[768,4]"];
	"dot.202" [label="dot.202 \n f32[50257,4]"];
	"reshape.203" [label="reshape.203 \n f32[50257,1,4]"];
	"scatter.142" [label="scatter.142 \n f32[128,4,12,64]"];
	"scatter.147" [label="scatter.147 \n f32[128,4,12,64]"];
	"tuple.204" [label="tuple.204 \n (f32[50257,1,4]"]; 
 	"p25.40" -> "custom-call.186";
	"iota.6" -> "broadcast.7";
	"p1.2" -> "broadcast.8";
	"broadcast.7" -> "compare.9";
	"broadcast.8" -> "compare.9";
	"compare.9" -> "broadcast.13";
	"iota.6" -> "broadcast.10";
	"p2.3" -> "broadcast.11";
	"broadcast.10" -> "compare.12";
	"broadcast.11" -> "compare.12";
	"compare.12" -> "broadcast.14";
	"broadcast.13" -> "and.15";
	"broadcast.14" -> "and.15";
	"and.15" -> "broadcast.92";
	"p0.1" -> "custom-call.37";
	"custom-call.37" -> "reshape.59";
	"reshape.59" -> "convert.60";
	"constant.61" -> "broadcast.62";
	"constant.63" -> "broadcast.64";
	"convert.60" -> "batch-norm-training.65";
	"broadcast.62" -> "batch-norm-training.65";
	"broadcast.64" -> "batch-norm-training.65";
	"batch-norm-training.65" -> "get-tuple-element.66";
	"p7.21" -> "custom-call.43";
	"custom-call.43" -> "broadcast.67";
	"get-tuple-element.66" -> "multiply.68";
	"broadcast.67" -> "multiply.68";
	"p8.22" -> "custom-call.44";
	"custom-call.44" -> "broadcast.69";
	"multiply.68" -> "add.70";
	"broadcast.69" -> "add.70";
	"add.70" -> "convert.71";
	"convert.71" -> "reshape.72";
	"reshape.72" -> "reshape.73";
	"p9.23" -> "custom-call.45";
	"reshape.73" -> "dot.74";
	"custom-call.45" -> "dot.74";
	"p10.24" -> "custom-call.46";
	"custom-call.46" -> "broadcast.75";
	"dot.74" -> "add.76";
	"broadcast.75" -> "add.76";
	"add.76" -> "reshape.83";
	"constant.86" -> "broadcast.87";
	"reshape.83" -> "divide.88";
	"broadcast.87" -> "divide.88";
	"p5.19" -> "custom-call.41";
	"divide.88" -> "dot.89";
	"custom-call.41" -> "dot.89";
	"constant.90" -> "broadcast.91";
	"broadcast.92" -> "select.93";
	"dot.89" -> "select.93";
	"broadcast.91" -> "select.93";
	"select.93" -> "reduce.100";
	"constant.99" -> "reduce.100";
	"reduce.100.MaxFunc.105" -> "reduce.100";
	"p1.2" -> "broadcast.17";
	"p2.3" -> "broadcast.16";
	"broadcast.17" -> "compare.18";
	"broadcast.16" -> "compare.18";
	"compare.18" -> "broadcast.97";
	"p11.25" -> "custom-call.47";
	"reshape.73" -> "dot.77";
	"custom-call.47" -> "dot.77";
	"p12.26" -> "custom-call.48";
	"custom-call.48" -> "broadcast.78";
	"dot.77" -> "add.79";
	"broadcast.78" -> "add.79";
	"add.79" -> "reshape.84";
	"divide.88" -> "dot.94";
	"reshape.84" -> "dot.94";
	"constant.95" -> "broadcast.96";
	"broadcast.97" -> "select.98";
	"dot.94" -> "select.98";
	"broadcast.96" -> "select.98";
	"select.98" -> "reduce.106";
	"constant.99" -> "reduce.106";
	"reduce.106.MaxFunc.111" -> "reduce.106";
	"reduce.100" -> "maximum.112";
	"reduce.106" -> "maximum.112";
	"maximum.112" -> "broadcast.113";
	"select.93" -> "subtract.114";
	"broadcast.113" -> "subtract.114";
	"subtract.114" -> "exponential.115";
	"exponential.115" -> "convert.123";
	"p6.20" -> "custom-call.42";
	"convert.123" -> "dot.136";
	"custom-call.42" -> "dot.136";
	"maximum.112" -> "broadcast.124";
	"select.98" -> "subtract.125";
	"broadcast.124" -> "subtract.125";
	"subtract.125" -> "exponential.126";
	"exponential.126" -> "convert.134";
	"p13.27" -> "custom-call.49";
	"reshape.73" -> "dot.80";
	"custom-call.49" -> "dot.80";
	"p14.28" -> "custom-call.50";
	"custom-call.50" -> "broadcast.81";
	"dot.80" -> "add.82";
	"broadcast.81" -> "add.82";
	"add.82" -> "reshape.85";
	"convert.134" -> "dot.137";
	"reshape.85" -> "dot.137";
	"dot.136" -> "add.138";
	"dot.137" -> "add.138";
	"exponential.115" -> "reduce.117";
	"constant.116" -> "reduce.117";
	"reduce.117.AddFunc.122" -> "reduce.117";
	"exponential.126" -> "reduce.127";
	"constant.116" -> "reduce.127";
	"reduce.127.AddFunc.132" -> "reduce.127";
	"reduce.117" -> "add.133";
	"reduce.127" -> "add.133";
	"add.133" -> "convert.135";
	"convert.135" -> "broadcast.139";
	"add.138" -> "divide.140";
	"broadcast.139" -> "divide.140";
	"divide.140" -> "transpose.141";
	"transpose.141" -> "reshape.152";
	"p15.29" -> "custom-call.51";
	"reshape.152" -> "dot.153";
	"custom-call.51" -> "dot.153";
	"p16.30" -> "custom-call.52";
	"custom-call.52" -> "broadcast.154";
	"dot.153" -> "add.155";
	"broadcast.154" -> "add.155";
	"add.155" -> "transpose.156";
	"transpose.156" -> "reshape.157";
	"reshape.157" -> "add.158";
	"custom-call.37" -> "add.158";
	"add.158" -> "reshape.159";
	"reshape.159" -> "convert.160";
	"constant.161" -> "broadcast.162";
	"constant.163" -> "broadcast.164";
	"convert.160" -> "batch-norm-training.165";
	"broadcast.162" -> "batch-norm-training.165";
	"broadcast.164" -> "batch-norm-training.165";
	"batch-norm-training.165" -> "get-tuple-element.166";
	"p17.31" -> "custom-call.53";
	"custom-call.53" -> "broadcast.167";
	"get-tuple-element.166" -> "multiply.168";
	"broadcast.167" -> "multiply.168";
	"p18.32" -> "custom-call.54";
	"custom-call.54" -> "broadcast.169";
	"multiply.168" -> "add.170";
	"broadcast.169" -> "add.170";
	"add.170" -> "convert.171";
	"convert.171" -> "reshape.172";
	"reshape.172" -> "reshape.173";
	"p19.33" -> "custom-call.55";
	"reshape.173" -> "dot.174";
	"custom-call.55" -> "dot.174";
	"p20.34" -> "custom-call.56";
	"custom-call.56" -> "broadcast.175";
	"dot.174" -> "add.176";
	"broadcast.175" -> "add.176";
	"add.176" -> "custom-call.177";
	"p21.35" -> "custom-call.57";
	"custom-call.177" -> "dot.178";
	"custom-call.57" -> "dot.178";
	"p22.36" -> "custom-call.58";
	"custom-call.58" -> "broadcast.179";
	"dot.178" -> "add.180";
	"broadcast.179" -> "add.180";
	"add.180" -> "transpose.181";
	"transpose.181" -> "reshape.182";
	"reshape.182" -> "add.183";
	"add.158" -> "add.183";
	"add.183" -> "reshape.187";
	"reshape.187" -> "convert.188";
	"constant.189" -> "broadcast.190";
	"constant.191" -> "broadcast.192";
	"convert.188" -> "batch-norm-training.193";
	"broadcast.190" -> "batch-norm-training.193";
	"broadcast.192" -> "batch-norm-training.193";
	"batch-norm-training.193" -> "get-tuple-element.194";
	"p23.38" -> "custom-call.184";
	"custom-call.184" -> "broadcast.195";
	"get-tuple-element.194" -> "multiply.196";
	"broadcast.195" -> "multiply.196";
	"p24.39" -> "custom-call.185";
	"custom-call.185" -> "broadcast.197";
	"multiply.196" -> "add.198";
	"broadcast.197" -> "add.198";
	"add.198" -> "convert.199";
	"convert.199" -> "reshape.200";
	"reshape.200" -> "reshape.201";
	"custom-call.186" -> "dot.202";
	"reshape.201" -> "dot.202";
	"dot.202" -> "reshape.203";
	"custom-call.41" -> "scatter.142";
	"p1.2" -> "scatter.142";
	"reshape.84" -> "scatter.142";
	"scatter.142.AssignFunc.146" -> "scatter.142";
	"custom-call.42" -> "scatter.147";
	"p1.2" -> "scatter.147";
	"reshape.85" -> "scatter.147";
	"scatter.147.AssignFunc.151" -> "scatter.147";
	"reshape.203" -> "tuple.204";
	"scatter.142" -> "tuple.204";
	"scatter.147" -> "tuple.204";
}