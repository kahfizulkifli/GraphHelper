digraph HloModule {
	"p17.18" [label="p17.18 \n f32[4096,50400]"];
	"p0.1" [label="p0.1 \n f32[4096,1,4]"];
	"reshape.36" [label="reshape.36 \n f32[4096,4]"];
	"convert.37" [label="convert.37 \n f32[4096,4]"];
	"broadcast.39" [label="broadcast.39 \n f32[4]"];
	"broadcast.41" [label="broadcast.41 \n f32[4]"];
	"p5.6" [label="p5.6 \n f32[4096]"];
	"broadcast.44" [label="broadcast.44 \n f32[4096,4]"];
	"multiply.45" [label="multiply.45 \n f32[4096,4]"];
	"p6.7" [label="p6.7 \n f32[4096]"];
	"broadcast.46" [label="broadcast.46 \n f32[4096,4]"];
	"add.47" [label="add.47 \n f32[4096,4]"];
	"convert.48" [label="convert.48 \n f32[4096,4]"];
	"reshape.49" [label="reshape.49 \n f32[4096,1,4]"];
	"reshape.123" [label="reshape.123 \n f32[4096,4]"];
	"p11.12" [label="p11.12 \n f32[4096,16384]"];
	"dot.124" [label="dot.124 \n f32[4,16384]"];
	"p12.13" [label="p12.13 \n f32[16384]"];
	"broadcast.125" [label="broadcast.125 \n f32[4,16384]"];
	"add.126" [label="add.126 \n f32[4,16384]"];
	"p13.14" [label="p13.14 \n f32[16384,4096]"];
	"dot.128" [label="dot.128 \n f32[4,4096]"];
	"p14.15" [label="p14.15 \n f32[4096]"];
	"broadcast.129" [label="broadcast.129 \n f32[4,4096]"];
	"add.130" [label="add.130 \n f32[4,4096]"];
	"transpose.131" [label="transpose.131 \n f32[4096,4]"];
	"reshape.132" [label="reshape.132 \n f32[4096,1,4]"];
	"p10.11" [label="p10.11 \n f32[4096,4096]"];
	"reshape.50" [label="reshape.50 \n f32[4096,4]"];
	"p7.8" [label="p7.8 \n f32[4096,4096]"];
	"dot.51" [label="dot.51 \n f32[4,4096]"];
	"reshape.52" [label="reshape.52 \n f32[1,64,256]"];
	"p1.2" [label="p1.2 \n f32[1,256,256]"];
	"dot.53" [label="dot.53 \n f32[1,64,256]"];
	"reshape.54" [label="reshape.54 \n f32[1,4,16,256]"];
	"convert.71" [label="convert.71 \n f32[1,4,16,256]"];
	"broadcast.73" [label="broadcast.73 \n f32[1,4,16,256]"];
	"divide.74" [label="divide.74 \n f32[1,4,16,256]"];
	"p3.4" [label="p3.4 \n f32[128,4,16,256]"];
	"p2.3" [label="p2.3 \n s32[1]"];
	"p8.9" [label="p8.9 \n f32[4096,4096]"];
	"dot.55" [label="dot.55 \n f32[4,4096]"];
	"reshape.56" [label="reshape.56 \n f32[1,64,256]"];
	"dot.57" [label="dot.57 \n f32[1,64,256]"];
	"reshape.58" [label="reshape.58 \n f32[1,4,16,256]"];
	"scatter.61" [label="scatter.61 \n f32[128,4,16,256]"];
	"convert.75" [label="convert.75 \n f32[128,4,16,256]"];
	"dot.76" [label="dot.76 \n f32[4,16,1,128]"];
	"iota.21" [label="iota.21 \n s32[1,128]"];
	"broadcast.24" [label="broadcast.24 \n s32[1,128]"];
	"compare.25" [label="compare.25 \n pred[1,128]"];
	"convert.26" [label="convert.26 \n f32[1,128]"];
	"iota.20" [label="iota.20 \n s32[1,128]"];
	"compare.22" [label="compare.22 \n pred[1,128]"];
	"convert.23" [label="convert.23 \n f32[1,128]"];
	"multiply.27" [label="multiply.27 \n f32[1,128]"];
	"broadcast.77" [label="broadcast.77 \n f32[4,16,1,128]"];
	"multiply.78" [label="multiply.78 \n f32[4,16,1,128]"];
	"broadcast.80" [label="broadcast.80 \n f32[1,128]"];
	"subtract.81" [label="subtract.81 \n f32[1,128]"];
	"broadcast.83" [label="broadcast.83 \n f32[1,128]"];
	"multiply.84" [label="multiply.84 \n f32[1,128]"];
	"broadcast.85" [label="broadcast.85 \n f32[4,16,1,128]"];
	"add.86" [label="add.86 \n f32[4,16,1,128]"];
	"reduce.88" [label="reduce.88 \n f32[4,16,1]"];
	"broadcast.94" [label="broadcast.94 \n f32[4,16,1,128]"];
	"subtract.95" [label="subtract.95 \n f32[4,16,1,128]"];
	"exponential.96" [label="exponential.96 \n f32[4,16,1,128]"];
	"reduce.98" [label="reduce.98 \n f32[4,16,1]"];
	"broadcast.104" [label="broadcast.104 \n f32[4,16,1,128]"];
	"divide.105" [label="divide.105 \n f32[4,16,1,128]"];
	"convert.106" [label="convert.106 \n f32[4,16,1,128]"];
	"p4.5" [label="p4.5 \n f32[128,4,16,256]"];
	"p9.10" [label="p9.10 \n f32[4096,4096]"];
	"dot.59" [label="dot.59 \n f32[4,4096]"];
	"reshape.60" [label="reshape.60 \n f32[1,4,16,256]"];
	"scatter.66" [label="scatter.66 \n f32[128,4,16,256]"];
	"dot.107" [label="dot.107 \n f32[4,16,1,256]"];
	"transpose.108" [label="transpose.108 \n f32[1,4,16,256]"];
	"reshape.109" [label="reshape.109 \n f32[4,4096]"];
	"dot.110" [label="dot.110 \n f32[4096,4]"];
	"reshape.111" [label="reshape.111 \n f32[4096,1,4]"];
	"add.118" [label="add.118 \n f32[4096,1,4]"];
	"add.133" [label="add.133 \n f32[4096,1,4]"];
	"reshape.138" [label="reshape.138 \n f32[4096,4]"];
	"convert.139" [label="convert.139 \n f32[4096,4]"];
	"broadcast.141" [label="broadcast.141 \n f32[4]"];
	"broadcast.143" [label="broadcast.143 \n f32[4]"];
	"p15.16" [label="p15.16 \n f32[4096]"];
	"broadcast.146" [label="broadcast.146 \n f32[4096,4]"];
	"multiply.147" [label="multiply.147 \n f32[4096,4]"];
	"p16.17" [label="p16.17 \n f32[4096]"];
	"broadcast.148" [label="broadcast.148 \n f32[4096,4]"];
	"add.149" [label="add.149 \n f32[4096,4]"];
	"convert.150" [label="convert.150 \n f32[4096,4]"];
	"reshape.151" [label="reshape.151 \n f32[4096,1,4]"];
	"reshape.152" [label="reshape.152 \n f32[4096,4]"];
	"dot.153" [label="dot.153 \n f32[50400,4]"];
	"p18.19" [label="p18.19 \n f32[50400]"];
	"broadcast.154" [label="broadcast.154 \n f32[50400,4]"];
	"add.155" [label="add.155 \n f32[50400,4]"];
	"reshape.156" [label="reshape.156 \n f32[50400,1,4]"];
	"tuple.157" [label="tuple.157 \n (f32[50400,1,4]"]; 
 	"p17.18" -> "custom-call.136";
	"p0.1" -> "reshape.36";
	"reshape.36" -> "convert.37";
	"constant.38" -> "broadcast.39";
	"constant.40" -> "broadcast.41";
	"convert.37" -> "batch-norm-training.42";
	"broadcast.39" -> "batch-norm-training.42";
	"broadcast.41" -> "batch-norm-training.42";
	"batch-norm-training.42" -> "get-tuple-element.43";
	"p5.6" -> "custom-call.28";
	"custom-call.28" -> "broadcast.44";
	"get-tuple-element.43" -> "multiply.45";
	"broadcast.44" -> "multiply.45";
	"p6.7" -> "custom-call.29";
	"custom-call.29" -> "broadcast.46";
	"multiply.45" -> "add.47";
	"broadcast.46" -> "add.47";
	"add.47" -> "convert.48";
	"convert.48" -> "reshape.49";
	"reshape.49" -> "reshape.123";
	"p11.12" -> "custom-call.119";
	"reshape.123" -> "dot.124";
	"custom-call.119" -> "dot.124";
	"p12.13" -> "custom-call.120";
	"custom-call.120" -> "broadcast.125";
	"dot.124" -> "add.126";
	"broadcast.125" -> "add.126";
	"add.126" -> "custom-call.127";
	"p13.14" -> "custom-call.121";
	"custom-call.127" -> "dot.128";
	"custom-call.121" -> "dot.128";
	"p14.15" -> "custom-call.122";
	"custom-call.122" -> "broadcast.129";
	"dot.128" -> "add.130";
	"broadcast.129" -> "add.130";
	"add.130" -> "transpose.131";
	"transpose.131" -> "reshape.132";
	"p10.11" -> "custom-call.33";
	"reshape.49" -> "reshape.50";
	"p7.8" -> "custom-call.30";
	"reshape.50" -> "dot.51";
	"custom-call.30" -> "dot.51";
	"dot.51" -> "reshape.52";
	"reshape.52" -> "dot.53";
	"p1.2" -> "dot.53";
	"dot.53" -> "reshape.54";
	"reshape.54" -> "convert.71";
	"constant.72" -> "broadcast.73";
	"convert.71" -> "divide.74";
	"broadcast.73" -> "divide.74";
	"p3.4" -> "custom-call.34";
	"p8.9" -> "custom-call.31";
	"reshape.50" -> "dot.55";
	"custom-call.31" -> "dot.55";
	"dot.55" -> "reshape.56";
	"reshape.56" -> "dot.57";
	"p1.2" -> "dot.57";
	"dot.57" -> "reshape.58";
	"custom-call.34" -> "scatter.61";
	"p2.3" -> "scatter.61";
	"reshape.58" -> "scatter.61";
	"scatter.61.AssignFunc.65" -> "scatter.61";
	"scatter.61" -> "convert.75";
	"divide.74" -> "dot.76";
	"convert.75" -> "dot.76";
	"p2.3" -> "broadcast.24";
	"iota.21" -> "compare.25";
	"broadcast.24" -> "compare.25";
	"compare.25" -> "convert.26";
	"iota.20" -> "compare.22";
	"iota.21" -> "compare.22";
	"compare.22" -> "convert.23";
	"convert.26" -> "multiply.27";
	"convert.23" -> "multiply.27";
	"multiply.27" -> "broadcast.77";
	"dot.76" -> "multiply.78";
	"broadcast.77" -> "multiply.78";
	"constant.79" -> "broadcast.80";
	"broadcast.80" -> "subtract.81";
	"multiply.27" -> "subtract.81";
	"constant.82" -> "broadcast.83";
	"subtract.81" -> "multiply.84";
	"broadcast.83" -> "multiply.84";
	"multiply.84" -> "broadcast.85";
	"multiply.78" -> "add.86";
	"broadcast.85" -> "add.86";
	"add.86" -> "reduce.88";
	"constant.87" -> "reduce.88";
	"reduce.88.MaxFunc.93" -> "reduce.88";
	"reduce.88" -> "broadcast.94";
	"add.86" -> "subtract.95";
	"broadcast.94" -> "subtract.95";
	"subtract.95" -> "exponential.96";
	"exponential.96" -> "reduce.98";
	"constant.97" -> "reduce.98";
	"reduce.98.AddFunc.103" -> "reduce.98";
	"reduce.98" -> "broadcast.104";
	"exponential.96" -> "divide.105";
	"broadcast.104" -> "divide.105";
	"divide.105" -> "convert.106";
	"p4.5" -> "custom-call.35";
	"p9.10" -> "custom-call.32";
	"reshape.50" -> "dot.59";
	"custom-call.32" -> "dot.59";
	"dot.59" -> "reshape.60";
	"custom-call.35" -> "scatter.66";
	"p2.3" -> "scatter.66";
	"reshape.60" -> "scatter.66";
	"scatter.66.AssignFunc.70" -> "scatter.66";
	"convert.106" -> "dot.107";
	"scatter.66" -> "dot.107";
	"dot.107" -> "transpose.108";
	"transpose.108" -> "reshape.109";
	"custom-call.33" -> "dot.110";
	"reshape.109" -> "dot.110";
	"dot.110" -> "reshape.111";
	"reshape.111" -> "all-reduce.112";
	"all-reduce.112.AddFunc.117" -> "all-reduce.112";
	"all-reduce.112" -> "add.118";
	"p0.1" -> "add.118";
	"reshape.132" -> "add.133";
	"add.118" -> "add.133";
	"add.133" -> "reshape.138";
	"reshape.138" -> "convert.139";
	"constant.140" -> "broadcast.141";
	"constant.142" -> "broadcast.143";
	"convert.139" -> "batch-norm-training.144";
	"broadcast.141" -> "batch-norm-training.144";
	"broadcast.143" -> "batch-norm-training.144";
	"batch-norm-training.144" -> "get-tuple-element.145";
	"p15.16" -> "custom-call.134";
	"custom-call.134" -> "broadcast.146";
	"get-tuple-element.145" -> "multiply.147";
	"broadcast.146" -> "multiply.147";
	"p16.17" -> "custom-call.135";
	"custom-call.135" -> "broadcast.148";
	"multiply.147" -> "add.149";
	"broadcast.148" -> "add.149";
	"add.149" -> "convert.150";
	"convert.150" -> "reshape.151";
	"reshape.151" -> "reshape.152";
	"custom-call.136" -> "dot.153";
	"reshape.152" -> "dot.153";
	"p18.19" -> "custom-call.137";
	"custom-call.137" -> "broadcast.154";
	"dot.153" -> "add.155";
	"broadcast.154" -> "add.155";
	"add.155" -> "reshape.156";
	"reshape.156" -> "tuple.157";
	"scatter.61" -> "tuple.157";
	"scatter.66" -> "tuple.157";
}