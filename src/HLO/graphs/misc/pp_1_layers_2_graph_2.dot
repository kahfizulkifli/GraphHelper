digraph HloModule {
	"p5.36" [label="p5.36 \n bf16[4,4]"];
	"p4.27" [label="p4.27 \n bf16[4,4]"];
	"transpose.35" [label="transpose.35 \n bf16[4,4]"];
	"dot.37" [label="dot.37 \n bf16[4,4]"];
	"p3.19" [label="p3.19 \n bf16[4]"];
	"broadcast.41" [label="broadcast.41 \n bf16[4,4]"];
	"add.42" [label="add.42 \n bf16[4,4]"];
	"p2.10" [label="p2.10 \n bf16[1,4]"];
	"reshape.3" [label="reshape.3 \n bf16[4]"];
	"broadcast.2" [label="broadcast.2 \n bf16[4,4]"];
	"convert.1" [label="convert.1 \n bf16[4]"];
	"p1.2" [label="p1.2 \n bf16[1]"];
	"reshape.7" [label="reshape.7 \n bf16[] reshape(bf16[1]"];
	"broadcast.3" [label="broadcast.3 \n bf16[4]"];
	"add.1" [label="add.1 \n bf16[4]"];
	"constant.49" [label="constant.49 \n bf16[] constant(0), metadata="];
	"reduce.55" [label="reduce.55 \n bf16[] reduce(bf16[4]"];
	"multiply.63" [label="multiply.63 \n bf16[] multiply(bf16[] %reduce.55, bf16[] %constant.4), metadata="];
	"p0.1" [label="p0.1 \n bf16[] parameter(0), frontend_attributes="];
	"multiply.65" [label="multiply.65 \n bf16[] multiply(bf16[] %multiply.63, bf16[] %p0.1), metadata="];
	"tuple.66" [label="tuple.66 \n (bf16[]) tuple(bf16[] %multiply.65), frontend_attributes="]; 
 	"p4.27" -> "custom-call.4";
	"custom-call.4" -> "transpose.35";
	"p5.36" -> "dot.37";
	"transpose.35" -> "dot.37";
	"p3.19" -> "custom-call.6";
	"custom-call.6" -> "broadcast.41";
	"dot.37" -> "add.42";
	"broadcast.41" -> "add.42";
	"p2.10" -> "custom-call.7";
	"custom-call.7" -> "reshape.3";
	"reshape.3" -> "broadcast.2";
	"add.42" -> "multiply";
	"broadcast.2" -> "multiply";
	"multiply" -> "convert";
	"convert" -> "reduce";
	"constant" -> "reduce";
	"scalar_add_computation" -> "reduce";
	"reduce" -> "convert.1";
	"p1.2" -> "custom-call.8";
	"custom-call.8" -> "reshape.7";
	"reshape.7" -> "broadcast.3";
	"convert.1" -> "add.1";
	"broadcast.3" -> "add.1";
	"add.1" -> "reduce.55";
	"constant.49" -> "reduce.55";
	"AddComputation.51" -> "reduce.55";
	"reduce.55" -> "multiply.63";
	"constant.4" -> "multiply.63";
	"multiply.63" -> "multiply.65";
	"p0.1" -> "multiply.65";
	"multiply.65" -> "tuple.66";
}